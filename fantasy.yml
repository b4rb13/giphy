---
openapi: 3.0.1
info:
  title: Fantasy Sports 1.0
  description: Betconstruct's Fantasy Sports Api
  version: '1.0'
paths:
  "/api/v1/AccountTypes":
    get:
      tags:
      - AccountTypes
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/AccountTypeModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/AccountTypeModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/AccountTypeModel"
    post:
      tags:
      - AccountTypes
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/AccountTypeModel"
          application/json:
            schema:
              "$ref": "#/components/schemas/AccountTypeModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/AccountTypeModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/AccountTypeModel"
      responses:
        '201':
          description: Success
    put:
      tags:
      - AccountTypes
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/AccountTypeModel"
          application/json:
            schema:
              "$ref": "#/components/schemas/AccountTypeModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/AccountTypeModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/AccountTypeModel"
      responses:
        '200':
          description: Success
    delete:
      tags:
      - AccountTypes
      parameters:
      - name: accountTypeId
        in: query
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Success
  "/api/v1/AccountTypes/{id}/permissions":
    post:
      tags:
      - AccountTypes
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      - name: permissionIds
        in: query
        schema:
          type: array
          items:
            type: integer
            format: int64
          nullable: true
      responses:
        '201':
          description: Success
    put:
      tags:
      - AccountTypes
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      - name: permissionIds
        in: query
        schema:
          type: array
          items:
            type: integer
            format: int64
          nullable: true
      responses:
        '200':
          description: Success
    delete:
      tags:
      - AccountTypes
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      responses:
        '200':
          description: Success
    get:
      tags:
      - AccountTypes
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/PermissionModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/PermissionModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/PermissionModel"
  "/api/v1/Banners":
    post:
      tags:
      - Banners
      parameters:
      - name: partnerId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                BannerType:
                  "$ref": "#/components/schemas/BannerType"
                ContestId:
                  type: integer
                  format: int64
                  nullable: true
                LanguageId:
                  type: integer
                  format: int64
                  nullable: true
                Link:
                  maxLength: 255
                  minLength: 0
                  type: string
                  nullable: true
                File:
                  type: string
                  format: binary
                  nullable: true
                Position:
                  "$ref": "#/components/schemas/ImagePositions"
            encoding:
              BannerType:
                style: form
              ContestId:
                style: form
              LanguageId:
                style: form
              Link:
                style: form
              File:
                style: form
              Position:
                style: form
      responses:
        '201':
          description: Success
    get:
      tags:
      - Banners
      parameters:
      - name: PartnerId
        in: query
        schema:
          type: integer
          format: int64
      - name: BannerId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: BannerType
        in: query
        schema:
          "$ref": "#/components/schemas/BannerType"
      - name: ContestId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: PictureId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: LanguageId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: Position
        in: query
        schema:
          "$ref": "#/components/schemas/ImagePositions"
      - name: Take
        in: query
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
          nullable: true
      - name: Skip
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: OrderColumnName
        in: query
        schema:
          type: string
          nullable: true
      - name: OrderByAsc
        in: query
        schema:
          type: boolean
          nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/BannerViewModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/BannerViewModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/BannerViewModel"
    put:
      tags:
      - Banners
      parameters:
      - name: partnerId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/BannerEditModel"
          application/json:
            schema:
              "$ref": "#/components/schemas/BannerEditModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/BannerEditModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/BannerEditModel"
      responses:
        '200':
          description: Success
  "/api/v1/Banners/{id}":
    delete:
      tags:
      - Banners
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      - name: partnerId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      responses:
        '200':
          description: Success
  "/api/v1/CancellationReasons":
    get:
      tags:
      - CancellationReasons
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CancellationReasonModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CancellationReasonModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CancellationReasonModel"
    post:
      tags:
      - CancellationReasons
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/CancellationReasonModel"
          application/json:
            schema:
              "$ref": "#/components/schemas/CancellationReasonModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/CancellationReasonModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/CancellationReasonModel"
      responses:
        '201':
          description: Success
    put:
      tags:
      - CancellationReasons
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/CancellationReasonModel"
          application/json:
            schema:
              "$ref": "#/components/schemas/CancellationReasonModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/CancellationReasonModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/CancellationReasonModel"
      responses:
        '200':
          description: Success
  "/api/v1/ClientLineups/{id}":
    get:
      tags:
      - ClientLineups
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
          default: 
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ClientLineupWithPlayerModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ClientLineupWithPlayerModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ClientLineupWithPlayerModel"
  "/api/v1/ClientLineups":
    get:
      tags:
      - ClientLineups
      parameters:
      - name: SportTypes
        in: query
        schema:
          type: array
          items:
            "$ref": "#/components/schemas/SportType"
          nullable: true
      - name: GameStyles
        in: query
        schema:
          type: array
          items:
            "$ref": "#/components/schemas/GameStyles"
          nullable: true
      - name: LineupSchemeIds
        in: query
        schema:
          type: array
          items:
            type: integer
            format: int64
          nullable: true
      - name: CompetitionIds
        in: query
        schema:
          type: array
          items:
            type: integer
            format: int64
          nullable: true
      - name: IsValid
        in: query
        schema:
          type: boolean
          nullable: true
      - name: LineupName
        in: query
        schema:
          type: string
          nullable: true
      - name: Archived
        in: query
        schema:
          type: boolean
      - name: Id
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: ClientId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: StartDate
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
      - name: EndDate
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
      - name: ContestId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: PartnerId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: IncludePlayers
        in: query
        schema:
          type: boolean
      - name: Take
        in: query
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
          nullable: true
      - name: Skip
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: OrderColumnName
        in: query
        schema:
          type: string
          nullable: true
      - name: OrderByAsc
        in: query
        schema:
          type: boolean
          nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ClientLineupModelDetailedResponseListModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ClientLineupModelDetailedResponseListModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ClientLineupModelDetailedResponseListModel"
  "/api/v1/ClientLineups/lobby":
    get:
      tags:
      - ClientLineups
      parameters:
      - name: SportTypes
        in: query
        schema:
          type: array
          items:
            "$ref": "#/components/schemas/SportType"
          nullable: true
      - name: GameStyles
        in: query
        schema:
          type: array
          items:
            "$ref": "#/components/schemas/GameStyles"
          nullable: true
      - name: LineupSchemeIds
        in: query
        schema:
          type: array
          items:
            type: integer
            format: int64
          nullable: true
      - name: CompetitionIds
        in: query
        schema:
          type: array
          items:
            type: integer
            format: int64
          nullable: true
      - name: IsValid
        in: query
        schema:
          type: boolean
          nullable: true
      - name: LineupName
        in: query
        schema:
          type: string
          nullable: true
      - name: Archived
        in: query
        schema:
          type: boolean
      - name: Id
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: ClientId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: StartDate
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
      - name: EndDate
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
      - name: ContestId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: PartnerId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: IncludePlayers
        in: query
        schema:
          type: boolean
      - name: Take
        in: query
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
          nullable: true
      - name: Skip
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: OrderColumnName
        in: query
        schema:
          type: string
          nullable: true
      - name: OrderByAsc
        in: query
        schema:
          type: boolean
          nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ClientLineupModelResponseListModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ClientLineupModelResponseListModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ClientLineupModelResponseListModel"
  "/api/v1/ClientLineups/{id}/matches":
    get:
      tags:
      - ClientLineups
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
          default: 
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/MatchLineupModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/MatchLineupModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/MatchLineupModel"
  "/api/v1/ClientLineups/{id}/players":
    get:
      tags:
      - ClientLineups
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
          default: 
      - name: teamId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/PlayersListForLineupModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/PlayersListForLineupModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/PlayersListForLineupModel"
  "/api/v1/ClientLineups/{id}/entryHistory":
    get:
      tags:
      - ClientLineups
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
          default: 
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/PlayersListForLineupModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/PlayersListForLineupModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/PlayersListForLineupModel"
  "/api/v1/Clients/balance":
    get:
      tags:
      - Clients
      summary: Getting signed client balance in the default currency from casino api.
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: number
                format: double
            application/json:
              schema:
                type: number
                format: double
            text/json:
              schema:
                type: number
                format: double
  "/api/v1/Clients":
    get:
      tags:
      - Clients
      parameters:
      - name: ClientId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: PartnerId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: UserName
        in: query
        schema:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
      - name: NickName
        in: query
        schema:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
      - name: Email
        in: query
        schema:
          maxLength: 100
          minLength: 0
          type: string
          nullable: true
      - name: CurrencyId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: JoinDateFrom
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
      - name: JoinDateTo
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
      - name: JoinDate
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
      - name: UserId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: IsBlacklisted
        in: query
        schema:
          type: boolean
          nullable: true
      - name: UserType
        in: query
        schema:
          "$ref": "#/components/schemas/Role"
      - name: UserExternalId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: ClientActivityReport.StartDate
        in: query
        schema:
          type: string
          format: date-time
      - name: ClientActivityReport.EndDate
        in: query
        schema:
          type: string
          format: date-time
      - name: ClientActivityReport.ClientFilterType
        in: query
        schema:
          "$ref": "#/components/schemas/ClientReportFilterType"
      - name: ClientPayReport.DateFrom
        in: query
        schema:
          type: string
          format: date-time
      - name: ClientPayReport.DateTo
        in: query
        schema:
          type: string
          format: date-time
      - name: ClientsCount
        in: query
        schema:
          type: integer
          format: int32
      - name: ExcelName
        in: query
        schema:
          type: string
          nullable: true
      - name: GenerateExcel
        in: query
        schema:
          type: boolean
          nullable: true
      - name: Take
        in: query
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
          nullable: true
      - name: Skip
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: OrderColumnName
        in: query
        schema:
          type: string
          nullable: true
      - name: OrderByAsc
        in: query
        schema:
          type: boolean
          nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ClientModelResponseListModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ClientModelResponseListModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ClientModelResponseListModel"
    put:
      tags:
      - Clients
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/ClientEditModel"
          application/json:
            schema:
              "$ref": "#/components/schemas/ClientEditModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/ClientEditModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/ClientEditModel"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ClientModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ClientModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ClientModel"
  "/api/v1/Clients/blockClient":
    post:
      tags:
      - Clients
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/ClientBlockingHistoryModel"
          application/json:
            schema:
              "$ref": "#/components/schemas/ClientBlockingHistoryModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/ClientBlockingHistoryModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/ClientBlockingHistoryModel"
      responses:
        '200':
          description: Success
  "/api/v1/Clients/permissions/{permissionId}":
    post:
      tags:
      - Clients
      summary: This api appending new permission to clients and ignoring existing
      parameters:
      - name: permissionId
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                type: integer
                format: int64
              nullable: true
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int64
              nullable: true
          text/json:
            schema:
              type: array
              items:
                type: integer
                format: int64
              nullable: true
          application/*+json:
            schema:
              type: array
              items:
                type: integer
                format: int64
              nullable: true
      responses:
        '200':
          description: Success
    delete:
      tags:
      - Clients
      parameters:
      - name: permissionId
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                type: integer
                format: int64
              nullable: true
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int64
              nullable: true
          text/json:
            schema:
              type: array
              items:
                type: integer
                format: int64
              nullable: true
          application/*+json:
            schema:
              type: array
              items:
                type: integer
                format: int64
              nullable: true
      responses:
        '200':
          description: Success
  "/api/v1/Clients/{id}/permissions":
    post:
      tags:
      - Clients
      summary: This api appending new permission and ignoring existing
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                type: integer
                format: int64
              nullable: true
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int64
              nullable: true
          text/json:
            schema:
              type: array
              items:
                type: integer
                format: int64
              nullable: true
          application/*+json:
            schema:
              type: array
              items:
                type: integer
                format: int64
              nullable: true
      responses:
        '200':
          description: Success
    delete:
      tags:
      - Clients
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                type: integer
                format: int64
              nullable: true
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int64
              nullable: true
          text/json:
            schema:
              type: array
              items:
                type: integer
                format: int64
              nullable: true
          application/*+json:
            schema:
              type: array
              items:
                type: integer
                format: int64
              nullable: true
      responses:
        '200':
          description: Success
  "/api/v1/Clients/report":
    get:
      tags:
      - Clients
      parameters:
      - name: StartDate
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
      - name: EndDate
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
      - name: PartnerIds
        in: query
        schema:
          type: array
          items:
            type: integer
            format: int64
          nullable: true
      - name: SegmentId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: IsNew
        in: query
        schema:
          type: boolean
          nullable: true
      - name: ReportType
        in: query
        schema:
          "$ref": "#/components/schemas/ClientReportType"
      - name: Take
        in: query
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
          nullable: true
      - name: Skip
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: OrderColumnName
        in: query
        schema:
          type: string
          nullable: true
      - name: OrderByAsc
        in: query
        schema:
          type: boolean
          nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ClientReportModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ClientReportModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ClientReportModel"
  "/api/v1/Clients/info":
    get:
      tags:
      - Clients
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ClientInfoModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ClientInfoModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ClientInfoModel"
  "/api/v1/Competitions":
    get:
      tags:
      - Competitions
      parameters:
      - name: Name
        in: query
        schema:
          maxLength: 150
          minLength: 0
          type: string
          nullable: true
      - name: SportId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: ExternalId
        in: query
        schema:
          maxLength: 100
          minLength: 0
          type: string
          nullable: true
      - name: Active
        in: query
        schema:
          type: boolean
          nullable: true
      - name: Take
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Skip
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: OrderColumnName
        in: query
        schema:
          type: string
          nullable: true
      - name: OrderByAsc
        in: query
        schema:
          type: boolean
          nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/CompetitionModelResponseListModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/CompetitionModelResponseListModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/CompetitionModelResponseListModel"
    put:
      tags:
      - Competitions
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/EditCompetitionViewModel"
          application/json:
            schema:
              "$ref": "#/components/schemas/EditCompetitionViewModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/EditCompetitionViewModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/EditCompetitionViewModel"
      responses:
        '200':
          description: Success
  "/api/v1/Competitions/{competitionId}/fixtures":
    get:
      tags:
      - Competitions
      parameters:
      - name: competitionId
        in: path
        required: true
        schema:
          type: integer
          format: int32
          default: 
      - name: fantasyGameTypes
        in: query
        schema:
          "$ref": "#/components/schemas/FantasyGameTypes"
      - name: upcomingRoundsCount
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/FixtureInfoModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/FixtureInfoModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/FixtureInfoModel"
  "/api/v1/Competitions/teams":
    get:
      tags:
      - Competitions
      parameters:
      - name: Id
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: SportId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: CompetitionId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: SeasonId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: Abbreviation
        in: query
        schema:
          type: string
          nullable: true
      - name: Name
        in: query
        schema:
          type: string
          nullable: true
      - name: ExternalId
        in: query
        schema:
          type: string
          nullable: true
      - name: ExcelName
        in: query
        schema:
          type: string
          nullable: true
      - name: GenerateExcel
        in: query
        schema:
          type: boolean
          nullable: true
      - name: Take
        in: query
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
          nullable: true
      - name: Skip
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: OrderColumnName
        in: query
        schema:
          type: string
          nullable: true
      - name: OrderByAsc
        in: query
        schema:
          type: boolean
          nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/TeamInfoModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/TeamInfoModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/TeamInfoModel"
  "/api/v1/Competitions/logoUrl":
    post:
      tags:
      - Competitions
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                CompetitionId:
                  type: integer
                  format: int64
                LogoFile:
                  type: string
                  format: binary
                  nullable: true
                IsBackoffice:
                  type: boolean
            encoding:
              CompetitionId:
                style: form
              LogoFile:
                style: form
              IsBackoffice:
                style: form
      responses:
        '200':
          description: Success
  "/api/v1/Competitions/{id}/logoUrl":
    delete:
      tags:
      - Competitions
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      - name: isBackoffice
        in: query
        schema:
          type: boolean
      responses:
        '200':
          description: Success
  "/api/v1/Competitions/enable":
    put:
      tags:
      - Competitions
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/CompetitionEnableModel"
              nullable: true
          application/json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/CompetitionEnableModel"
              nullable: true
          text/json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/CompetitionEnableModel"
              nullable: true
          application/*+json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/CompetitionEnableModel"
              nullable: true
      responses:
        '200':
          description: Success
  "/api/v1/Contests/{id}/players":
    get:
      tags:
      - Contests
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      - name: teamId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/PlayersListForLineupModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/PlayersListForLineupModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/PlayersListForLineupModel"
  "/api/v1/Contests":
    post:
      tags:
      - Contests
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/ContestSettingsModel"
          application/json:
            schema:
              "$ref": "#/components/schemas/ContestSettingsModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/ContestSettingsModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/ContestSettingsModel"
      responses:
        '201':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ContestModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ContestModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ContestModel"
  "/api/v1/Contests/nextContestTime":
    get:
      tags:
      - Contests
      summary: This api is intended for getting upcomming first contest
      parameters:
      - name: type
        in: query
        description: "this is LobbyType, which has 3 available values\r\n            Partner
          = 1 - for backoffice, which need backoffice credentionals\r\n            Client
          = 2 - for public lobby, it is available for guest access\r\n            MyContest
          = 3 - for already participant contests, which need for casino users credentionals"
        schema:
          "$ref": "#/components/schemas/LobbyType"
      - name: partnerId
        in: query
        description: this property required for unauthorized users
        schema:
          type: integer
          description: this property required for unauthorized users
          format: int64
          nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: integer
                format: int64
            application/json:
              schema:
                type: integer
                format: int64
            text/json:
              schema:
                type: integer
                format: int64
  "/api/v1/Contests/{id}/details/info":
    get:
      tags:
      - Contests
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      - name: partnerId
        in: query
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/FantasyContestDetailsInfoModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/FantasyContestDetailsInfoModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/FantasyContestDetailsInfoModel"
  "/api/v1/Contests/{id}/details/entries":
    get:
      tags:
      - Contests
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ContestEntryWebModuleModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ContestEntryWebModuleModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ContestEntryWebModuleModel"
  "/api/v1/Contests/{id}/details/prizeFund":
    get:
      tags:
      - Contests
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      - name: partnerId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/PrizeFundWebModuleModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/PrizeFundWebModuleModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/PrizeFundWebModuleModel"
  "/api/v1/Contests/{id}/details/fixtures":
    get:
      tags:
      - Contests
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/FixtureInfoModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/FixtureInfoModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/FixtureInfoModel"
  "/api/v1/Contests/{id}/details/matches":
    get:
      tags:
      - Contests
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/MatchViewModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/MatchViewModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/MatchViewModel"
  "/api/v1/Contests/passwordCheck":
    post:
      tags:
      - Contests
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/CanJoinRequestModel"
          application/json:
            schema:
              "$ref": "#/components/schemas/CanJoinRequestModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/CanJoinRequestModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/CanJoinRequestModel"
      responses:
        '202':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/CanJoinType"
            application/json:
              schema:
                "$ref": "#/components/schemas/CanJoinType"
            text/json:
              schema:
                "$ref": "#/components/schemas/CanJoinType"
  "/api/v1/Contests/{id}/canJoin":
    post:
      tags:
      - Contests
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          default: 
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/CanJoinRequestModel"
          application/json:
            schema:
              "$ref": "#/components/schemas/CanJoinRequestModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/CanJoinRequestModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/CanJoinRequestModel"
      responses:
        '202':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/CanJoinType"
            application/json:
              schema:
                "$ref": "#/components/schemas/CanJoinType"
            text/json:
              schema:
                "$ref": "#/components/schemas/CanJoinType"
  "/api/v1/Contests/{id}/cancel":
    post:
      tags:
      - Contests
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/ContestCancelModel"
          application/json:
            schema:
              "$ref": "#/components/schemas/ContestCancelModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/ContestCancelModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/ContestCancelModel"
      responses:
        '200':
          description: Success
  "/api/v1/Contests/prizeTypes":
    get:
      tags:
      - Contests
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/PrizeTypeModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/PrizeTypeModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/PrizeTypeModel"
  "/api/v1/Contests/isVerified":
    put:
      tags:
      - Contests
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/ContestIsVerifiedUpdateModel"
          application/json:
            schema:
              "$ref": "#/components/schemas/ContestIsVerifiedUpdateModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/ContestIsVerifiedUpdateModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/ContestIsVerifiedUpdateModel"
      responses:
        '200':
          description: Success
  "/api/v1/ContestTemplates":
    post:
      tags:
      - ContestTemplates
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/ContestSettingsBaseModel"
          application/json:
            schema:
              "$ref": "#/components/schemas/ContestSettingsBaseModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/ContestSettingsBaseModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/ContestSettingsBaseModel"
      responses:
        '201':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ContestTemplateModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ContestTemplateModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ContestTemplateModel"
    get:
      tags:
      - ContestTemplates
      parameters:
      - name: Id
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: CreationDateFrom
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
      - name: CreationDateTo
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
      - name: Name
        in: query
        schema:
          type: string
          nullable: true
      - name: PartnerCreatedContestType
        in: query
        schema:
          "$ref": "#/components/schemas/PartnerCreatedContestType"
      - name: PrizeFundType
        in: query
        schema:
          "$ref": "#/components/schemas/PrizeFundType"
      - name: ClientId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: Take
        in: query
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
          nullable: true
      - name: Skip
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: OrderColumnName
        in: query
        schema:
          type: string
          nullable: true
      - name: OrderByAsc
        in: query
        schema:
          type: boolean
          nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ContestTemplateModelResponseListModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ContestTemplateModelResponseListModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ContestTemplateModelResponseListModel"
  "/api/v1/ContestTemplates/{id}":
    put:
      tags:
      - ContestTemplates
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/ContestSettingsBaseModel"
          application/json:
            schema:
              "$ref": "#/components/schemas/ContestSettingsBaseModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/ContestSettingsBaseModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/ContestSettingsBaseModel"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ContestTemplateModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ContestTemplateModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ContestTemplateModel"
    get:
      tags:
      - ContestTemplates
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ContestTemplateModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ContestTemplateModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ContestTemplateModel"
    delete:
      tags:
      - ContestTemplates
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      responses:
        '200':
          description: Success
  "/api/v1/Currencies":
    get:
      tags:
      - Currencies
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CurrencyViewModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CurrencyViewModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CurrencyViewModel"
  "/api/v1/Currencies/{id}":
    get:
      tags:
      - Currencies
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/CurrencyViewModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/CurrencyViewModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/CurrencyViewModel"
  "/api/v1/Currencies/userCurrency":
    get:
      tags:
      - Currencies
      parameters:
      - name: changeDate
        in: query
        schema:
          type: string
          format: date-time
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/CurrencyModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/CurrencyModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/CurrencyModel"
  "/api/v1/Faqs":
    get:
      tags:
      - Faqs
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/FaqModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/FaqModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/FaqModel"
    post:
      tags:
      - Faqs
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/FaqModel"
          application/json:
            schema:
              "$ref": "#/components/schemas/FaqModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/FaqModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/FaqModel"
      responses:
        '201':
          description: Success
    put:
      tags:
      - Faqs
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/FaqModel"
              nullable: true
          application/json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/FaqModel"
              nullable: true
          text/json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/FaqModel"
              nullable: true
          application/*+json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/FaqModel"
              nullable: true
      responses:
        '200':
          description: Success
  "/api/v1/Faqs/{id}":
    delete:
      tags:
      - Faqs
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      responses:
        '200':
          description: Success
  "/api/v1/Glossary":
    get:
      tags:
      - Glossary
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/GlossaryModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/GlossaryModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/GlossaryModel"
    post:
      tags:
      - Glossary
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/GlossaryModel"
          application/json:
            schema:
              "$ref": "#/components/schemas/GlossaryModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/GlossaryModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/GlossaryModel"
      responses:
        '201':
          description: Success
    put:
      tags:
      - Glossary
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/GlossaryModel"
              nullable: true
          application/json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/GlossaryModel"
              nullable: true
          text/json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/GlossaryModel"
              nullable: true
          application/*+json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/GlossaryModel"
              nullable: true
      responses:
        '200':
          description: Success
  "/api/v1/Glossary/{id}":
    delete:
      tags:
      - Glossary
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      responses:
        '200':
          description: Success
  "/api/v1/Help":
    get:
      tags:
      - Help
      parameters:
      - name: HelpType
        in: query
        schema:
          "$ref": "#/components/schemas/HelpType"
      - name: IsDefault
        in: query
        schema:
          type: boolean
          nullable: true
      - name: IsEnable
        in: query
        schema:
          type: boolean
          nullable: true
      - name: LanguageId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: PartnerId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: SectionId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: DeviceType
        in: query
        schema:
          "$ref": "#/components/schemas/DeviceType"
      - name: Take
        in: query
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
          nullable: true
      - name: Skip
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: OrderColumnName
        in: query
        schema:
          type: string
          nullable: true
      - name: OrderByAsc
        in: query
        schema:
          type: boolean
          nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/HelpModelResponseListModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/HelpModelResponseListModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/HelpModelResponseListModel"
    post:
      tags:
      - Help
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/SectionModel"
          application/json:
            schema:
              "$ref": "#/components/schemas/SectionModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/SectionModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/SectionModel"
      responses:
        '201':
          description: Success
    put:
      tags:
      - Help
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/SectionModel"
          application/json:
            schema:
              "$ref": "#/components/schemas/SectionModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/SectionModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/SectionModel"
      responses:
        '200':
          description: Success
  "/api/v1/Help/{id}":
    delete:
      tags:
      - Help
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      responses:
        '200':
          description: Success
  "/api/v1/Help/sectionData":
    post:
      tags:
      - Help
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/SectionDataModel"
          application/json:
            schema:
              "$ref": "#/components/schemas/SectionDataModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/SectionDataModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/SectionDataModel"
      responses:
        '200':
          description: Success
  "/api/v1/Help/sectionData/{sectionId}/{languageId}/{deviceType}":
    delete:
      tags:
      - Help
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      - name: languageId
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      - name: deviceType
        in: path
        required: true
        schema:
          "$ref": "#/components/schemas/DeviceType"
      responses:
        '200':
          description: Success
  "/api/v1/Help/enable":
    put:
      tags:
      - Help
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/SectionEnableModel"
              nullable: true
          application/json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/SectionEnableModel"
              nullable: true
          text/json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/SectionEnableModel"
              nullable: true
          application/*+json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/SectionEnableModel"
              nullable: true
      responses:
        '200':
          description: Success
  "/api/v1/Languages":
    get:
      tags:
      - Languages
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/LangViewModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/LangViewModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/LangViewModel"
    post:
      tags:
      - Languages
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/LanguageViewModel"
          application/json:
            schema:
              "$ref": "#/components/schemas/LanguageViewModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/LanguageViewModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/LanguageViewModel"
      responses:
        '201':
          description: Success
  "/api/v1/Languages/{id}":
    put:
      tags:
      - Languages
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/LanguageViewModel"
          application/json:
            schema:
              "$ref": "#/components/schemas/LanguageViewModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/LanguageViewModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/LanguageViewModel"
      responses:
        '200':
          description: Success
  "/api/v1/Languages/{id}/translations":
    get:
      tags:
      - Languages
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      - name: GroupId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: IsTranslated
        in: query
        schema:
          type: boolean
          nullable: true
      - name: PartnerId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: object
                additionalProperties:
                  type: string
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
            text/json:
              schema:
                type: object
                additionalProperties:
                  type: string
    put:
      tags:
      - Languages
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/EditLanguageTranslationsViewModel"
          application/json:
            schema:
              "$ref": "#/components/schemas/EditLanguageTranslationsViewModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/EditLanguageTranslationsViewModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/EditLanguageTranslationsViewModel"
      responses:
        '200':
          description: Success
  "/api/v1/Languages/translationKey":
    post:
      tags:
      - Languages
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/LanguageTranslationViewModel"
          application/json:
            schema:
              "$ref": "#/components/schemas/LanguageTranslationViewModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/LanguageTranslationViewModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/LanguageTranslationViewModel"
      responses:
        '201':
          description: Success
    delete:
      tags:
      - Languages
      parameters:
      - name: key
        in: query
        schema:
          type: string
          nullable: true
      responses:
        '200':
          description: Success
  "/api/v1/Languages/ImportTranslationsFromExcel":
    put:
      tags:
      - Languages
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                FileData:
                  type: string
                  format: binary
                  nullable: true
            encoding:
              FileData:
                style: form
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/TranslationModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/TranslationModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/TranslationModel"
  "/api/v1/LeaderBoard":
    get:
      tags:
      - LeaderBoard
      parameters:
      - name: Id
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: StartDateFrom
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
      - name: StartDateTo
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
      - name: EndDateFrom
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
      - name: EndDateTo
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
      - name: Name
        in: query
        schema:
          type: string
          nullable: true
      - name: PrimaryPartnerId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: Types
        in: query
        schema:
          type: array
          items:
            "$ref": "#/components/schemas/LeaderBoardChallengeType"
          nullable: true
      - name: PartnerIds
        in: query
        schema:
          type: array
          items:
            type: integer
            format: int64
          nullable: true
      - name: PrizeFundTypes
        in: query
        schema:
          type: array
          items:
            "$ref": "#/components/schemas/PrizeFundType"
          nullable: true
      - name: BasePoints
        in: query
        schema:
          type: array
          items:
            "$ref": "#/components/schemas/LeaderBoardBasePoint"
          nullable: true
      - name: Statuses
        in: query
        schema:
          type: array
          items:
            "$ref": "#/components/schemas/LeaderBoardChallengeStatus"
          nullable: true
      - name: IncludePartners
        in: query
        schema:
          type: boolean
      - name: IncludePrizeItems
        in: query
        schema:
          type: boolean
      - name: Take
        in: query
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
          nullable: true
      - name: Skip
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: OrderColumnName
        in: query
        schema:
          type: string
          nullable: true
      - name: OrderByAsc
        in: query
        schema:
          type: boolean
          nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/LeaderBoardChallengeModelResponseListModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/LeaderBoardChallengeModelResponseListModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/LeaderBoardChallengeModelResponseListModel"
    post:
      tags:
      - LeaderBoard
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/AddOrUpdateLeaderBoardChallengeModel"
          application/json:
            schema:
              "$ref": "#/components/schemas/AddOrUpdateLeaderBoardChallengeModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/AddOrUpdateLeaderBoardChallengeModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/AddOrUpdateLeaderBoardChallengeModel"
      responses:
        '201':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/LeaderBoardChallengeModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/LeaderBoardChallengeModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/LeaderBoardChallengeModel"
  "/api/v1/LeaderBoard/{id}":
    get:
      tags:
      - LeaderBoard
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/LeaderBoardChallengeModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/LeaderBoardChallengeModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/LeaderBoardChallengeModel"
    put:
      tags:
      - LeaderBoard
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/AddOrUpdateLeaderBoardChallengeModel"
          application/json:
            schema:
              "$ref": "#/components/schemas/AddOrUpdateLeaderBoardChallengeModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/AddOrUpdateLeaderBoardChallengeModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/AddOrUpdateLeaderBoardChallengeModel"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/LeaderBoardChallengeModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/LeaderBoardChallengeModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/LeaderBoardChallengeModel"
  "/api/v1/LeaderBoard/{id}/cancel":
    post:
      tags:
      - LeaderBoard
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/CancelationModel"
          application/json:
            schema:
              "$ref": "#/components/schemas/CancelationModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/CancelationModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/CancelationModel"
      responses:
        '200':
          description: Success
  "/api/v1/LeaderBoard/{id}/clients":
    get:
      tags:
      - LeaderBoard
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      - name: ClientId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: ClientName
        in: query
        schema:
          type: string
          nullable: true
      - name: Id
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: PartnerId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: Take
        in: query
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
          nullable: true
      - name: Skip
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: OrderColumnName
        in: query
        schema:
          type: string
          nullable: true
      - name: OrderByAsc
        in: query
        schema:
          type: boolean
          nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/LeaderBoardChallengeClientModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/LeaderBoardChallengeClientModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/LeaderBoardChallengeClientModel"
  "/api/v1/LeaderBoard/template":
    post:
      tags:
      - LeaderBoard
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/AddOrUpdateLeaderBoardChallengeTemplateModel"
          application/json:
            schema:
              "$ref": "#/components/schemas/AddOrUpdateLeaderBoardChallengeTemplateModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/AddOrUpdateLeaderBoardChallengeTemplateModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/AddOrUpdateLeaderBoardChallengeTemplateModel"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/LeaderBoardChallengeTemplateModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/LeaderBoardChallengeTemplateModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/LeaderBoardChallengeTemplateModel"
    get:
      tags:
      - LeaderBoard
      parameters:
      - name: Id
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: Name
        in: query
        schema:
          type: string
          nullable: true
      - name: PrimaryPartnerId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: Types
        in: query
        schema:
          type: array
          items:
            "$ref": "#/components/schemas/LeaderBoardChallengeType"
          nullable: true
      - name: PartnerIds
        in: query
        schema:
          type: array
          items:
            type: integer
            format: int64
          nullable: true
      - name: PrizeFundTypes
        in: query
        schema:
          type: array
          items:
            "$ref": "#/components/schemas/PrizeFundType"
          nullable: true
      - name: BasePoints
        in: query
        schema:
          type: array
          items:
            "$ref": "#/components/schemas/LeaderBoardBasePoint"
          nullable: true
      - name: IncludeArchived
        in: query
        schema:
          type: boolean
      - name: IncludePartners
        in: query
        schema:
          type: boolean
      - name: IncludePrizeItems
        in: query
        schema:
          type: boolean
      - name: Take
        in: query
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
          nullable: true
      - name: Skip
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: OrderColumnName
        in: query
        schema:
          type: string
          nullable: true
      - name: OrderByAsc
        in: query
        schema:
          type: boolean
          nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/LeaderBoardChallengeTemplateModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/LeaderBoardChallengeTemplateModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/LeaderBoardChallengeTemplateModel"
  "/api/v1/LeaderBoard/template/{id}":
    put:
      tags:
      - LeaderBoard
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/AddOrUpdateLeaderBoardChallengeTemplateModel"
          application/json:
            schema:
              "$ref": "#/components/schemas/AddOrUpdateLeaderBoardChallengeTemplateModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/AddOrUpdateLeaderBoardChallengeTemplateModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/AddOrUpdateLeaderBoardChallengeTemplateModel"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/LeaderBoardChallengeTemplateModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/LeaderBoardChallengeTemplateModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/LeaderBoardChallengeTemplateModel"
    get:
      tags:
      - LeaderBoard
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/LeaderBoardChallengeTemplateModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/LeaderBoardChallengeTemplateModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/LeaderBoardChallengeTemplateModel"
    delete:
      tags:
      - LeaderBoard
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      responses:
        '200':
          description: Success
  "/api/v1/Licences":
    get:
      tags:
      - Licences
      parameters:
      - name: Id
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: Name
        in: query
        schema:
          type: string
          nullable: true
      - name: Take
        in: query
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
          nullable: true
      - name: Skip
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: OrderColumnName
        in: query
        schema:
          type: string
          nullable: true
      - name: OrderByAsc
        in: query
        schema:
          type: boolean
          nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/LicenceListModelResponseListModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/LicenceListModelResponseListModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/LicenceListModelResponseListModel"
    post:
      tags:
      - Licences
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/LicenceModel"
          application/json:
            schema:
              "$ref": "#/components/schemas/LicenceModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/LicenceModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/LicenceModel"
      responses:
        '201':
          description: Success
    put:
      tags:
      - Licences
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/LicenceModel"
          application/json:
            schema:
              "$ref": "#/components/schemas/LicenceModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/LicenceModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/LicenceModel"
      responses:
        '200':
          description: Success
  "/api/v1/Licences/{id}":
    delete:
      tags:
      - Licences
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      responses:
        '200':
          description: Success
  "/api/v1/Licences/{id}/partners":
    put:
      tags:
      - Licences
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                type: integer
                format: int64
              nullable: true
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int64
              nullable: true
          text/json:
            schema:
              type: array
              items:
                type: integer
                format: int64
              nullable: true
          application/*+json:
            schema:
              type: array
              items:
                type: integer
                format: int64
              nullable: true
      responses:
        '200':
          description: Success
  "/api/v1/LineUps/{id}":
    get:
      tags:
      - LineUps
      summary: Get casino user(player)'s created lineup. It is not accessible from
        backoffice.
      parameters:
      - name: id
        in: path
        description: client lineup Id
        required: true
        schema:
          type: integer
          description: client lineup Id
          format: int32
          default: 
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/LineUpModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/LineUpModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/LineUpModel"
  "/api/v1/LineUps/{sportId}/LineupSchemes":
    get:
      tags:
      - LineUps
      parameters:
      - name: sportId
        in: path
        required: true
        schema:
          type: integer
          format: int32
          default: 
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/LineUpFormationModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/LineUpFormationModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/LineUpFormationModel"
  "/api/v1/LineUps":
    get:
      tags:
      - LineUps
      parameters:
      - name: LineupId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: Name
        in: query
        schema:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
      - name: StartDate
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
      - name: EndDate
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
      - name: ClientId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: UserExternalId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: SportId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: PartnerId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: PartnerName
        in: query
        schema:
          type: string
          nullable: true
      - name: ContestId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: SchemeId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: ExcelName
        in: query
        schema:
          type: string
          nullable: true
      - name: IncludePlayers
        in: query
        schema:
          type: boolean
      - name: GenerateExcel
        in: query
        schema:
          type: boolean
          nullable: true
      - name: Take
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Skip
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: OrderColumnName
        in: query
        schema:
          type: string
          nullable: true
      - name: OrderByAsc
        in: query
        schema:
          type: boolean
          nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/LineUpModelResponseListModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/LineUpModelResponseListModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/LineUpModelResponseListModel"
  "/api/v1/LineUps/randomName":
    get:
      tags:
      - LineUps
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
  "/api/v1/LineUps/saveLineUp":
    post:
      tags:
      - LineUps
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/LineUpSettingsModel"
          application/json:
            schema:
              "$ref": "#/components/schemas/LineUpSettingsModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/LineUpSettingsModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/LineUpSettingsModel"
      responses:
        '200':
          description: Success
  "/api/v1/LineUps/{contestId}/saveLineUp":
    get:
      tags:
      - LineUps
      parameters:
      - name: contestId
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/LineUpSettingsModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/LineUpSettingsModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/LineUpSettingsModel"
  "/api/v1/LineUps/salaryCap":
    get:
      tags:
      - LineUps
      parameters:
      - name: gameStyles
        in: query
        schema:
          "$ref": "#/components/schemas/GameStyles"
      responses:
        '200':
          description: Success
  "/api/v1/Lobby":
    get:
      tags:
      - Lobby
      parameters:
      - name: ContestId
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: ContestName
        in: query
        schema:
          maxLength: 200
          minLength: 0
          type: string
          nullable: true
      - name: PartnerId
        in: query
        schema:
          type: integer
          format: int64
      - name: LobbyType
        in: query
        schema:
          "$ref": "#/components/schemas/LobbyType"
      - name: ContestTypes
        in: query
        schema:
          type: array
          items:
            "$ref": "#/components/schemas/FantasyContestType"
          nullable: true
      - name: IsDaily
        in: query
        schema:
          type: boolean
          nullable: true
      - name: PrizeFundType
        in: query
        schema:
          type: array
          items:
            "$ref": "#/components/schemas/PrizeFundType"
          nullable: true
      - name: GameStyles
        in: query
        schema:
          type: array
          items:
            "$ref": "#/components/schemas/GameStyles"
          nullable: true
      - name: ContestGarantionType
        in: query
        schema:
          "$ref": "#/components/schemas/ContestGarantionType"
      - name: IsFreeRoll
        in: query
        schema:
          type: boolean
          nullable: true
      - name: CreatedTypes
        in: query
        schema:
          type: array
          items:
            "$ref": "#/components/schemas/ContestCreatedType"
          nullable: true
      - name: MinEntryFee
        in: query
        schema:
          pattern: "[\\d]{1,8}([.,][\\d]{1,10})?"
          type: number
          format: double
          nullable: true
      - name: MaxEntryFee
        in: query
        schema:
          pattern: "[\\d]{1,8}([.,][\\d]{1,10})?"
          type: number
          format: double
          nullable: true
      - name: Competitions
        in: query
        schema:
          type: array
          items:
            type: integer
            format: int64
          nullable: true
      - name: ContestCreationDateFrom
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
      - name: ContestCreationDateTo
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
      - name: StartDateFrom
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
      - name: StartDateTo
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
      - name: StatusList
        in: query
        schema:
          type: array
          items:
            "$ref": "#/components/schemas/ContestStatusTypes"
          nullable: true
      - name: AccessTypes
        in: query
        schema:
          type: array
          items:
            "$ref": "#/components/schemas/ContestAccessType"
          nullable: true
      - name: FromEntry
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: ToEntry
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: ClientLineupId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: SportIds
        in: query
        schema:
          type: array
          items:
            "$ref": "#/components/schemas/SportType"
          nullable: true
      - name: CurrentPartnersContests
        in: query
        schema:
          type: boolean
          nullable: true
      - name: PartnerCreatedType
        in: query
        schema:
          "$ref": "#/components/schemas/PartnerCreatedContestType"
      - name: Skip
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Take
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: IsMultiEntry
        in: query
        schema:
          type: boolean
          nullable: true
      - name: TicketId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: OrderConfiguration.ColumnNumber
        in: query
        schema:
          type: integer
          format: int32
      - name: OrderConfiguration.IsAsc
        in: query
        schema:
          type: boolean
      - name: ThenByConfigurations
        in: query
        schema:
          type: array
          items:
            "$ref": "#/components/schemas/ThenBySortConfiguration"
          nullable: true
      - name: ExcelName
        in: query
        schema:
          type: string
          nullable: true
      - name: GenerateExcel
        in: query
        schema:
          type: boolean
          nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/LobbyModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/LobbyModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/LobbyModel"
  "/api/v1/Matches/{seasonId}/matchesBySeason":
    get:
      tags:
      - Matches
      parameters:
      - name: seasonId
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      - name: PlayerId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: TeamId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: Skip
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: Take
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/FixtureMatchModelWithCount"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/FixtureMatchModelWithCount"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/FixtureMatchModelWithCount"
  "/api/v1/Matches/upcomingMatches":
    get:
      tags:
      - Matches
      parameters:
      - name: PartnerId
        in: query
        schema:
          type: integer
          format: int64
      - name: SportId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: CompetitionId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: StartDate
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
      - name: EndDate
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
      - name: Take
        in: query
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
          nullable: true
      - name: Skip
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: OrderColumnName
        in: query
        schema:
          type: string
          nullable: true
      - name: OrderByAsc
        in: query
        schema:
          type: boolean
          nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/MatchUpcomingModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/MatchUpcomingModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/MatchUpcomingModel"
  "/api/v1/Matches/{id}/playerPoints":
    get:
      tags:
      - Matches
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      responses:
        '200':
          description: Success
  "/api/v1/Matches/matchGroups":
    get:
      tags:
      - Matches
      parameters:
      - name: CompetitionId
        in: query
        schema:
          type: integer
          format: int64
      - name: GameStyles
        in: query
        schema:
          type: array
          items:
            "$ref": "#/components/schemas/GameStyles"
          nullable: true
      - name: PartnerId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      responses:
        '200':
          description: Success
  "/api/v1/Matches/matchGroups/detailed":
    get:
      tags:
      - Matches
      parameters:
      - name: Id
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: CompetitionId
        in: query
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/FixtureMatchModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/FixtureMatchModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/FixtureMatchModel"
  "/api/v1/Matches/matchGroups/detailedForLineup":
    get:
      tags:
      - Matches
      parameters:
      - name: Id
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: CompetitionId
        in: query
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/MatchLineupModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/MatchLineupModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/MatchLineupModel"
  "/api/v1/Matches/matchGroups/detailed/players":
    get:
      tags:
      - Matches
      parameters:
      - name: GameStyle
        in: query
        schema:
          "$ref": "#/components/schemas/GameStyles"
      - name: TeamId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: Id
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: CompetitionId
        in: query
        required: true
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/PlayersListForLineupModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/PlayersListForLineupModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/PlayersListForLineupModel"
  "/api/v1/MatchEventTypes":
    get:
      tags:
      - MatchEventTypes
      parameters:
      - name: sportId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: position
        in: query
        schema:
          "$ref": "#/components/schemas/SportPositions"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/MatchEventTypeOutModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/MatchEventTypeOutModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/MatchEventTypeOutModel"
  "/api/v1/NetworkGroups":
    get:
      tags:
      - NetworkGroups
      responses:
        '200':
          description: Success
    post:
      tags:
      - NetworkGroups
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/NetworkGroupViewModel"
          application/json:
            schema:
              "$ref": "#/components/schemas/NetworkGroupViewModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/NetworkGroupViewModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/NetworkGroupViewModel"
      responses:
        '201':
          description: Success
  "/api/v1/NetworkGroups/{id}":
    get:
      tags:
      - NetworkGroups
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      responses:
        '200':
          description: Success
    put:
      tags:
      - NetworkGroups
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/NetworkGroupViewModel"
          application/json:
            schema:
              "$ref": "#/components/schemas/NetworkGroupViewModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/NetworkGroupViewModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/NetworkGroupViewModel"
      responses:
        '200':
          description: Success
    delete:
      tags:
      - NetworkGroups
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      responses:
        '200':
          description: Success
  "/api/v1/NetworkGroups/{id}/partners":
    get:
      tags:
      - NetworkGroups
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      responses:
        '200':
          description: Success
  "/api/v1/NetworkGroups/{networkGroupId}/partners/{partnerId}":
    post:
      tags:
      - NetworkGroups
      parameters:
      - name: networkGroupId
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      - name: partnerId
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      responses:
        '200':
          description: Success
    delete:
      tags:
      - NetworkGroups
      parameters:
      - name: networkGroupId
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      - name: partnerId
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      responses:
        '200':
          description: Success
  "/api/v1/Partners":
    get:
      tags:
      - Partners
      parameters:
      - name: PartnerId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: Name
        in: query
        schema:
          maxLength: 35
          minLength: 0
          type: string
          nullable: true
      - name: SegmentId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: Status
        in: query
        schema:
          "$ref": "#/components/schemas/PartnerStatusEnumType"
      - name: IsDeleted
        in: query
        schema:
          type: boolean
          nullable: true
      - name: ExcelName
        in: query
        schema:
          type: string
          nullable: true
      - name: GenerateExcel
        in: query
        schema:
          type: boolean
          nullable: true
      - name: Take
        in: query
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
          nullable: true
      - name: Skip
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: OrderColumnName
        in: query
        schema:
          type: string
          nullable: true
      - name: OrderByAsc
        in: query
        schema:
          type: boolean
          nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/PartnerViewModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/PartnerViewModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/PartnerViewModel"
    post:
      tags:
      - Partners
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/AddPartnerInternalViewModel"
          application/json:
            schema:
              "$ref": "#/components/schemas/AddPartnerInternalViewModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/AddPartnerInternalViewModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/AddPartnerInternalViewModel"
      responses:
        '201':
          description: Success
    put:
      tags:
      - Partners
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/PartnerEditModel"
          application/json:
            schema:
              "$ref": "#/components/schemas/PartnerEditModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/PartnerEditModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/PartnerEditModel"
      responses:
        '200':
          description: Success
  "/api/v1/Partners/{id}":
    delete:
      tags:
      - Partners
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      responses:
        '200':
          description: Success
  "/api/v1/Partners/{id}/settings":
    get:
      tags:
      - Partners
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
          nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/PartnerSettingsViewModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/PartnerSettingsViewModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/PartnerSettingsViewModel"
    put:
      tags:
      - Partners
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/PartnerConfigurationModel"
          application/json:
            schema:
              "$ref": "#/components/schemas/PartnerConfigurationModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/PartnerConfigurationModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/PartnerConfigurationModel"
      responses:
        '200':
          description: Success
  "/api/v1/Partners/{id}/pallete":
    get:
      tags:
      - Partners
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/PartnerPaletteViewModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/PartnerPaletteViewModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/PartnerPaletteViewModel"
  "/api/v1/Partners/pallete/generate":
    post:
      tags:
      - Partners
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/StartingColorKitViewModel"
          application/json:
            schema:
              "$ref": "#/components/schemas/StartingColorKitViewModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/StartingColorKitViewModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/StartingColorKitViewModel"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/PartnerPaletteViewModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/PartnerPaletteViewModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/PartnerPaletteViewModel"
  "/api/v1/Partners/{id}/palette":
    put:
      tags:
      - Partners
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/PartnerPaletteViewModel"
          application/json:
            schema:
              "$ref": "#/components/schemas/PartnerPaletteViewModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/PartnerPaletteViewModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/PartnerPaletteViewModel"
      responses:
        '200':
          description: Success
  "/api/v1/Partners/{id}/prizeFunds":
    put:
      tags:
      - Partners
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/ChangePartnerPrizeTypeViewModel"
              nullable: true
          application/json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/ChangePartnerPrizeTypeViewModel"
              nullable: true
          text/json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/ChangePartnerPrizeTypeViewModel"
              nullable: true
          application/*+json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/ChangePartnerPrizeTypeViewModel"
              nullable: true
      responses:
        '200':
          description: Success
  "/api/v1/Partners/account":
    post:
      tags:
      - Partners
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/AddBackofficeAccountModel"
          application/json:
            schema:
              "$ref": "#/components/schemas/AddBackofficeAccountModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/AddBackofficeAccountModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/AddBackofficeAccountModel"
      responses:
        '201':
          description: Success
  "/api/v1/Partners/{id}/sports":
    get:
      tags:
      - Partners
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/PartnerSportViewModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/PartnerSportViewModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/PartnerSportViewModel"
  "/api/v1/Partners/{partnerId}/sports":
    put:
      tags:
      - Partners
      parameters:
      - name: partnerId
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/PartnerSportUpdateModel"
              nullable: true
          application/json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/PartnerSportUpdateModel"
              nullable: true
          text/json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/PartnerSportUpdateModel"
              nullable: true
          application/*+json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/PartnerSportUpdateModel"
              nullable: true
      responses:
        '200':
          description: Success
  "/api/v1/Partners/activity":
    get:
      tags:
      - Partners
      parameters:
      - name: StartDate
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
      - name: EndDate
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
      - name: PartnerIds
        in: query
        schema:
          type: array
          items:
            type: integer
            format: int64
          nullable: true
      - name: GenerateExcel
        in: query
        schema:
          type: boolean
          nullable: true
      - name: SegmentId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ActivityModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ActivityModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ActivityModel"
  "/api/v1/Partners/{id}/competitions":
    get:
      tags:
      - Partners
      summary: This api is deprecated, please use v2
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        schema:
          type: integer
          description: ''
          format: int64
          default: 
      - name: Name
        in: query
        schema:
          type: string
          nullable: true
      - name: SportId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: ExternalId
        in: query
        schema:
          type: string
          nullable: true
      - name: Active
        in: query
        schema:
          type: boolean
      - name: Take
        in: query
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
          nullable: true
      - name: Skip
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: OrderColumnName
        in: query
        schema:
          type: string
          nullable: true
      - name: OrderByAsc
        in: query
        schema:
          type: boolean
          nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CompetitionModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CompetitionModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CompetitionModel"
  "/api/v1/Partners/competition":
    put:
      tags:
      - Partners
      parameters:
      - name: partnerId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/PartnerCompetitionModel"
              nullable: true
          application/json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/PartnerCompetitionModel"
              nullable: true
          text/json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/PartnerCompetitionModel"
              nullable: true
          application/*+json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/PartnerCompetitionModel"
              nullable: true
      responses:
        '200':
          description: Success
  "/api/v1/Partners/{id}/rules":
    get:
      tags:
      - Partners
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/RuleModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/RuleModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/RuleModel"
    put:
      tags:
      - Partners
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/RuleModel"
          application/json:
            schema:
              "$ref": "#/components/schemas/RuleModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/RuleModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/RuleModel"
      responses:
        '200':
          description: Success
  "/api/v1/Partners/{id}/faqs":
    get:
      tags:
      - Partners
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/FaqModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/FaqModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/FaqModel"
    put:
      tags:
      - Partners
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/FaqModel"
          application/json:
            schema:
              "$ref": "#/components/schemas/FaqModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/FaqModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/FaqModel"
      responses:
        '200':
          description: Success
  "/api/v1/Partners/{id}/glossaries":
    get:
      tags:
      - Partners
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/GlossaryModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/GlossaryModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/GlossaryModel"
    put:
      tags:
      - Partners
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/GlossaryModel"
          application/json:
            schema:
              "$ref": "#/components/schemas/GlossaryModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/GlossaryModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/GlossaryModel"
      responses:
        '200':
          description: Success
  "/api/v1/Partners/{id}/fieldAccessConfigs":
    get:
      tags:
      - Partners
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/FieldAccessDataItemsResponseListModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/FieldAccessDataItemsResponseListModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/FieldAccessDataItemsResponseListModel"
  "/api/v1/Partners/{id}/permissions":
    get:
      tags:
      - Partners
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      - name: Id
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: Name
        in: query
        schema:
          type: string
          nullable: true
      - name: Take
        in: query
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
          nullable: true
      - name: Skip
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: OrderColumnName
        in: query
        schema:
          type: string
          nullable: true
      - name: OrderByAsc
        in: query
        schema:
          type: boolean
          nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/PermissionsResultModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/PermissionsResultModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/PermissionsResultModel"
  "/api/v1/Partners/{partnerId}/networkGroups":
    get:
      tags:
      - Partners
      parameters:
      - name: partnerId
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/NetworkGroup"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/NetworkGroup"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/NetworkGroup"
  "/api/v1/Permissions":
    get:
      tags:
      - Permissions
      parameters:
      - name: Id
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: Name
        in: query
        schema:
          type: string
          nullable: true
      - name: Take
        in: query
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
          nullable: true
      - name: Skip
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: OrderColumnName
        in: query
        schema:
          type: string
          nullable: true
      - name: OrderByAsc
        in: query
        schema:
          type: boolean
          nullable: true
      responses:
        '200':
          description: Success
    post:
      tags:
      - Permissions
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: string
              nullable: true
          application/json:
            schema:
              type: string
              nullable: true
          text/json:
            schema:
              type: string
              nullable: true
          application/*+json:
            schema:
              type: string
              nullable: true
      responses:
        '201':
          description: Success
    put:
      tags:
      - Permissions
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/PermissionModel"
          application/json:
            schema:
              "$ref": "#/components/schemas/PermissionModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/PermissionModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/PermissionModel"
      responses:
        '200':
          description: Success
    delete:
      tags:
      - Permissions
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                type: integer
                format: int64
              nullable: true
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int64
              nullable: true
          text/json:
            schema:
              type: array
              items:
                type: integer
                format: int64
              nullable: true
          application/*+json:
            schema:
              type: array
              items:
                type: integer
                format: int64
              nullable: true
      responses:
        '200':
          description: Success
  "/api/v1/Picture/backgroundImage":
    post:
      tags:
      - Picture
      parameters:
      - name: partnerId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                IsSelected:
                  type: boolean
                BackgroundImageType:
                  "$ref": "#/components/schemas/BackgroundImageType"
                BackgroundImageFile:
                  type: string
                  format: binary
                  nullable: true
            encoding:
              IsSelected:
                style: form
              BackgroundImageType:
                style: form
              BackgroundImageFile:
                style: form
      responses:
        '201':
          description: Success
    get:
      tags:
      - Picture
      parameters:
      - name: PartnerId
        in: query
        schema:
          type: integer
          format: int64
      - name: BackgroundImageId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: IsSelected
        in: query
        schema:
          type: boolean
          nullable: true
      - name: PictureId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: Take
        in: query
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
          nullable: true
      - name: Skip
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: OrderColumnName
        in: query
        schema:
          type: string
          nullable: true
      - name: OrderByAsc
        in: query
        schema:
          type: boolean
          nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/BackgroundImageViewModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/BackgroundImageViewModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/BackgroundImageViewModel"
    put:
      tags:
      - Picture
      parameters:
      - name: partnerId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/BackgroundImageEditModel"
          application/json:
            schema:
              "$ref": "#/components/schemas/BackgroundImageEditModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/BackgroundImageEditModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/BackgroundImageEditModel"
      responses:
        '200':
          description: Success
  "/api/v1/Picture/{id}/backgroundImage":
    delete:
      tags:
      - Picture
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      - name: partnerId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      responses:
        '200':
          description: Success
  "/api/v1/Players/{id}/lineupEvents":
    get:
      tags:
      - Players
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      - name: lineupId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/PlayerLineupEvents"
            application/json:
              schema:
                "$ref": "#/components/schemas/PlayerLineupEvents"
            text/json:
              schema:
                "$ref": "#/components/schemas/PlayerLineupEvents"
  "/api/v1/Players":
    get:
      tags:
      - Players
      parameters:
      - name: Id
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: Name
        in: query
        schema:
          maxLength: 255
          minLength: 0
          type: string
          nullable: true
      - name: ExternalId
        in: query
        schema:
          maxLength: 100
          minLength: 0
          type: string
          nullable: true
      - name: SportId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: Team
        in: query
        schema:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
      - name: CompetionId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: MatchId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: Take
        in: query
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
          nullable: true
      - name: Skip
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: OrderColumnName
        in: query
        schema:
          type: string
          nullable: true
      - name: OrderByAsc
        in: query
        schema:
          type: boolean
          nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/PlayerModelResponseListModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/PlayerModelResponseListModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/PlayerModelResponseListModel"
  "/api/v1/Players/{id}/topEvent":
    get:
      tags:
      - Players
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      - name: competitionId
        in: query
        schema:
          type: integer
          format: int64
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/PositionEventModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/PositionEventModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/PositionEventModel"
  "/api/v1/PlayerStatistics/{playerId}/info":
    get:
      tags:
      - PlayerStatistics
      parameters:
      - name: playerId
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      - name: partnerId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: competitionId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: gameStyle
        in: query
        schema:
          "$ref": "#/components/schemas/GameStyles"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/PlayerModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/PlayerModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/PlayerModel"
  "/api/v1/PlayerStatistics/statistics":
    get:
      tags:
      - PlayerStatistics
      parameters:
      - name: CompetitionId
        in: query
        schema:
          type: integer
          format: int64
      - name: SeasonId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: Last5Matches
        in: query
        schema:
          type: boolean
      - name: PlayerId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: TeamIds
        in: query
        schema:
          type: array
          items:
            type: integer
            format: int64
          nullable: true
      - name: MatcheIds
        in: query
        schema:
          type: array
          items:
            type: integer
            format: int64
          nullable: true
      - name: EventTypeIds
        in: query
        schema:
          type: array
          items:
            type: integer
            format: int64
          nullable: true
      - name: PositionIds
        in: query
        schema:
          type: array
          items:
            type: integer
            format: int64
          nullable: true
      - name: Weeks
        in: query
        schema:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
      - name: MatchDays
        in: query
        schema:
          type: array
          items:
            type: string
            format: date-time
          nullable: true
      - name: RoundIds
        in: query
        schema:
          type: array
          items:
            type: integer
            format: int64
          nullable: true
      - name: PlayerName
        in: query
        schema:
          type: string
          nullable: true
      - name: Take
        in: query
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
          nullable: true
      - name: Skip
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: OrderColumnName
        in: query
        schema:
          type: string
          nullable: true
      - name: OrderByAsc
        in: query
        schema:
          type: boolean
          nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/PlayerStatisticsModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/PlayerStatisticsModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/PlayerStatisticsModel"
  "/api/v1/PlayerStatistics/{playerId}/matchStatistic/{matchId}":
    get:
      tags:
      - PlayerStatistics
      parameters:
      - name: playerId
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      - name: matchId
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      - name: lang
        in: query
        schema:
          type: string
          nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/PlayerSatisticByMatchModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/PlayerSatisticByMatchModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/PlayerSatisticByMatchModel"
  "/api/v1/PlayerStatistics/{playerId}/seasonStatistic/{seasonId}":
    get:
      tags:
      - PlayerStatistics
      parameters:
      - name: playerId
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      - name: seasonId
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/PlayerStatisticsModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/PlayerStatisticsModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/PlayerStatisticsModel"
  "/api/v1/Points":
    get:
      tags:
      - Points
      parameters:
      - name: SportId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: PositionId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/PointSystemModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/PointSystemModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/PointSystemModel"
    put:
      tags:
      - Points
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/PointSystemPartWithPositionModel"
          application/json:
            schema:
              "$ref": "#/components/schemas/PointSystemPartWithPositionModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/PointSystemPartWithPositionModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/PointSystemPartWithPositionModel"
      responses:
        '200':
          description: Success
  "/api/v1/PrizeTypeConfig":
    get:
      tags:
      - PrizeTypeConfig
      parameters:
      - name: PrizeTypeConfigId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: PrizeTypeId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: Take
        in: query
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
          nullable: true
      - name: Skip
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: OrderColumnName
        in: query
        schema:
          type: string
          nullable: true
      - name: OrderByAsc
        in: query
        schema:
          type: boolean
          nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/PrizeTypeConfigModelResponseListModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/PrizeTypeConfigModelResponseListModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/PrizeTypeConfigModelResponseListModel"
    post:
      tags:
      - PrizeTypeConfig
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/PrizeTypeAddConfigModel"
          application/json:
            schema:
              "$ref": "#/components/schemas/PrizeTypeAddConfigModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/PrizeTypeAddConfigModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/PrizeTypeAddConfigModel"
      responses:
        '201':
          description: Success
    put:
      tags:
      - PrizeTypeConfig
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/PrizeTypeConfigUpdateModel"
          application/json:
            schema:
              "$ref": "#/components/schemas/PrizeTypeConfigUpdateModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/PrizeTypeConfigUpdateModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/PrizeTypeConfigUpdateModel"
      responses:
        '200':
          description: Success
  "/api/v1/PrizeTypeConfig/{id}":
    delete:
      tags:
      - PrizeTypeConfig
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      responses:
        '200':
          description: Success
  "/api/v1/Reports/dashboardReport":
    get:
      tags:
      - Reports
      parameters:
      - name: Take
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: StartDate
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
      - name: EndDate
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
      - name: PartnerIds
        in: query
        schema:
          type: array
          items:
            type: integer
            format: int64
          nullable: true
      - name: SegmentId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: ReportType
        in: query
        schema:
          "$ref": "#/components/schemas/DashboardReportFilterType"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ContestDashboardModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ContestDashboardModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ContestDashboardModel"
  "/api/v1/Reports/bankReport":
    get:
      tags:
      - Reports
      parameters:
      - name: TransactionType
        in: query
        schema:
          "$ref": "#/components/schemas/BankTransactionType"
      - name: PartnerId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: ContestId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: TransferReason
        in: query
        schema:
          "$ref": "#/components/schemas/BankTransferReasonType"
      - name: TransactionDateFrom
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
      - name: TransactionDateTo
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
      - name: GenerateExcel
        in: query
        schema:
          type: boolean
          nullable: true
      - name: ExcelName
        in: query
        schema:
          type: string
          nullable: true
      - name: Take
        in: query
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
          nullable: true
      - name: Skip
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: OrderColumnName
        in: query
        schema:
          type: string
          nullable: true
      - name: OrderByAsc
        in: query
        schema:
          type: boolean
          nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/BankReportItemModelResponseListModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/BankReportItemModelResponseListModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/BankReportItemModelResponseListModel"
  "/api/v1/Reports/logs":
    get:
      tags:
      - Reports
      parameters:
      - name: SessionId
        in: query
        schema:
          type: string
          format: uuid
          nullable: true
      - name: EventType
        in: query
        schema:
          type: string
          nullable: true
      - name: ParameterName
        in: query
        schema:
          type: string
          nullable: true
      - name: ParameterValue
        in: query
        schema:
          type: string
          nullable: true
      - name: MethodName
        in: query
        schema:
          type: string
          nullable: true
      - name: Description
        in: query
        schema:
          type: string
          nullable: true
      - name: LogDateFrom
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
      - name: LogDateTo
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
      - name: Take
        in: query
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
          nullable: true
      - name: Skip
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: OrderColumnName
        in: query
        schema:
          type: string
          nullable: true
      - name: OrderByAsc
        in: query
        schema:
          type: boolean
          nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/LogModelResponseListModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/LogModelResponseListModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/LogModelResponseListModel"
  "/api/v1/Reports/contestReport":
    get:
      tags:
      - Reports
      parameters:
      - name: ContestId
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: ExcelName
        in: query
        schema:
          type: string
          nullable: true
      - name: GenerateExcel
        in: query
        schema:
          type: boolean
          nullable: true
      - name: Take
        in: query
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
          nullable: true
      - name: Skip
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: OrderColumnName
        in: query
        schema:
          type: string
          nullable: true
      - name: OrderByAsc
        in: query
        schema:
          type: boolean
          nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ContestLineupsReportModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ContestLineupsReportModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ContestLineupsReportModel"
  "/api/v1/Reports/ClientFinancialReport":
    get:
      tags:
      - Reports
      parameters:
      - name: DateFrom
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
      - name: DateTo
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
      - name: ClientId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: PartnerId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: DepositFrom
        in: query
        schema:
          type: number
          format: double
          nullable: true
      - name: DepositTo
        in: query
        schema:
          type: number
          format: double
          nullable: true
      - name: WithdrawFrom
        in: query
        schema:
          type: number
          format: double
          nullable: true
      - name: WithdrawTo
        in: query
        schema:
          type: number
          format: double
          nullable: true
      - name: ExcelName
        in: query
        schema:
          type: string
          nullable: true
      - name: GenerateExcel
        in: query
        schema:
          type: boolean
          nullable: true
      - name: Take
        in: query
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
          nullable: true
      - name: Skip
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: OrderColumnName
        in: query
        schema:
          type: string
          nullable: true
      - name: OrderByAsc
        in: query
        schema:
          type: boolean
          nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ClientFinancialReportItemModelResponseListModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ClientFinancialReportItemModelResponseListModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ClientFinancialReportItemModelResponseListModel"
  "/api/v1/Reports/clientDetailedReport":
    get:
      tags:
      - Reports
      parameters:
      - name: ClientId
        in: query
        schema:
          type: integer
          format: int64
      - name: ContestId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: ContestName
        in: query
        schema:
          type: string
          nullable: true
      - name: StartDateFrom
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
      - name: StartDateTo
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
      - name: EndDateFrom
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
      - name: EndDateTo
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
      - name: JoinDateFrom
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
      - name: JoinDateTo
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
      - name: TicketCountFrom
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: TicketCountTo
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: EntryFeeFrom
        in: query
        schema:
          type: number
          format: double
          nullable: true
      - name: EntryFeeTo
        in: query
        schema:
          type: number
          format: double
          nullable: true
      - name: WinningAmountFrom
        in: query
        schema:
          type: number
          format: double
          nullable: true
      - name: WinningAmountTo
        in: query
        schema:
          type: number
          format: double
          nullable: true
      - name: ExcelName
        in: query
        schema:
          type: string
          nullable: true
      - name: GenerateExcel
        in: query
        schema:
          type: boolean
          nullable: true
      - name: Take
        in: query
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
          nullable: true
      - name: Skip
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: OrderColumnName
        in: query
        schema:
          type: string
          nullable: true
      - name: OrderByAsc
        in: query
        schema:
          type: boolean
          nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ClientDetailedReportInfoModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ClientDetailedReportInfoModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ClientDetailedReportInfoModel"
  "/api/v1/Reports/clientContestsReport":
    get:
      tags:
      - Reports
      parameters:
      - name: StartDate
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
      - name: EndDate
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
      - name: PartnerIds
        in: query
        schema:
          type: array
          items:
            type: integer
            format: int64
          nullable: true
      - name: GenerateExcel
        in: query
        schema:
          type: boolean
          nullable: true
      - name: SegmentId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ClientContestsReportModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ClientContestsReportModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ClientContestsReportModel"
  "/api/v1/Reports/clientDeeplyReport":
    get:
      tags:
      - Reports
      parameters:
      - name: ClientId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: UserId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: UserExternalId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: PartnerId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: UserName
        in: query
        schema:
          type: string
          nullable: true
      - name: NickName
        in: query
        schema:
          type: string
          nullable: true
      - name: TicketCountFrom
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: TicketCountTo
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: ContestCountFrom
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: ContestCountTo
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: GuaranteedEntryFeeFrom
        in: query
        schema:
          type: number
          format: double
          nullable: true
      - name: GuaranteedEntryFeeTo
        in: query
        schema:
          type: number
          format: double
          nullable: true
      - name: RakeEntryFeeFrom
        in: query
        schema:
          type: number
          format: double
          nullable: true
      - name: RakeEntryFeeTo
        in: query
        schema:
          type: number
          format: double
          nullable: true
      - name: EntryFeeFrom
        in: query
        schema:
          type: number
          format: double
          nullable: true
      - name: EntryFeeTo
        in: query
        schema:
          type: number
          format: double
          nullable: true
      - name: GuaranteedWinningAmountFrom
        in: query
        schema:
          type: number
          format: double
          nullable: true
      - name: GuaranteedWinningAmountTo
        in: query
        schema:
          type: number
          format: double
          nullable: true
      - name: RakeWinningAmountFrom
        in: query
        schema:
          type: number
          format: double
          nullable: true
      - name: RakeWinningAmountTo
        in: query
        schema:
          type: number
          format: double
          nullable: true
      - name: LineupCountFrom
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: LineupCountTo
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: ParticipationFrom
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: ParticipationTo
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: RakeParticipationFrom
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: RakeParticipationTo
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: GuaranteedParticipationFrom
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: GuaranteedParticipationTo
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: FreeRollParticipationFrom
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: FreeRollParticipationTo
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: JoinDateFrom
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
      - name: JoinDateTo
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
      - name: LoginDateFrom
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
      - name: LoginDateTo
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
      - name: IsBlacklisted
        in: query
        schema:
          type: boolean
          nullable: true
      - name: ExcelName
        in: query
        schema:
          type: string
          nullable: true
      - name: GenerateExcel
        in: query
        schema:
          type: boolean
          nullable: true
      - name: Take
        in: query
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
          nullable: true
      - name: Skip
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: OrderColumnName
        in: query
        schema:
          type: string
          nullable: true
      - name: OrderByAsc
        in: query
        schema:
          type: boolean
          nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ClientDeeplyReportModelResponseListModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ClientDeeplyReportModelResponseListModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ClientDeeplyReportModelResponseListModel"
  "/api/v1/Reports/leaderBoardReport":
    get:
      tags:
      - Reports
      parameters:
      - name: LeaderBoardId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: Name
        in: query
        schema:
          type: string
          nullable: true
      - name: StartDateFrom
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
      - name: StartDateTo
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
      - name: EndDateFrom
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
      - name: EndDateTo
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
      - name: PrizeFrom
        in: query
        schema:
          type: number
          format: double
          nullable: true
      - name: PrizeTo
        in: query
        schema:
          type: number
          format: double
          nullable: true
      - name: PartnerId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: IsNetwork
        in: query
        schema:
          type: boolean
          nullable: true
      - name: PartnerCountFrom
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: PartnerCountTo
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: ExcelName
        in: query
        schema:
          type: string
          nullable: true
      - name: GenerateExcel
        in: query
        schema:
          type: boolean
          nullable: true
      - name: Take
        in: query
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
          nullable: true
      - name: Skip
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: OrderColumnName
        in: query
        schema:
          type: string
          nullable: true
      - name: OrderByAsc
        in: query
        schema:
          type: boolean
          nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/LeaderBoardReportListModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/LeaderBoardReportListModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/LeaderBoardReportListModel"
  "/api/v1/Reports/leaderBoardReport/partners":
    get:
      tags:
      - Reports
      parameters:
      - name: LeaderBoardId
        in: query
        schema:
          type: integer
          format: int64
      - name: PartnerId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: IncludeClient
        in: query
        schema:
          type: boolean
      - name: Take
        in: query
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
          nullable: true
      - name: Skip
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: OrderColumnName
        in: query
        schema:
          type: string
          nullable: true
      - name: OrderByAsc
        in: query
        schema:
          type: boolean
          nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/PartnerChallengeModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/PartnerChallengeModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/PartnerChallengeModel"
  "/api/v1/Reports/leaderBoardDetailedReport/{challengeId}":
    get:
      tags:
      - Reports
      parameters:
      - name: challengeId
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      - name: ClientId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: PartnerId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: ExcelName
        in: query
        schema:
          type: string
          nullable: true
      - name: GenerateExcel
        in: query
        schema:
          type: boolean
          nullable: true
      - name: Take
        in: query
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
          nullable: true
      - name: Skip
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: OrderColumnName
        in: query
        schema:
          type: string
          nullable: true
      - name: OrderByAsc
        in: query
        schema:
          type: boolean
          nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ChallengeClientReportModelResponseListModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ChallengeClientReportModelResponseListModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ChallengeClientReportModelResponseListModel"
  "/api/v1/Reports/leadreBoardClientDetailedReport/{challengeId}/client/{id}":
    get:
      tags:
      - Reports
      parameters:
      - name: challengeId
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ChallengeClientDetailedReportModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ChallengeClientDetailedReportModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ChallengeClientDetailedReportModel"
  "/api/v1/Reports/dashboad/contests":
    get:
      tags:
      - Reports
      parameters:
      - name: Status
        in: query
        schema:
          "$ref": "#/components/schemas/ContestStatusTypes"
      - name: PartnerIds
        in: query
        schema:
          type: array
          items:
            type: integer
            format: int64
          nullable: true
      - name: SegmentId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: DateFrom
        in: query
        schema:
          type: string
          format: date-time
      - name: DateTo
        in: query
        schema:
          type: string
          format: date-time
      - name: ReportType
        in: query
        schema:
          "$ref": "#/components/schemas/DashboardReportType"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/DashboardContestModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/DashboardContestModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/DashboardContestModel"
  "/api/v1/Reports/dashboad/players":
    get:
      tags:
      - Reports
      parameters:
      - name: PlayerType
        in: query
        schema:
          "$ref": "#/components/schemas/DashboardPlayerType"
      - name: PartnerIds
        in: query
        schema:
          type: array
          items:
            type: integer
            format: int64
          nullable: true
      - name: SegmentId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: DateFrom
        in: query
        schema:
          type: string
          format: date-time
      - name: DateTo
        in: query
        schema:
          type: string
          format: date-time
      - name: ReportType
        in: query
        schema:
          "$ref": "#/components/schemas/DashboardReportType"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/DashboardPlayerModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/DashboardPlayerModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/DashboardPlayerModel"
  "/api/v1/Reports/leaguesReport":
    get:
      tags:
      - Reports
      parameters:
      - name: CompetitionId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: CompetitionName
        in: query
        schema:
          type: string
          nullable: true
      - name: CompetitionAbbreviation
        in: query
        schema:
          type: string
          nullable: true
      - name: SportId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: SportName
        in: query
        schema:
          type: string
          nullable: true
      - name: Take
        in: query
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
          nullable: true
      - name: Skip
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: OrderColumnName
        in: query
        schema:
          type: string
          nullable: true
      - name: OrderByAsc
        in: query
        schema:
          type: boolean
          nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/LeagueReportModelResponseListModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/LeagueReportModelResponseListModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/LeagueReportModelResponseListModel"
  "/api/v1/Rules":
    get:
      tags:
      - Rules
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/RuleModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/RuleModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/RuleModel"
    post:
      tags:
      - Rules
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/RuleModel"
          application/json:
            schema:
              "$ref": "#/components/schemas/RuleModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/RuleModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/RuleModel"
      responses:
        '201':
          description: Success
    put:
      tags:
      - Rules
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/RuleModel"
              nullable: true
          application/json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/RuleModel"
              nullable: true
          text/json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/RuleModel"
              nullable: true
          application/*+json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/RuleModel"
              nullable: true
      responses:
        '200':
          description: Success
  "/api/v1/Rules/{id}":
    delete:
      tags:
      - Rules
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      responses:
        '200':
          description: Success
  "/api/v1/Rules/notify":
    post:
      tags:
      - Rules
      summary: Notify clients to adding new rule
      requestBody:
        description: rule id and partners whose will notify about rule
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/RuleNotifyModel"
          application/json:
            schema:
              "$ref": "#/components/schemas/RuleNotifyModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/RuleNotifyModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/RuleNotifyModel"
      responses:
        '200':
          description: Success
  "/api/v1/Seasons":
    get:
      tags:
      - Seasons
      parameters:
      - name: Id
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: CompetitionId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: ExternalId
        in: query
        schema:
          type: string
          nullable: true
      - name: Name
        in: query
        schema:
          type: string
          nullable: true
      - name: Status
        in: query
        schema:
          "$ref": "#/components/schemas/SeasonStatus"
      - name: StartDateFrom
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
      - name: StartDateTo
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
      - name: EndDateFrom
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
      - name: EndDateTo
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
      - name: Take
        in: query
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
          nullable: true
      - name: Skip
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: OrderColumnName
        in: query
        schema:
          type: string
          nullable: true
      - name: OrderByAsc
        in: query
        schema:
          type: boolean
          nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/SeasonModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/SeasonModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/SeasonModel"
  "/api/v1/Seasons/playerSeasons/{playerId}":
    get:
      tags:
      - Seasons
      parameters:
      - name: playerId
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/SeasonModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/SeasonModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/SeasonModel"
  "/api/v1/Seasons/{id}/filterItems":
    get:
      tags:
      - Seasons
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      responses:
        '200':
          description: Success
  "/api/v1/Segments":
    get:
      tags:
      - Segments
      parameters:
      - name: SegmentId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: PartnerId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: SegmentName
        in: query
        schema:
          type: string
          nullable: true
      - name: IsPartnerEnabled
        in: query
        schema:
          type: boolean
          nullable: true
      - name: Type
        in: query
        schema:
          "$ref": "#/components/schemas/SegmentType"
      - name: Take
        in: query
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
          nullable: true
      - name: Skip
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: OrderColumnName
        in: query
        schema:
          type: string
          nullable: true
      - name: OrderByAsc
        in: query
        schema:
          type: boolean
          nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/SegmentsWithPartnersModelResponseListModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/SegmentsWithPartnersModelResponseListModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/SegmentsWithPartnersModelResponseListModel"
    put:
      tags:
      - Segments
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/SegmentModel"
          application/json:
            schema:
              "$ref": "#/components/schemas/SegmentModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/SegmentModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/SegmentModel"
      responses:
        '200':
          description: Success
    post:
      tags:
      - Segments
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/SegmentModel"
          application/json:
            schema:
              "$ref": "#/components/schemas/SegmentModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/SegmentModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/SegmentModel"
      responses:
        '201':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/SegmentModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/SegmentModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/SegmentModel"
  "/api/v1/Segments/{id}":
    delete:
      tags:
      - Segments
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      responses:
        '200':
          description: Success
  "/api/v1/Segments/{id}/partners":
    post:
      tags:
      - Segments
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                type: integer
                format: int64
              nullable: true
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int64
              nullable: true
          text/json:
            schema:
              type: array
              items:
                type: integer
                format: int64
              nullable: true
          application/*+json:
            schema:
              type: array
              items:
                type: integer
                format: int64
              nullable: true
      responses:
        '201':
          description: Success
    delete:
      tags:
      - Segments
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                type: integer
                format: int64
              nullable: true
          application/json:
            schema:
              type: array
              items:
                type: integer
                format: int64
              nullable: true
          text/json:
            schema:
              type: array
              items:
                type: integer
                format: int64
              nullable: true
          application/*+json:
            schema:
              type: array
              items:
                type: integer
                format: int64
              nullable: true
      responses:
        '200':
          description: Success
  "/api/v1/Sports":
    get:
      tags:
      - Sports
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/SportViewModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/SportViewModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/SportViewModel"
    put:
      tags:
      - Sports
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/SportUpdateModel"
              nullable: true
          application/json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/SportUpdateModel"
              nullable: true
          text/json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/SportUpdateModel"
              nullable: true
          application/*+json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/SportUpdateModel"
              nullable: true
      responses:
        '200':
          description: Success
  "/api/v1/Sports/contestTypes":
    get:
      tags:
      - Sports
      parameters:
      - name: sportId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ContestTypeModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ContestTypeModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ContestTypeModel"
  "/api/v1/Sports/positions":
    get:
      tags:
      - Sports
      parameters:
      - name: sportId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: isRealPosition
        in: query
        schema:
          type: boolean
          nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ContestTypeModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ContestTypeModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ContestTypeModel"
  "/api/v1/Sports/{id}/lineupSchemes":
    get:
      tags:
      - Sports
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      - name: isRealPosition
        in: query
        schema:
          type: boolean
          nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/LineUpFormationModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/LineUpFormationModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/LineUpFormationModel"
  "/api/v1/Sports/logoUrl":
    post:
      tags:
      - Sports
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                SportId:
                  type: integer
                  format: int64
                LogoFile:
                  type: string
                  format: binary
                  nullable: true
                IsBackoffice:
                  type: boolean
            encoding:
              SportId:
                style: form
              LogoFile:
                style: form
              IsBackoffice:
                style: form
      responses:
        '201':
          description: Success
  "/api/v1/Sports/{id}/logoUrl":
    delete:
      tags:
      - Sports
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      - name: IsBackoffice
        in: query
        schema:
          type: boolean
      responses:
        '200':
          description: Success
  "/api/v1/Statistics/teams":
    get:
      tags:
      - Statistics
      parameters:
      - name: CompetitionId
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: SeasonId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: TeamIds
        in: query
        schema:
          type: array
          items:
            type: integer
            format: int64
          nullable: true
      - name: Weeks
        in: query
        schema:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
      - name: RoundIds
        in: query
        schema:
          type: array
          items:
            type: integer
            format: int64
          nullable: true
      - name: MatchDays
        in: query
        schema:
          type: array
          items:
            type: string
            format: date-time
          nullable: true
      - name: TeamName
        in: query
        schema:
          type: string
          nullable: true
      - name: IsHome
        in: query
        schema:
          type: boolean
          nullable: true
      - name: Take
        in: query
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
          nullable: true
      - name: Skip
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: OrderColumnName
        in: query
        schema:
          type: string
          nullable: true
      - name: OrderByAsc
        in: query
        schema:
          type: boolean
          nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/TeamStatisticsModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/TeamStatisticsModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/TeamStatisticsModel"
  "/api/v1/Statistics/players":
    get:
      tags:
      - Statistics
      parameters:
      - name: CompetitionId
        in: query
        schema:
          type: integer
          format: int64
      - name: SeasonId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: Last5Matches
        in: query
        schema:
          type: boolean
      - name: PlayerId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: TeamIds
        in: query
        schema:
          type: array
          items:
            type: integer
            format: int64
          nullable: true
      - name: MatcheIds
        in: query
        schema:
          type: array
          items:
            type: integer
            format: int64
          nullable: true
      - name: EventTypeIds
        in: query
        schema:
          type: array
          items:
            type: integer
            format: int64
          nullable: true
      - name: PositionIds
        in: query
        schema:
          type: array
          items:
            type: integer
            format: int64
          nullable: true
      - name: Weeks
        in: query
        schema:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
      - name: MatchDays
        in: query
        schema:
          type: array
          items:
            type: string
            format: date-time
          nullable: true
      - name: RoundIds
        in: query
        schema:
          type: array
          items:
            type: integer
            format: int64
          nullable: true
      - name: PlayerName
        in: query
        schema:
          type: string
          nullable: true
      - name: Take
        in: query
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
          nullable: true
      - name: Skip
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: OrderColumnName
        in: query
        schema:
          type: string
          nullable: true
      - name: OrderByAsc
        in: query
        schema:
          type: boolean
          nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/PlayerStatisticsModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/PlayerStatisticsModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/PlayerStatisticsModel"
  "/api/v1/Statistics/matchStatistics/{matchId}":
    get:
      tags:
      - Statistics
      parameters:
      - name: matchId
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      - name: teamId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/MatchStatisticsModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/MatchStatisticsModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/MatchStatisticsModel"
  "/api/v1/Suggestions":
    get:
      tags:
      - Suggestions
      parameters:
      - name: ClientId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: PartnerId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: Name
        in: query
        schema:
          type: string
          nullable: true
      - name: Email
        in: query
        schema:
          type: string
          nullable: true
      - name: DateFrom
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
      - name: DateTo
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
      - name: Take
        in: query
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
          nullable: true
      - name: Skip
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: OrderColumnName
        in: query
        schema:
          type: string
          nullable: true
      - name: OrderByAsc
        in: query
        schema:
          type: boolean
          nullable: true
      responses:
        '200':
          description: Success
    post:
      tags:
      - Suggestions
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - Email
              - Message
              - Name
              - Subject
              type: object
              properties:
                PartnerId:
                  type: integer
                  format: int64
                Name:
                  maxLength: 30
                  minLength: 0
                  type: string
                Email:
                  maxLength: 70
                  minLength: 0
                  type: string
                Subject:
                  maxLength: 60
                  minLength: 0
                  type: string
                Message:
                  maxLength: 190
                  minLength: 0
                  type: string
                File:
                  type: string
                  format: binary
                  nullable: true
            encoding:
              PartnerId:
                style: form
              Name:
                style: form
              Email:
                style: form
              Subject:
                style: form
              Message:
                style: form
              File:
                style: form
      responses:
        '201':
          description: Success
  "/api/v1/Teams":
    put:
      tags:
      - Teams
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/TeamEditModel"
          application/json:
            schema:
              "$ref": "#/components/schemas/TeamEditModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/TeamEditModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/TeamEditModel"
      responses:
        '200':
          description: Success
  "/api/v1/Teams/logo":
    put:
      tags:
      - Teams
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                Id:
                  type: integer
                  format: int64
                Logo:
                  type: string
                  format: binary
                  nullable: true
            encoding:
              Id:
                style: form
              Logo:
                style: form
      responses:
        '200':
          description: Success
  "/api/v1/Teams/uniform":
    put:
      tags:
      - Teams
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                TeamId:
                  type: integer
                  format: int64
                UniformFile:
                  type: string
                  format: binary
                  nullable: true
                SecondaryUniformFile:
                  type: string
                  format: binary
                  nullable: true
            encoding:
              TeamId:
                style: form
              UniformFile:
                style: form
              SecondaryUniformFile:
                style: form
      responses:
        '200':
          description: Success
  "/api/v1/Teams/{teamId}/uniform":
    delete:
      tags:
      - Teams
      parameters:
      - name: teamId
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      responses:
        '200':
          description: Success
  "/api/v1/Teams/{teamId}/logo":
    delete:
      tags:
      - Teams
      parameters:
      - name: teamId
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      responses:
        '200':
          description: Success
  "/api/v1/Ticket":
    post:
      tags:
      - Ticket
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/TicketModel"
          application/json:
            schema:
              "$ref": "#/components/schemas/TicketModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/TicketModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/TicketModel"
      responses:
        '201':
          description: Success
    get:
      tags:
      - Ticket
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/TicketModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/TicketModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/TicketModel"
  "/api/v1/Ticket/{id}":
    delete:
      tags:
      - Ticket
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      responses:
        '200':
          description: Success
  "/api/v1/Ticket/clientTickets":
    get:
      tags:
      - Ticket
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/TicketModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/TicketModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/TicketModel"
    post:
      tags:
      - Ticket
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/ClientTicketModel"
              nullable: true
          application/json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/ClientTicketModel"
              nullable: true
          text/json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/ClientTicketModel"
              nullable: true
          application/*+json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/ClientTicketModel"
              nullable: true
      responses:
        '201':
          description: Success
  "/api/v1/Ticket/activatePromoCode":
    post:
      tags:
      - Ticket
      parameters:
      - name: promoCode
        in: query
        schema:
          type: string
          nullable: true
      responses:
        '200':
          description: Success
  "/api/v1/Ticket/generatedPromoCode":
    get:
      tags:
      - Ticket
      parameters:
      - name: count
        in: query
        schema:
          type: integer
          format: int32
      responses:
        '200':
          description: Success
    post:
      tags:
      - Ticket
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/PromoCodeModel"
              nullable: true
          application/json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/PromoCodeModel"
              nullable: true
          text/json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/PromoCodeModel"
              nullable: true
          application/*+json:
            schema:
              type: array
              items:
                "$ref": "#/components/schemas/PromoCodeModel"
              nullable: true
      responses:
        '201':
          description: Success
  "/api/v1/Ticket/ticketsReport":
    get:
      tags:
      - Ticket
      parameters:
      - name: TicketId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: PartnerId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: TicketName
        in: query
        schema:
          type: string
          nullable: true
      - name: UsingStartDate
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
      - name: UsingEndDate
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
      - name: ExcelName
        in: query
        schema:
          type: string
          nullable: true
      - name: GenerateExcel
        in: query
        schema:
          type: boolean
          nullable: true
      - name: Take
        in: query
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
          nullable: true
      - name: Skip
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: OrderColumnName
        in: query
        schema:
          type: string
          nullable: true
      - name: OrderByAsc
        in: query
        schema:
          type: boolean
          nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/TicketReportResponseModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/TicketReportResponseModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/TicketReportResponseModel"
  "/api/v1/Ticket/promoCodesReport":
    get:
      tags:
      - Ticket
      parameters:
      - name: ActivationStartDate
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
      - name: ActivationEndDate
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
      - name: ExpirationStartDate
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
      - name: ExpirationEndDate
        in: query
        schema:
          type: string
          format: date-time
          nullable: true
      - name: TicketName
        in: query
        schema:
          type: string
          nullable: true
      - name: PartnerId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: TicketId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: ExcelName
        in: query
        schema:
          type: string
          nullable: true
      - name: GenerateExcel
        in: query
        schema:
          type: boolean
          nullable: true
      - name: Take
        in: query
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
          nullable: true
      - name: Skip
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: OrderColumnName
        in: query
        schema:
          type: string
          nullable: true
      - name: OrderByAsc
        in: query
        schema:
          type: boolean
          nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/PromoCodeReportResponseModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/PromoCodeReportResponseModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/PromoCodeReportResponseModel"
  "/api/v1/Ticket/clientTicketHistory":
    get:
      tags:
      - Ticket
      parameters:
      - name: ClientId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: Take
        in: query
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
          nullable: true
      - name: Skip
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: OrderColumnName
        in: query
        schema:
          type: string
          nullable: true
      - name: OrderByAsc
        in: query
        schema:
          type: boolean
          nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/ClientTicketHistoryListModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/ClientTicketHistoryListModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/ClientTicketHistoryListModel"
  "/api/v1/Token":
    post:
      tags:
      - Token
      summary: This endpoint using for users login and token invalidation actions
      requestBody:
        description: "-- authScheme\r\n<list type=\"bullet\">\r\n   0 for casino users,
          \r\n   1 for spring backoffice users\r\n   2 for local backoffice users\r\n</list>\r\n--
          data\r\n<list type=\"number\">\r\ngrantType is 0 ->\r\n    <list type=\"bullet\">\r\n
          \   authScheme - 0 -> casino user then {passwordHash - casino token(production
          only), username(staging only), password(staging only), partnerId}\r\n    authScheme
          - 1 -> thrown exception, because this case not implemented\r\n    authScheme
          - 2 -> local backoffice user then {userName, password}\r\n    </list>\r\ngrantType
          is 1 -> It must be null\r\n</list>\r\n-- grantType\r\n<list type=\"bullet\">\r\n0
          -> login action\r\n1 -> invalidate existing token(refresh action)\r\n</list>"
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/AuthorizationModel"
          application/json:
            schema:
              "$ref": "#/components/schemas/AuthorizationModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/AuthorizationModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/AuthorizationModel"
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AutorizationResponseModel"
        '401':
          description: Invalid Credentionals
  "/api/v1/Token/signOut":
    post:
      tags:
      - Token
      responses:
        '200':
          description: Success
  "/api/v1/Token/permissions":
    get:
      tags:
      - Token
      responses:
        '200':
          description: Success
  "/api/v1/TranslationGroups":
    get:
      tags:
      - TranslationGroups
      parameters:
      - name: Id
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      - name: Name
        in: query
        schema:
          type: string
          nullable: true
      - name: Key
        in: query
        schema:
          type: string
          nullable: true
      - name: Take
        in: query
        schema:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
          nullable: true
      - name: Skip
        in: query
        schema:
          type: integer
          format: int32
          nullable: true
      - name: OrderColumnName
        in: query
        schema:
          type: string
          nullable: true
      - name: OrderByAsc
        in: query
        schema:
          type: boolean
          nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                "$ref": "#/components/schemas/TranslationGroupModelResponseListModel"
            application/json:
              schema:
                "$ref": "#/components/schemas/TranslationGroupModelResponseListModel"
            text/json:
              schema:
                "$ref": "#/components/schemas/TranslationGroupModelResponseListModel"
    put:
      tags:
      - TranslationGroups
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/TranslationGroupModel"
          application/json:
            schema:
              "$ref": "#/components/schemas/TranslationGroupModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/TranslationGroupModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/TranslationGroupModel"
      responses:
        '200':
          description: Success
    post:
      tags:
      - TranslationGroups
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/TranslationGroupKeyModel"
          application/json:
            schema:
              "$ref": "#/components/schemas/TranslationGroupKeyModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/TranslationGroupKeyModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/TranslationGroupKeyModel"
      responses:
        '200':
          description: Success
  "/api/v1/TranslationGroups/{id}":
    delete:
      tags:
      - TranslationGroups
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      responses:
        '200':
          description: Success
  "/api/v1/TranslationGroups/{id}/translations":
    get:
      tags:
      - TranslationGroups
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  type: string
            application/json:
              schema:
                type: array
                items:
                  type: string
            text/json:
              schema:
                type: array
                items:
                  type: string
    post:
      tags:
      - TranslationGroups
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                type: string
              nullable: true
          application/json:
            schema:
              type: array
              items:
                type: string
              nullable: true
          text/json:
            schema:
              type: array
              items:
                type: string
              nullable: true
          application/*+json:
            schema:
              type: array
              items:
                type: string
              nullable: true
      responses:
        '200':
          description: Success
    delete:
      tags:
      - TranslationGroups
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      requestBody:
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                type: string
              nullable: true
          application/json:
            schema:
              type: array
              items:
                type: string
              nullable: true
          text/json:
            schema:
              type: array
              items:
                type: string
              nullable: true
          application/*+json:
            schema:
              type: array
              items:
                type: string
              nullable: true
      responses:
        '200':
          description: Success
  "/api/v1/WelcomeTours":
    get:
      tags:
      - WelcomeTours
      parameters:
      - name: partnerId
        in: query
        schema:
          type: integer
          format: int64
      - name: languageId
        in: query
        schema:
          type: integer
          format: int64
          nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/WelcomeVideoModel"
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/WelcomeVideoModel"
            text/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/WelcomeVideoModel"
    post:
      tags:
      - WelcomeTours
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/WelcomeVideoAddModel"
          application/json:
            schema:
              "$ref": "#/components/schemas/WelcomeVideoAddModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/WelcomeVideoAddModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/WelcomeVideoAddModel"
      responses:
        '201':
          description: Success
    put:
      tags:
      - WelcomeTours
      requestBody:
        content:
          application/json-patch+json:
            schema:
              "$ref": "#/components/schemas/WelcomeVideoModel"
          application/json:
            schema:
              "$ref": "#/components/schemas/WelcomeVideoModel"
          text/json:
            schema:
              "$ref": "#/components/schemas/WelcomeVideoModel"
          application/*+json:
            schema:
              "$ref": "#/components/schemas/WelcomeVideoModel"
      responses:
        '200':
          description: Success
  "/api/v1/WelcomeTours/{id}":
    delete:
      tags:
      - WelcomeTours
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          default: 
      responses:
        '200':
          description: Success
components:
  schemas:
    AccountTypeModel:
      type: object
      properties:
        Id:
          type: integer
          format: int64
        Name:
          maxLength: 200
          minLength: 0
          type: string
          nullable: true
      additionalProperties: false
    PermissionModel:
      type: object
      properties:
        Id:
          type: integer
          format: int64
        Name:
          maxLength: 200
          minLength: 0
          type: string
          nullable: true
      additionalProperties: false
    BannerType:
      enum:
      - 1
      - 2
      - 3
      type: integer
      format: int32
    ImagePositions:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      type: integer
      format: int32
    BannerViewModel:
      type: object
      properties:
        BannerId:
          type: integer
          format: int64
        BannerType:
          "$ref": "#/components/schemas/BannerType"
        ContestId:
          type: integer
          format: int64
          nullable: true
        PictureId:
          type: integer
          format: int64
        Link:
          type: string
          nullable: true
        PictureUrl:
          type: string
          nullable: true
        LanguageId:
          type: integer
          format: int64
          nullable: true
        Position:
          "$ref": "#/components/schemas/ImagePositions"
      additionalProperties: false
    BannerEditModel:
      type: object
      properties:
        BannerId:
          type: integer
          format: int64
        BannerType:
          "$ref": "#/components/schemas/BannerType"
        ContestId:
          type: integer
          format: int64
          nullable: true
        PictureId:
          type: integer
          format: int64
        Link:
          maxLength: 255
          minLength: 0
          type: string
          nullable: true
        LanguageId:
          type: integer
          format: int64
          nullable: true
        Position:
          "$ref": "#/components/schemas/ImagePositions"
      additionalProperties: false
    CancellationReasonModel:
      type: object
      properties:
        Id:
          type: integer
          format: int64
        Description:
          maxLength: 250
          minLength: 0
          type: string
          nullable: true
        ShortDescription:
          maxLength: 200
          minLength: 0
          type: string
          nullable: true
      additionalProperties: false
    InjuryStatusEnum:
      enum:
      - 1
      - 2
      type: integer
      format: int32
    InjuryTypeEnum:
      enum:
      - 1
      - 2
      - 3
      type: integer
      format: int32
    InjuryKindEnum:
      enum:
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      - 9
      - 10
      - 11
      - 12
      - 13
      - 14
      - 15
      - 16
      - 17
      - 18
      - 19
      - 20
      - 21
      - 22
      - 23
      - 24
      - 25
      - 26
      - 27
      - 28
      - 29
      - 30
      - 31
      - 32
      - 33
      - 34
      - 35
      - 36
      - 37
      - 38
      - 39
      - 40
      - 41
      - 42
      - 43
      - 44
      - 45
      - 46
      - 47
      - 48
      - 49
      - 50
      type: integer
      format: int32
    InjurySeasonSuspendEnum:
      enum:
      - 1
      - 2
      - 3
      type: integer
      format: int32
    PlayerInjuryModel:
      type: object
      properties:
        Status:
          "$ref": "#/components/schemas/InjuryStatusEnum"
        Type:
          "$ref": "#/components/schemas/InjuryTypeEnum"
        Kind:
          "$ref": "#/components/schemas/InjuryKindEnum"
        StartDate:
          type: string
          format: date-time
          nullable: true
        EndDate:
          type: string
          format: date-time
          nullable: true
        Season_suspend:
          "$ref": "#/components/schemas/InjurySeasonSuspendEnum"
        Description:
          type: string
          nullable: true
        NextDay:
          type: integer
          format: int32
          nullable: true
        NextMatch:
          type: integer
          format: int32
          nullable: true
        Url:
          type: string
          nullable: true
      additionalProperties: false
    PlayerClientLineupModel:
      type: object
      properties:
        PlayerId:
          type: integer
          format: int64
        PositionId:
          type: integer
          format: int64
        PositionName:
          type: string
          nullable: true
        PositionAbbreviation:
          type: string
          nullable: true
        PlayerName:
          type: string
          nullable: true
        ExternalId:
          type: string
          nullable: true
        TeamId:
          type: integer
          format: int64
        TeamName:
          type: string
          nullable: true
        HeadshotUrl:
          type: string
          nullable: true
        UniformUrl:
          type: string
          nullable: true
        Salary:
          type: integer
          format: int32
        DraftedPercent:
          type: number
          format: double
          nullable: true
        FPPG:
          type: number
          format: double
          nullable: true
        IsCaptain:
          type: boolean
        PlayerInjury:
          "$ref": "#/components/schemas/PlayerInjuryModel"
        TierNumber:
          type: integer
          format: int32
          nullable: true
        SecondaryUniformUrl:
          type: string
          nullable: true
        PlaceNumber:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    ClientLineupPlayers:
      type: object
      properties:
        LineupMembers:
          type: array
          items:
            "$ref": "#/components/schemas/PlayerClientLineupModel"
          nullable: true
        Substitutes:
          type: array
          items:
            "$ref": "#/components/schemas/PlayerClientLineupModel"
          nullable: true
      additionalProperties: false
    ContestStatusTypes:
      enum:
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      - 9
      type: integer
      format: int32
    PrizeFundType:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      - 9
      - 10
      - 11
      type: integer
      format: int32
    TicketTypes:
      enum:
      - 1
      - 2
      - 3
      - 4
      type: integer
      format: int32
    ClientLineupEntryHistoryModel:
      type: object
      properties:
        ContestId:
          type: integer
          format: int64
        ContestName:
          type: string
          nullable: true
        Status:
          "$ref": "#/components/schemas/ContestStatusTypes"
        WinningAmount:
          type: number
          format: double
          nullable: true
        WinningPlace:
          type: integer
          format: int32
          nullable: true
        LineupName:
          type: string
          nullable: true
        EndDate:
          type: string
          format: date-time
          nullable: true
        FinishDate:
          type: string
          format: date-time
          nullable: true
        ContestPrizeFundType:
          "$ref": "#/components/schemas/PrizeFundType"
        PrizeName:
          type: string
          nullable: true
        TicketId:
          type: integer
          format: int64
          nullable: true
        PrizeCount:
          type: integer
          format: int32
          nullable: true
        TicketType:
          "$ref": "#/components/schemas/TicketTypes"
        TicketName:
          type: string
          nullable: true
      additionalProperties: false
    ClientLineupWithPlayerModel:
      type: object
      properties:
        LineupName:
          type: string
          nullable: true
        ClientLineupId:
          type: integer
          format: int64
        SchemeId:
          type: integer
          format: int64
          nullable: true
        CreationDate:
          type: string
          format: date-time
        Players:
          "$ref": "#/components/schemas/ClientLineupPlayers"
        RemainingSalary:
          type: integer
          format: int64
        Archived:
          type: boolean
        IsValid:
          type: boolean
        ClientId:
          type: integer
          format: int64
        UserName:
          type: string
          nullable: true
        ClientLineupEntryHistories:
          type: array
          items:
            "$ref": "#/components/schemas/ClientLineupEntryHistoryModel"
          nullable: true
      additionalProperties: false
    SportType:
      enum:
      - 1
      - 2
      - 3
      - 4
      - 5
      type: integer
      format: int32
    GameStyles:
      enum:
      - 0
      - 1
      - 4
      - 5
      - 6
      type: integer
      format: int32
    ClientLineupPlayerModel:
      type: object
      properties:
        PlayerId:
          type: integer
          format: int64
        TeamId:
          type: integer
          format: int64
        TeamAbbreviation:
          type: string
          nullable: true
        TeamName:
          type: string
          nullable: true
        PlayerExternalId:
          type: string
          nullable: true
        PositionId:
          type: integer
          format: int64
        PlayerName:
          type: string
          nullable: true
        Salary:
          type: integer
          format: int64
        FPPG:
          type: number
          format: double
        PlaceNumber:
          type: integer
          format: int32
          nullable: true
        TierNumber:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    ClientLineupModelDetailed:
      type: object
      properties:
        SportType:
          "$ref": "#/components/schemas/SportType"
        CompetitionId:
          type: integer
          format: int64
        GameStyle:
          "$ref": "#/components/schemas/GameStyles"
        SchemeId:
          type: integer
          format: int64
          nullable: true
        CreationDate:
          type: string
          format: date-time
        ModifiedDate:
          type: string
          format: date-time
        RemainingSalary:
          type: integer
          format: int64
        IsValid:
          type: boolean
        ClientId:
          type: integer
          format: int64
        UserName:
          type: string
          nullable: true
        Archived:
          type: boolean
        UserExternalId:
          type: integer
          format: int64
          nullable: true
        Players:
          type: array
          items:
            "$ref": "#/components/schemas/ClientLineupPlayerModel"
          nullable: true
        ClientLineupEntryHistoriesCount:
          type: integer
          format: int32
        LineupName:
          type: string
          nullable: true
        ClientLineupId:
          type: integer
          format: int64
        AvailableContestsCount:
          type: integer
          format: int64
      additionalProperties: false
    ClientLineupModelDetailedResponseListModel:
      type: object
      properties:
        FilteredCount:
          type: integer
          format: int32
        Items:
          type: array
          items:
            "$ref": "#/components/schemas/ClientLineupModelDetailed"
          nullable: true
      additionalProperties: false
    ClientLineupModel:
      type: object
      properties:
        LineupName:
          type: string
          nullable: true
        ClientLineupId:
          type: integer
          format: int64
        AvailableContestsCount:
          type: integer
          format: int64
      additionalProperties: false
    ClientLineupModelResponseListModel:
      type: object
      properties:
        FilteredCount:
          type: integer
          format: int32
        Items:
          type: array
          items:
            "$ref": "#/components/schemas/ClientLineupModel"
          nullable: true
      additionalProperties: false
    TeamLineupModel:
      type: object
      properties:
        Id:
          type: integer
          format: int64
        Name:
          type: string
          nullable: true
        Abbreviation:
          type: string
          nullable: true
        LogoUrl:
          type: string
          nullable: true
      additionalProperties: false
    MatchMemberLineupModel:
      type: object
      properties:
        IsHome:
          type: boolean
        Team:
          "$ref": "#/components/schemas/TeamLineupModel"
      additionalProperties: false
    MatchResultLineupModel:
      type: object
      properties:
        MatchId:
          type: integer
          format: int64
        HomeScore:
          type: integer
          format: int32
        AwayScore:
          type: integer
          format: int32
      additionalProperties: false
    MatchLineupModel:
      type: object
      properties:
        Id:
          type: integer
          format: int64
        StartDate:
          type: string
          format: date-time
        RoundId:
          type: integer
          format: int64
        MatchMembers:
          type: array
          items:
            "$ref": "#/components/schemas/MatchMemberLineupModel"
          nullable: true
        MatchResult:
          "$ref": "#/components/schemas/MatchResultLineupModel"
      additionalProperties: false
    PlayerForLineupModel:
      type: object
      additionalProperties: false
    PlayersListForLineupModel:
      type: object
      properties:
        TeamList:
          "$ref": "#/components/schemas/PlayerForLineupModel"
        MinSalary:
          type: integer
          format: int64
        MaxSalary:
          type: integer
          format: int64
        MinPoint:
          type: number
          format: double
        MaxPoint:
          type: number
          format: double
        MaxCount:
          type: integer
          format: int32
        SalaryCap:
          type: integer
          format: int64
      additionalProperties: false
    Role:
      enum:
      - 0
      - 1
      - 2
      type: integer
      format: int32
    ClientReportFilterType:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      type: integer
      format: int32
    ClientModel:
      type: object
      properties:
        PartnerId:
          type: integer
          format: int64
          nullable: true
        ClientId:
          type: integer
          format: int64
        UserId:
          type: integer
          format: int64
          nullable: true
        UserExternalId:
          type: integer
          format: int64
          nullable: true
        IsBlacklisted:
          type: boolean
          nullable: true
        UserName:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        NickName:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        Email:
          maxLength: 100
          minLength: 0
          type: string
          nullable: true
        JoinDate:
          type: string
          format: date-time
          nullable: true
        LanguageId:
          type: integer
          format: int64
          nullable: true
        CurrencyId:
          type: integer
          format: int64
          nullable: true
      additionalProperties: false
    ClientModelResponseListModel:
      type: object
      properties:
        FilteredCount:
          type: integer
          format: int32
        Items:
          type: array
          items:
            "$ref": "#/components/schemas/ClientModel"
          nullable: true
      additionalProperties: false
    ClientEditModel:
      type: object
      properties:
        ClientId:
          type: integer
          format: int64
          nullable: true
        LanguageId:
          type: integer
          format: int64
          nullable: true
        UserName:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        FantasyNickName:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        CurrencyId:
          type: integer
          format: int64
          nullable: true
      additionalProperties: false
    ClientBlockingHistoryModel:
      required:
      - BlockReason
      type: object
      properties:
        ClientId:
          type: integer
          format: int64
          nullable: true
        PartnerId:
          type: integer
          format: int64
          nullable: true
        IsBlocked:
          type: boolean
        BlockReason:
          maxLength: 255
          minLength: 0
          type: string
        Date:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    ClientReportType:
      enum:
      - 0
      - 1
      - 2
      type: integer
      format: int32
    ClientReportModel:
      type: object
      properties:
        Id:
          type: integer
          format: int64
        PartnerId:
          type: integer
          format: int64
          nullable: true
        PartnerName:
          type: string
          nullable: true
        UserId:
          type: integer
          format: int64
          nullable: true
        UserExternalId:
          type: integer
          format: int64
          nullable: true
        UserName:
          type: string
          nullable: true
        NickName:
          type: string
          nullable: true
        JoinDate:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    ClientInfoModel:
      type: object
      properties:
        ClientId:
          type: integer
          format: int64
        NickName:
          type: string
          nullable: true
        UserName:
          type: string
          nullable: true
        PartnerId:
          type: integer
          format: int64
          nullable: true
        CurrencyId:
          type: integer
          format: int64
          nullable: true
        CurrencyName:
          type: string
          nullable: true
      additionalProperties: false
    CompetitionType:
      enum:
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      - 9
      - 10
      - 11
      - 12
      - 13
      - 14
      - 15
      - 16
      - 17
      - 18
      - 19
      - 20
      - 21
      - 22
      - 23
      - 24
      - 25
      - 26
      - 27
      type: integer
      format: int32
    SeasonStatus:
      enum:
      - 1
      - 2
      - 3
      - 4
      type: integer
      format: int32
    SeasonMemberModel:
      type: object
      properties:
        SeasonId:
          type: integer
          format: int64
        TeamId:
          type: integer
          format: int64
      additionalProperties: false
    SeasonModel:
      type: object
      properties:
        Id:
          type: integer
          format: int64
        CompetitionId:
          type: integer
          format: int64
        Name:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        StartDate:
          type: string
          format: date-time
        EndDate:
          type: string
          format: date-time
        Status:
          "$ref": "#/components/schemas/SeasonStatus"
        MemberCount:
          type: integer
          format: int32
        RoundCount:
          type: integer
          format: int32
        CurrentRoundExternalId:
          type: integer
          format: int64
          nullable: true
        CurrentRound:
          type: integer
          format: int32
        ExternalId:
          maxLength: 100
          minLength: 0
          type: string
          nullable: true
        SeasonMembers:
          type: array
          items:
            "$ref": "#/components/schemas/SeasonMemberModel"
          nullable: true
      additionalProperties: false
    LineUpSchemePositionModel:
      type: object
      properties:
        Id:
          type: integer
          format: int64
        Name:
          maxLength: 255
          minLength: 0
          type: string
          nullable: true
        Abbrievation:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        MainCount:
          type: integer
          format: int32
        SubCount:
          type: integer
          format: int32
        ParentPositionId:
          type: integer
          format: int64
          nullable: true
        Priority:
          type: integer
          format: int32
        ChildPositionIds:
          type: array
          items:
            type: integer
            format: int64
          nullable: true
      additionalProperties: false
    LineUpSchemeModel:
      type: object
      properties:
        Id:
          type: integer
          format: int64
        Name:
          maxLength: 35
          minLength: 0
          type: string
          nullable: true
        SportId:
          type: integer
          format: int64
        Positions:
          type: array
          items:
            "$ref": "#/components/schemas/LineUpSchemePositionModel"
          nullable: true
      additionalProperties: false
    CompetitionModel:
      type: object
      properties:
        Id:
          type: integer
          format: int64
        Name:
          maxLength: 150
          minLength: 0
          type: string
          nullable: true
        Abbreviation:
          maxLength: 150
          minLength: 0
          type: string
          nullable: true
        ExternalId:
          maxLength: 100
          minLength: 0
          type: string
          nullable: true
        SportId:
          type: integer
          format: int64
        IsEnabled:
          type: boolean
        HasGames:
          type: boolean
        GameLogoUrl:
          type: string
          nullable: true
        BackofficeLogoUrl:
          type: string
          nullable: true
        CompetitionType:
          "$ref": "#/components/schemas/CompetitionType"
        SportType:
          "$ref": "#/components/schemas/SportType"
        Seasons:
          type: array
          items:
            "$ref": "#/components/schemas/SeasonModel"
          nullable: true
        LineUpSchemes:
          type: array
          items:
            "$ref": "#/components/schemas/LineUpSchemeModel"
          nullable: true
      additionalProperties: false
    CompetitionModelResponseListModel:
      type: object
      properties:
        FilteredCount:
          type: integer
          format: int32
        Items:
          type: array
          items:
            "$ref": "#/components/schemas/CompetitionModel"
          nullable: true
      additionalProperties: false
    CompetitionStyle:
      enum:
      - 0
      - 1
      type: integer
      format: int32
    EditCompetitionViewModel:
      type: object
      properties:
        Id:
          type: integer
          format: int32
        ExternalId:
          maxLength: 100
          minLength: 0
          type: string
          nullable: true
        SportId:
          type: integer
          format: int32
        IsEnabled:
          type: boolean
        Name:
          maxLength: 150
          minLength: 0
          type: string
          nullable: true
        IsClubCompetition:
          type: boolean
        MatchVerificationEnabled:
          type: boolean
        Style:
          "$ref": "#/components/schemas/CompetitionStyle"
        Rate:
          type: number
          format: double
        Abbreviation:
          type: string
          nullable: true
        CompetitionType:
          "$ref": "#/components/schemas/CompetitionType"
      additionalProperties: false
    FantasyGameTypes:
      enum:
      - 1
      - 2
      type: integer
      format: int32
    MatchStatus:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      type: integer
      format: int32
    FixtureMatchModel:
      type: object
      properties:
        MatchId:
          type: integer
          format: int64
        MatchDate:
          type: string
          format: date-time
        HomeTeamId:
          type: integer
          format: int64
        HomeTeamName:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        HomeTeamAbbreviation:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        AwayTeamId:
          type: integer
          format: int64
        AwayTeamName:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        AwayTeamAbbreviation:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        HomeTeamResult:
          type: integer
          format: int32
          nullable: true
        AwayTeamResult:
          type: integer
          format: int32
          nullable: true
        HomeTeamLogo:
          type: string
          nullable: true
        AwayTeamLogo:
          type: string
          nullable: true
        Status:
          "$ref": "#/components/schemas/MatchStatus"
        IsVerified:
          type: boolean
      additionalProperties: false
    FixtureMatchesByDateModel:
      type: object
      properties:
        MatchCount:
          type: integer
          format: int32
        MatchDate:
          type: string
          format: date-time
        Matches:
          type: array
          items:
            "$ref": "#/components/schemas/FixtureMatchModel"
          nullable: true
      additionalProperties: false
    FixtureRoundModel:
      type: object
      properties:
        MatchCount:
          type: integer
          format: int32
        RoundNumber:
          type: integer
          format: int32
        FixtureMatchesByDate:
          type: array
          items:
            "$ref": "#/components/schemas/FixtureMatchesByDateModel"
          nullable: true
      additionalProperties: false
    FixtureInfoModel:
      type: object
      properties:
        RoundCount:
          type: integer
          format: int32
        CurrentRound:
          type: integer
          format: int32
        CompetitionName:
          type: string
          nullable: true
        CompetitionOrContestId:
          type: integer
          format: int64
        FixtureByRoundOrDates:
          type: array
          items:
            "$ref": "#/components/schemas/FixtureRoundModel"
          nullable: true
      additionalProperties: false
    TeamModel:
      type: object
      properties:
        Name:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        FullName:
          maxLength: 200
          minLength: 0
          type: string
          nullable: true
        SportId:
          type: integer
          format: int64
        CompetitionId:
          type: integer
          format: int64
        ExternalId:
          maxLength: 100
          minLength: 0
          type: string
          nullable: true
        Abbreviation:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        SeasonId:
          type: integer
          format: int64
        UniformUrl:
          type: string
          nullable: true
        Id:
          type: integer
          format: int64
        SecondaryUniformUrl:
          type: string
          nullable: true
        ShortName:
          maxLength: 30
          minLength: 0
          type: string
          nullable: true
        LogoUrl:
          type: string
          nullable: true
      additionalProperties: false
    TeamInfoModel:
      type: object
      properties:
        Teams:
          type: array
          items:
            "$ref": "#/components/schemas/TeamModel"
          nullable: true
        FilteredCount:
          type: integer
          format: int32
      additionalProperties: false
    CompetitionEnableModel:
      type: object
      properties:
        Id:
          type: integer
          format: int64
        IsEnable:
          type: boolean
      additionalProperties: false
    ContestAccessType:
      enum:
      - 1
      - 2
      - 3
      type: integer
      format: int32
    EntryTicketModel:
      type: object
      properties:
        TicketId:
          type: integer
          format: int64
        TicketName:
          type: string
          nullable: true
        Count:
          type: integer
          format: int32
        TicketType:
          "$ref": "#/components/schemas/TicketTypes"
      additionalProperties: false
    ContestEntryAccessModel:
      type: object
      properties:
        Password:
          maxLength: 100
          minLength: 0
          type: string
          nullable: true
        AccessType:
          "$ref": "#/components/schemas/ContestAccessType"
        EntryFee:
          pattern: "[\\d]{0,7}([.,][\\d]{1,10})?"
          type: number
          format: double
        EntryTickets:
          type: array
          items:
            "$ref": "#/components/schemas/EntryTicketModel"
          nullable: true
      additionalProperties: false
    ContestGarantionType:
      enum:
      - 0
      - 1
      type: integer
      format: int32
    PrizeFundItemType:
      enum:
      - 0
      - 1
      - 2
      type: integer
      format: int32
    PrizeFundItemModel:
      type: object
      properties:
        From:
          type: integer
          format: int32
        To:
          type: integer
          format: int32
        Percent:
          pattern: "(100)|[\\d]{1,2}([.,][\\d]{1,2})?"
          type: number
          format: double
        Amount:
          pattern: "[\\d]{1,16}([.,][\\d]{1,4})?"
          type: number
          format: double
          nullable: true
        Multiplier:
          type: integer
          format: int32
          nullable: true
        PrizeName:
          maxLength: 30
          minLength: 0
          type: string
          nullable: true
        Ticket:
          "$ref": "#/components/schemas/EntryTicketModel"
        PrizeFundItemType:
          "$ref": "#/components/schemas/PrizeFundItemType"
        PrizeCount:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    PrizeFundModel:
      required:
      - ContestGarantionType
      type: object
      properties:
        ContestGarantionType:
          "$ref": "#/components/schemas/ContestGarantionType"
        IsFreeRole:
          type: boolean
          nullable: true
        FixedAmount:
          pattern: "[\\d]{1,16}([.,][\\d]{1,2})?"
          type: number
          format: double
          nullable: true
        GuaranteedPercentage:
          pattern: "(100)|[\\d]{1,2}([.,][\\d]{1,2})?"
          type: number
          format: double
          nullable: true
        CollectedAmount:
          pattern: "[\\d]{1,16}([.,][\\d]{1,2})?"
          type: number
          format: double
          nullable: true
        Type:
          "$ref": "#/components/schemas/PrizeFundType"
        PrizeFundItems:
          type: array
          items:
            "$ref": "#/components/schemas/PrizeFundItemModel"
          nullable: true
      additionalProperties: false
    PartnerCreatedContestType:
      enum:
      - 1
      - 2
      - 3
      - 4
      type: integer
      format: int32
    ContestSettingsModel:
      required:
      - ContestEntryAccess
      - PrizeFund
      type: object
      properties:
        CompetitionId:
          type: integer
          format: int64
        MatchIds:
          type: array
          items:
            type: integer
            format: int64
          nullable: true
        MatchRounds:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        ContestTemplateId:
          type: integer
          format: int64
          nullable: true
        GameStyle:
          "$ref": "#/components/schemas/GameStyles"
        Name:
          maxLength: 150
          minLength: 0
          type: string
          nullable: true
        ContestEntryAccess:
          "$ref": "#/components/schemas/ContestEntryAccessModel"
        MaxUserTeams:
          pattern: "[\\d]{0,7}([.,][\\d]{1,10})?"
          type: integer
          format: int32
          nullable: true
        MaxJoinCount:
          type: integer
          format: int32
        MinJoinCount:
          type: integer
          format: int32
        PrizeFund:
          "$ref": "#/components/schemas/PrizeFundModel"
        PartnerId:
          type: integer
          format: int64
          nullable: true
        JoinedPartnerIds:
          type: array
          items:
            type: integer
            format: int64
          nullable: true
        ContestTypeId:
          type: integer
          format: int64
        PartnerCreatedContestType:
          "$ref": "#/components/schemas/PartnerCreatedContestType"
        FantasyGameType:
          "$ref": "#/components/schemas/FantasyGameTypes"
      additionalProperties: false
    PartnerStatusEnumType:
      enum:
      - 0
      - 1
      type: integer
      format: int32
    PartnerModel:
      type: object
      properties:
        Id:
          type: integer
          format: int64
        Name:
          maxLength: 100
          minLength: 0
          type: string
          nullable: true
        Rate:
          pattern: "[\\d]{1,3}([.,][\\d]{1,2})?"
          type: number
          format: double
          nullable: true
        Status:
          "$ref": "#/components/schemas/PartnerStatusEnumType"
        HasTicket:
          type: boolean
        LangId:
          type: integer
          format: int64
          nullable: true
        FantasyGameTypeId:
          type: integer
          format: int64
          nullable: true
        IsEnable:
          type: boolean
        CurrencyId:
          type: integer
          format: int64
          nullable: true
      additionalProperties: false
    MatchMemberModel:
      type: object
      properties:
        Team:
          "$ref": "#/components/schemas/TeamModel"
        IsHome:
          type: boolean
        ReversedShirt:
          type: boolean
      additionalProperties: false
    MatchResultModel:
      type: object
      properties:
        MatchId:
          type: integer
          format: int64
        HomeScore:
          type: integer
          format: int32
        AwayScore:
          type: integer
          format: int32
      additionalProperties: false
    EntryModel:
      type: object
      properties:
        Id:
          type: integer
          format: int64
        Name:
          type: string
          nullable: true
        FullName:
          type: string
          nullable: true
        ExternalId:
          type: string
          nullable: true
      additionalProperties: false
    ParticipantPlayerModel:
      type: object
      properties:
        Position:
          type: integer
          format: int32
        Number:
          type: integer
          format: int32
        Id:
          type: integer
          format: int64
        Name:
          type: string
          nullable: true
          readOnly: true
        StartDate:
          type: string
          format: date-time
        EndDate:
          type: string
          format: date-time
        Entry:
          "$ref": "#/components/schemas/EntryModel"
      additionalProperties: false
    EventTypeModel:
      type: object
      properties:
        Id:
          type: integer
          format: int64
        Name:
          maxLength: 255
          minLength: 0
          type: string
          nullable: true
        Abbreviation:
          maxLength: 150
          minLength: 0
          type: string
          nullable: true
      additionalProperties: false
    MatchEventModel:
      type: object
      properties:
        Id:
          type: integer
          format: int64
        Player:
          "$ref": "#/components/schemas/ParticipantPlayerModel"
        EventType:
          "$ref": "#/components/schemas/EventTypeModel"
        EventDate:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    MatchModel:
      type: object
      properties:
        Id:
          type: integer
          format: int64
        StartDate:
          type: string
          format: date-time
          nullable: true
        MatchMembers:
          type: array
          items:
            "$ref": "#/components/schemas/MatchMemberModel"
          nullable: true
        Result:
          "$ref": "#/components/schemas/MatchResultModel"
        MatchEvents:
          type: array
          items:
            "$ref": "#/components/schemas/MatchEventModel"
          nullable: true
        Season:
          "$ref": "#/components/schemas/SeasonModel"
        SeasonId:
          type: integer
          format: int64
          nullable: true
        MatchStatus:
          "$ref": "#/components/schemas/MatchStatus"
        SeasonRound:
          type: integer
          format: int32
        ExternalId:
          maxLength: 100
          minLength: 0
          type: string
          nullable: true
        IsCalculated:
          type: boolean
          nullable: true
        ReCalaculated:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    ContestCreatedType:
      enum:
      - 1
      - 2
      - 3
      type: integer
      format: int32
    ScoreGameSettingModel:
      type: object
      properties:
        Score:
          type: number
          format: double
        IsMaxScore:
          type: boolean
      additionalProperties: false
    ContestModel:
      type: object
      properties:
        Id:
          type: integer
          format: int64
        SportId:
          type: integer
          format: int64
        Name:
          maxLength: 200
          minLength: 0
          type: string
          nullable: true
        StartDate:
          type: string
          format: date-time
        EndDate:
          type: string
          format: date-time
        FantasyGameType:
          "$ref": "#/components/schemas/FantasyGameTypes"
        ContestGarantionType:
          "$ref": "#/components/schemas/ContestGarantionType"
        FixedAmount:
          pattern: "[\\d]{1,18}([.,][\\d]{1,2})?"
          type: number
          format: double
          nullable: true
        PrimaryPartnerId:
          type: integer
          format: int64
          nullable: true
        JoinedClientsCount:
          type: integer
          format: int32
        IsMultiEntry:
          type: boolean
        MaxUserTeams:
          type: integer
          format: int32
        ContestTypeId:
          type: integer
          format: int64
        Status:
          "$ref": "#/components/schemas/ContestStatusTypes"
        PrizeFund:
          "$ref": "#/components/schemas/PrizeFundModel"
        PrincipalPrizeFund:
          type: number
          format: double
          nullable: true
        Partners:
          type: array
          items:
            "$ref": "#/components/schemas/PartnerModel"
          nullable: true
        Matches:
          type: array
          items:
            "$ref": "#/components/schemas/MatchModel"
          nullable: true
        Competition:
          "$ref": "#/components/schemas/CompetitionModel"
        LineUpSchemes:
          type: array
          items:
            "$ref": "#/components/schemas/LineUpSchemeModel"
          nullable: true
        CreatedType:
          "$ref": "#/components/schemas/ContestCreatedType"
        PartnerCreatedContestType:
          "$ref": "#/components/schemas/PartnerCreatedContestType"
        GameStyle:
          "$ref": "#/components/schemas/GameStyles"
        ClientId:
          type: integer
          format: int64
          nullable: true
        MaxJoinedCount:
          type: integer
          format: int32
        HasPassword:
          type: boolean
          nullable: true
        MinJoinCount:
          type: integer
          format: int32
        PrizeTypeId:
          type: integer
          format: int64
        EntryFee:
          type: number
          format: double
        ContestEntryAccess:
          "$ref": "#/components/schemas/ContestEntryAccessModel"
        Rake:
          pattern: "[\\d]{1,3}([.,][\\d]{1,2})?"
          type: number
          format: double
        ScoreGameSetting:
          "$ref": "#/components/schemas/ScoreGameSettingModel"
        IsDrafted:
          type: boolean
          nullable: true
        CanJoin:
          type: boolean
          nullable: true
        Entries:
          type: integer
          format: int32
        LineupIds:
          type: array
          items:
            type: integer
            format: int64
          nullable: true
        ContestTemplateId:
          type: integer
          format: int64
          nullable: true
      additionalProperties: false
    LobbyType:
      enum:
      - 1
      - 2
      - 3
      type: integer
      format: int32
    MultyEntryLineupModel:
      type: object
      properties:
        LineupId:
          type: integer
          format: int64
        LineupName:
          type: string
          nullable: true
      additionalProperties: false
    FantasyContestDetailsInfoModel:
      type: object
      properties:
        ContestId:
          type: integer
          format: int64
        ContestName:
          type: string
          nullable: true
        FantasyGameType:
          "$ref": "#/components/schemas/FantasyGameTypes"
        ContestGarantionType:
          "$ref": "#/components/schemas/ContestGarantionType"
        StartDate:
          type: string
          format: date-time
        EndDate:
          type: string
          format: date-time
        EntryFee:
          type: number
          format: double
        EntrySize:
          type: integer
          format: int32
        EntriesCount:
          type: integer
          format: int32
        IsMultiEntry:
          type: boolean
        ContestTypeId:
          type: integer
          format: int64
        ContestStatus:
          "$ref": "#/components/schemas/ContestStatusTypes"
        MaxUserTeams:
          type: integer
          format: int32
        CompetitionId:
          type: integer
          format: int64
        CompetitionName:
          type: string
          nullable: true
        MinJoinedCount:
          type: number
          format: double
        CanJoin:
          type: boolean
        ClientLineUpId:
          type: integer
          format: int64
          nullable: true
        CreatedType:
          type: integer
          format: int32
        SportId:
          type: integer
          format: int64
        HasPassword:
          type: boolean
        IsDrafted:
          type: boolean
        IsVerified:
          type: boolean
        GameStyle:
          "$ref": "#/components/schemas/GameStyles"
        ClientMultyEntryLineups:
          type: array
          items:
            "$ref": "#/components/schemas/MultyEntryLineupModel"
          nullable: true
        ContestEntryAccess:
          "$ref": "#/components/schemas/ContestEntryAccessModel"
        TotalTicketsCount:
          type: integer
          format: int32
        TotalCustomPrizeCount:
          type: integer
          format: int32
        TotalAmountCount:
          type: integer
          format: int32
      additionalProperties: false
    ContestEntryWebModuleModel:
      type: object
      properties:
        Position:
          type: integer
          format: int32
        LineupName:
          type: string
          nullable: true
        Points:
          type: number
          format: double
        ClientName:
          type: string
          nullable: true
        ClientId:
          type: integer
          format: int64
        LineupId:
          type: integer
          format: int64
        IsMine:
          type: boolean
        CanSee:
          type: boolean
        IsBlocked:
          type: boolean
      additionalProperties: false
    PrizeFundWebModuleModel:
      type: object
      properties:
        ContestGarantionType:
          "$ref": "#/components/schemas/ContestGarantionType"
        FixedAmount:
          type: number
          format: double
        Rake:
          type: number
          format: double
        CollectedAmount:
          type: number
          format: double
        Type:
          "$ref": "#/components/schemas/PrizeFundType"
        PrizeFundItems:
          type: array
          items:
            "$ref": "#/components/schemas/PrizeFundItemModel"
          nullable: true
      additionalProperties: false
    TeamViewModel:
      type: object
      properties:
        Id:
          type: integer
          format: int64
        Name:
          type: string
          nullable: true
        Abbreviation:
          type: string
          nullable: true
        LogoUrl:
          type: string
          nullable: true
      additionalProperties: false
    MatchMemberViewModel:
      type: object
      properties:
        IsHome:
          type: boolean
        Team:
          "$ref": "#/components/schemas/TeamViewModel"
      additionalProperties: false
    MatchResultViewModel:
      type: object
      properties:
        MatchId:
          type: integer
          format: int64
        HomeScore:
          type: integer
          format: int32
        AwayScore:
          type: integer
          format: int32
      additionalProperties: false
    MatchViewModel:
      type: object
      properties:
        Id:
          type: integer
          format: int32
        StartDate:
          type: string
          format: date-time
        RoundId:
          type: integer
          format: int32
        MatchMembers:
          type: array
          items:
            "$ref": "#/components/schemas/MatchMemberViewModel"
          nullable: true
        MatchResult:
          "$ref": "#/components/schemas/MatchResultViewModel"
      additionalProperties: false
    CanJoinRequestModel:
      type: object
      properties:
        Id:
          type: integer
          format: int64
        Password:
          type: string
          nullable: true
      additionalProperties: false
    CanJoinType:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      type: integer
      format: int32
    ContestCancelMethod:
      enum:
      - 1
      - 2
      type: integer
      format: int32
    ContestCancelModel:
      type: object
      properties:
        CancelReasonType:
          "$ref": "#/components/schemas/ContestCancelMethod"
        Reason:
          type: string
          nullable: true
      additionalProperties: false
    PrizeTypeModel:
      type: object
      properties:
        Id:
          type: integer
          format: int64
        Name:
          type: string
          nullable: true
        Abbreviation:
          type: string
          nullable: true
        IsConfigurable:
          type: boolean
        Type:
          "$ref": "#/components/schemas/PrizeFundType"
      additionalProperties: false
    ContestIsVerifiedUpdateModel:
      type: object
      properties:
        ContestId:
          type: integer
          format: int64
        IsVerified:
          type: boolean
      additionalProperties: false
    ContestSettingsBaseModel:
      required:
      - ContestEntryAccess
      - PrizeFund
      type: object
      properties:
        Name:
          maxLength: 150
          minLength: 0
          type: string
          nullable: true
        ContestEntryAccess:
          "$ref": "#/components/schemas/ContestEntryAccessModel"
        MaxUserTeams:
          pattern: "[\\d]{0,7}([.,][\\d]{1,10})?"
          type: integer
          format: int32
          nullable: true
        MaxJoinCount:
          type: integer
          format: int32
        MinJoinCount:
          type: integer
          format: int32
        PrizeFund:
          "$ref": "#/components/schemas/PrizeFundModel"
        PartnerId:
          type: integer
          format: int64
          nullable: true
        JoinedPartnerIds:
          type: array
          items:
            type: integer
            format: int64
          nullable: true
        ContestTypeId:
          type: integer
          format: int64
        PartnerCreatedContestType:
          "$ref": "#/components/schemas/PartnerCreatedContestType"
        FantasyGameType:
          "$ref": "#/components/schemas/FantasyGameTypes"
      additionalProperties: false
    ContestTemplateModel:
      type: object
      properties:
        Id:
          type: integer
          format: int64
        ClientId:
          type: integer
          format: int64
        ContestSettings:
          "$ref": "#/components/schemas/ContestSettingsBaseModel"
        CreationDate:
          type: string
          format: date-time
        ModifiedDate:
          type: string
          format: date-time
        Archived:
          type: boolean
      additionalProperties: false
    ContestTemplateModelResponseListModel:
      type: object
      properties:
        FilteredCount:
          type: integer
          format: int32
        Items:
          type: array
          items:
            "$ref": "#/components/schemas/ContestTemplateModel"
          nullable: true
      additionalProperties: false
    CurrencyViewModel:
      type: object
      properties:
        Id:
          type: integer
          format: int64
        Name:
          type: string
          nullable: true
        Precision:
          type: integer
          format: int32
        Rate:
          type: number
          format: double
        IsDefault:
          type: boolean
      additionalProperties: false
    CurrencyModel:
      type: object
      properties:
        Id:
          type: integer
          format: int64
        Name:
          type: string
          nullable: true
        Rate:
          type: number
          format: double
        IsDefault:
          type: boolean
        Precision:
          type: integer
          format: int32
      additionalProperties: false
    FaqModel:
      type: object
      properties:
        Id:
          type: integer
          format: int64
        Priority:
          type: integer
          format: int32
          nullable: true
        Question:
          maxLength: 255
          minLength: 0
          type: string
          nullable: true
        Answer:
          type: string
          nullable: true
        IsEnabled:
          type: boolean
          nullable: true
      additionalProperties: false
    GlossaryModel:
      type: object
      properties:
        Id:
          type: integer
          format: int64
        Priority:
          type: integer
          format: int32
          nullable: true
        Name:
          maxLength: 255
          minLength: 0
          type: string
          nullable: true
        Description:
          type: string
          nullable: true
        IsEnabled:
          type: boolean
          nullable: true
      additionalProperties: false
    HelpType:
      enum:
      - 0
      - 1
      - 2
      type: integer
      format: int32
    DeviceType:
      enum:
      - 0
      - 1
      - 2
      type: integer
      format: int32
    HelpModel:
      type: object
      properties:
        Prority:
          type: integer
          format: int32
        HelpType:
          "$ref": "#/components/schemas/HelpType"
        IsDefault:
          type: boolean
        IsEnable:
          type: boolean
        Title:
          type: string
          nullable: true
        Text:
          type: string
          nullable: true
        LanguageId:
          type: integer
          format: int64
        PartnerId:
          type: integer
          format: int64
          nullable: true
        SectionId:
          type: integer
          format: int64
        DeviceType:
          "$ref": "#/components/schemas/DeviceType"
      additionalProperties: false
    HelpModelResponseListModel:
      type: object
      properties:
        FilteredCount:
          type: integer
          format: int32
        Items:
          type: array
          items:
            "$ref": "#/components/schemas/HelpModel"
          nullable: true
      additionalProperties: false
    SectionDataModel:
      type: object
      properties:
        Title:
          type: string
          nullable: true
        Text:
          type: string
          nullable: true
        LanguageId:
          type: integer
          format: int64
        SectionId:
          type: integer
          format: int64
        DeviceType:
          "$ref": "#/components/schemas/DeviceType"
      additionalProperties: false
    SectionModel:
      type: object
      properties:
        Id:
          type: integer
          format: int64
        Prority:
          type: integer
          format: int32
        HelpType:
          "$ref": "#/components/schemas/HelpType"
        IsEnable:
          type: boolean
        PartnerId:
          type: integer
          format: int64
          nullable: true
        SectionDatas:
          type: array
          items:
            "$ref": "#/components/schemas/SectionDataModel"
          nullable: true
      additionalProperties: false
    SectionEnableModel:
      type: object
      properties:
        Id:
          type: integer
          format: int64
        IsEnable:
          type: boolean
      additionalProperties: false
    LangViewModel:
      type: object
      properties:
        Id:
          type: integer
          format: int32
        Uid:
          type: string
          nullable: true
        Name:
          type: string
          nullable: true
        IsDefault:
          type: boolean
        Localization:
          type: string
          nullable: true
      additionalProperties: false
    LanguageViewModel:
      required:
      - Localization
      - Name
      - Uid
      type: object
      properties:
        Id:
          type: integer
          format: int32
        Uid:
          maxLength: 8
          minLength: 0
          type: string
        Name:
          maxLength: 50
          minLength: 0
          type: string
        IsDefault:
          type: boolean
        IsEnable:
          type: boolean
        Localization:
          maxLength: 10
          minLength: 0
          type: string
      additionalProperties: false
    LanguageTranslationViewModel:
      required:
      - Key
      - Text
      type: object
      properties:
        Key:
          maxLength: 150
          minLength: 0
          type: string
        Text:
          type: string
        PartnerId:
          type: integer
          format: int64
          nullable: true
      additionalProperties: false
    EditLanguageTranslationsViewModel:
      type: object
      properties:
        Translations:
          type: array
          items:
            "$ref": "#/components/schemas/LanguageTranslationViewModel"
          nullable: true
      additionalProperties: false
    TranslationModel:
      type: object
      properties:
        Key:
          type: string
          nullable: true
        Text:
          type: string
          nullable: true
        IsTranslated:
          type: boolean
        PartnerId:
          type: integer
          format: int64
          nullable: true
      additionalProperties: false
    LeaderBoardChallengeType:
      enum:
      - 0
      - 1
      - 2
      type: integer
      format: int32
    LeaderBoardBasePoint:
      enum:
      - 10
      - 100
      - 1000
      type: integer
      format: int32
    LeaderBoardChallengeStatus:
      enum:
      - 0
      - 1
      - 2
      - 3
      type: integer
      format: int32
    LeaderBoardChallengeTemplatePartnerModel:
      type: object
      properties:
        PartnerId:
          type: integer
          format: int64
        LeaderBoardChallengeId:
          type: integer
          format: int64
      additionalProperties: false
    LeaderBoardTemplatePrizeFundItemModel:
      type: object
      properties:
        FromPlace:
          type: integer
          format: int32
        ToPlace:
          type: integer
          format: int32
        Percent:
          pattern: "(100)|[\\d]{1,2}([.,][\\d]{1,2})?"
          type: number
          format: double
        Amount:
          pattern: "[\\d]{1,16}([.,][\\d]{1,4})?"
          type: number
          format: double
          nullable: true
        PrizeFundItemType:
          "$ref": "#/components/schemas/PrizeFundItemType"
        PrizeName:
          type: string
          nullable: true
      additionalProperties: false
    LeaderBoardChallengeModel:
      type: object
      properties:
        StartDate:
          type: string
          format: date-time
        EndDate:
          type: string
          format: date-time
        FinishDate:
          type: string
          format: date-time
          nullable: true
        CancelDate:
          type: string
          format: date-time
          nullable: true
        CancelReason:
          type: string
          nullable: true
        Status:
          "$ref": "#/components/schemas/LeaderBoardChallengeStatus"
        Id:
          type: integer
          format: int64
        PrimaryPartnerId:
          type: integer
          format: int64
        Partners:
          type: array
          items:
            "$ref": "#/components/schemas/LeaderBoardChallengeTemplatePartnerModel"
          nullable: true
        PrizeFundItems:
          type: array
          items:
            "$ref": "#/components/schemas/LeaderBoardTemplatePrizeFundItemModel"
          nullable: true
        Name:
          type: string
          nullable: true
        MinimalEntryFeeAmount:
          type: number
          format: double
        ClientId:
          type: integer
          format: int64
        PrizeFundAmount:
          type: number
          format: double
        Type:
          "$ref": "#/components/schemas/LeaderBoardChallengeType"
        PrizeTypeId:
          type: integer
          format: int64
        CreationDate:
          type: string
          format: date-time
        ModifiedDate:
          type: string
          format: date-time
        BasePoint:
          "$ref": "#/components/schemas/LeaderBoardBasePoint"
      additionalProperties: false
    LeaderBoardChallengeModelResponseListModel:
      type: object
      properties:
        FilteredCount:
          type: integer
          format: int32
        Items:
          type: array
          items:
            "$ref": "#/components/schemas/LeaderBoardChallengeModel"
          nullable: true
      additionalProperties: false
    LeaderBoardPrizeFundItemModel:
      type: object
      properties:
        FromPlace:
          type: integer
          format: int32
        ToPlace:
          type: integer
          format: int32
        Percent:
          pattern: "(100)|[\\d]{1,2}([.,][\\d]{1,2})?"
          type: number
          format: double
        Amount:
          pattern: "[\\d]{1,16}([.,][\\d]{1,4})?"
          type: number
          format: double
          nullable: true
        PrizeFundItemType:
          "$ref": "#/components/schemas/PrizeFundItemType"
        PrizeName:
          maxLength: 60
          minLength: 0
          type: string
          nullable: true
      additionalProperties: false
    LeaderBoardPrizeFundModel:
      type: object
      properties:
        PrizeFundAmount:
          pattern: "[\\d]{1,16}([.,][\\d]{1,2})?"
          type: number
          format: double
          nullable: true
        Type:
          "$ref": "#/components/schemas/PrizeFundType"
        PrizeFundItems:
          type: array
          items:
            "$ref": "#/components/schemas/LeaderBoardPrizeFundItemModel"
          nullable: true
      additionalProperties: false
    AddOrUpdateLeaderBoardChallengeModel:
      type: object
      properties:
        StartDate:
          type: string
          format: date-time
        EndDate:
          type: string
          format: date-time
        LeaderBoardChallengeTemplateId:
          type: integer
          format: int64
          nullable: true
        Name:
          maxLength: 60
          minLength: 0
          type: string
          nullable: true
        BasePoint:
          "$ref": "#/components/schemas/LeaderBoardBasePoint"
        PrimaryPartnerId:
          type: integer
          format: int64
          nullable: true
        PartnerIds:
          type: array
          items:
            type: integer
            format: int64
          nullable: true
        MinimalEntryFeeAmount:
          pattern: "^[\\d]{1,17}(([.,][\\d]{1,9}$)?)$"
          type: number
          format: double
        PrizeFund:
          "$ref": "#/components/schemas/LeaderBoardPrizeFundModel"
        Type:
          "$ref": "#/components/schemas/LeaderBoardChallengeType"
      additionalProperties: false
    CancelationModel:
      type: object
      properties:
        Reason:
          type: string
          nullable: true
      additionalProperties: false
    PositionChange:
      enum:
      - 0
      - 1
      - 2
      type: integer
      format: int32
    LeaderBoardChallengeClientModel:
      type: object
      properties:
        ClientId:
          type: integer
          format: int64
        ClientName:
          type: string
          nullable: true
        LeaderBoardChallengeId:
          type: integer
          format: int64
        IsBlocked:
          type: boolean
        Point:
          type: number
          format: double
        Place:
          type: integer
          format: int32
        PositionChange:
          "$ref": "#/components/schemas/PositionChange"
        WonAmount:
          type: number
          format: double
          nullable: true
        CurrentWonAmount:
          type: number
          format: double
          nullable: true
      additionalProperties: false
    AddOrUpdateLeaderBoardChallengeTemplateModel:
      type: object
      properties:
        Name:
          maxLength: 60
          minLength: 0
          type: string
          nullable: true
        BasePoint:
          "$ref": "#/components/schemas/LeaderBoardBasePoint"
        PrimaryPartnerId:
          type: integer
          format: int64
          nullable: true
        PartnerIds:
          type: array
          items:
            type: integer
            format: int64
          nullable: true
        MinimalEntryFeeAmount:
          pattern: "^[\\d]{1,17}(([.,][\\d]{1,9}$)?)$"
          type: number
          format: double
        PrizeFund:
          "$ref": "#/components/schemas/LeaderBoardPrizeFundModel"
        Type:
          "$ref": "#/components/schemas/LeaderBoardChallengeType"
      additionalProperties: false
    LeaderBoardChallengeTemplateModel:
      type: object
      properties:
        Id:
          type: integer
          format: int64
        PrimaryPartnerId:
          type: integer
          format: int64
        Partners:
          type: array
          items:
            "$ref": "#/components/schemas/LeaderBoardChallengeTemplatePartnerModel"
          nullable: true
        PrizeFundItems:
          type: array
          items:
            "$ref": "#/components/schemas/LeaderBoardTemplatePrizeFundItemModel"
          nullable: true
        Name:
          type: string
          nullable: true
        MinimalEntryFeeAmount:
          type: number
          format: double
        ClientId:
          type: integer
          format: int64
        PrizeFundAmount:
          type: number
          format: double
        Type:
          "$ref": "#/components/schemas/LeaderBoardChallengeType"
        PrizeTypeId:
          type: integer
          format: int64
        CreationDate:
          type: string
          format: date-time
        ModifiedDate:
          type: string
          format: date-time
        BasePoint:
          "$ref": "#/components/schemas/LeaderBoardBasePoint"
      additionalProperties: false
    LicenceModel:
      type: object
      properties:
        Id:
          type: integer
          format: int64
        Name:
          maxLength: 200
          minLength: 0
          type: string
          nullable: true
      additionalProperties: false
    LicenceListModel:
      type: object
      properties:
        Count:
          type: integer
          format: int32
        Licences:
          type: array
          items:
            "$ref": "#/components/schemas/LicenceModel"
          nullable: true
      additionalProperties: false
    LicenceListModelResponseListModel:
      type: object
      properties:
        FilteredCount:
          type: integer
          format: int32
        Items:
          type: array
          items:
            "$ref": "#/components/schemas/LicenceListModel"
          nullable: true
      additionalProperties: false
    PlayerPointModel:
      type: object
      properties:
        PlayerId:
          type: integer
          format: int64
        Point:
          type: number
          format: double
          nullable: true
        PositionId:
          type: integer
          format: int64
        PositionAbbrivation:
          type: string
          nullable: true
        PositionName:
          type: string
          nullable: true
        PlayerName:
          type: string
          nullable: true
        ExternalId:
          type: string
          nullable: true
        TeamId:
          type: integer
          format: int64
        TeamName:
          type: string
          nullable: true
        Headshot:
          type: string
          nullable: true
        UniformUrl:
          type: string
          nullable: true
        Salary:
          type: integer
          format: int32
        IsCaptain:
          type: boolean
        IsFinished:
          type: boolean
        DraftedPercent:
          type: number
          format: double
          nullable: true
        NextMatchTeams:
          type: array
          items:
            type: string
          nullable: true
        PlayerInjury:
          "$ref": "#/components/schemas/PlayerInjuryModel"
        TierNumber:
          type: integer
          format: int32
          nullable: true
        SecondaryUniformUrl:
          type: string
          nullable: true
        PlaceNumber:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    PlayersWithPointsModel:
      type: object
      properties:
        LineupMembers:
          type: array
          items:
            "$ref": "#/components/schemas/PlayerPointModel"
          nullable: true
        Substitutes:
          type: array
          items:
            "$ref": "#/components/schemas/PlayerPointModel"
          nullable: true
      additionalProperties: false
    LineUpModel:
      type: object
      properties:
        ContestId:
          type: integer
          format: int64
        LineupName:
          type: string
          nullable: true
        CompetitionExternalId:
          type: integer
          format: int32
        LineupId:
          type: integer
          format: int64
        SchemeId:
          type: integer
          format: int64
          nullable: true
        Scheme:
          type: string
          nullable: true
        TeamPoint:
          type: number
          format: double
        SalaryCup:
          type: number
          format: double
        IsBlocked:
          type: boolean
          nullable: true
        Status:
          "$ref": "#/components/schemas/ContestStatusTypes"
        CreationDate:
          type: string
          format: date-time
        Players:
          "$ref": "#/components/schemas/PlayersWithPointsModel"
        ClientId:
          type: integer
          format: int64
        PartnerCreatedContestType:
          "$ref": "#/components/schemas/PartnerCreatedContestType"
        UserName:
          type: string
          nullable: true
        UserExternalId:
          type: integer
          format: int64
          nullable: true
        PartnerId:
          type: integer
          format: int64
        PartnerName:
          type: string
          nullable: true
        SportName:
          type: string
          nullable: true
        SportType:
          "$ref": "#/components/schemas/SportType"
        ContestGameStyle:
          "$ref": "#/components/schemas/GameStyles"
        ContestName:
          type: string
          nullable: true
      additionalProperties: false
    LineUpFormationModel:
      type: object
      properties:
        SubstituteCount:
          type: integer
          format: int32
        MainCount:
          type: integer
          format: int32
        TeamMembersMinCount:
          type: integer
          format: int32
        Formations:
          type: array
          items:
            "$ref": "#/components/schemas/LineUpSchemeModel"
          nullable: true
      additionalProperties: false
    LineUpModelResponseListModel:
      type: object
      properties:
        FilteredCount:
          type: integer
          format: int32
        Items:
          type: array
          items:
            "$ref": "#/components/schemas/LineUpModel"
          nullable: true
      additionalProperties: false
    PlayerPositionBaseModel:
      type: object
      properties:
        PlayerId:
          type: integer
          format: int64
        PositionId:
          type: integer
          format: int64
        PlaceNumber:
          type: integer
          format: int32
          nullable: true
        IsCaptain:
          type: boolean
        TierNumber:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    PlayersModel:
      type: object
      properties:
        PlayerPositionIds:
          type: array
          items:
            "$ref": "#/components/schemas/PlayerPositionBaseModel"
          nullable: true
        SubstitutePlayerPositionIds:
          type: array
          items:
            "$ref": "#/components/schemas/PlayerPositionBaseModel"
          nullable: true
      additionalProperties: false
    LineUpSettingsModel:
      type: object
      properties:
        ContestId:
          type: integer
          format: int64
        ContestEntryAccess:
          "$ref": "#/components/schemas/ContestEntryAccessModel"
        LineupId:
          type: integer
          format: int64
        LineupName:
          type: string
          nullable: true
        SchemeId:
          type: integer
          format: int64
          nullable: true
        Players:
          "$ref": "#/components/schemas/PlayersModel"
        ClientLineupId:
          type: integer
          format: int64
          nullable: true
      additionalProperties: false
    FantasyContestType:
      enum:
      - 1
      - 2
      type: integer
      format: int32
    ThenBySortConfiguration:
      type: object
      properties:
        OrderNumber:
          type: integer
          format: int64
        ColumnNumber:
          type: integer
          format: int32
        IsAsc:
          type: boolean
      additionalProperties: false
    LobbyInfoModel:
      type: object
      properties:
        MaxEntryFee:
          type: number
          format: double
        MinEntryFee:
          type: number
          format: double
        MaxEntrySize:
          type: number
          format: double
        MinEntrySize:
          type: number
          format: double
        StartDate:
          type: string
          format: date-time
        EndDate:
          type: string
          format: date-time
      additionalProperties: false
    LobbyPartModel:
      type: object
      properties:
        SportId:
          type: integer
          format: int64
        PrizeFundType:
          type: integer
          format: int32
          nullable: true
        FantasyGameType:
          "$ref": "#/components/schemas/FantasyGameTypes"
        ContestStatus:
          "$ref": "#/components/schemas/ContestStatusTypes"
        SportName:
          type: string
          nullable: true
        ContestName:
          type: string
          nullable: true
        ContestId:
          type: integer
          format: int64
        CompetitionId:
          type: integer
          format: int64
        ContestEntryAccess:
          "$ref": "#/components/schemas/ContestEntryAccessModel"
        CompetitionName:
          type: string
          nullable: true
        EntrySize:
          type: integer
          format: int32
        MinEntrySize:
          type: integer
          format: int32
        EntryFee:
          type: number
          format: double
        PrizeFund:
          type: number
          format: double
        IsMultiEntry:
          type: boolean
        HasPassword:
          type: boolean
        UserMaxTeamsCount:
          type: integer
          format: int32
        Entries:
          type: integer
          format: int32
        AccessType:
          "$ref": "#/components/schemas/ContestAccessType"
        CreatedType:
          "$ref": "#/components/schemas/ContestCreatedType"
        ContestTypeId:
          type: integer
          format: int64
        StartDate:
          type: string
          format: date-time
        EndDate:
          type: string
          format: date-time
        FinishDate:
          type: string
          format: date-time
          nullable: true
        FirstDraftDate:
          type: string
          format: date-time
          nullable: true
        CreationDate:
          type: string
          format: date-time
        ContestGarantionType:
          "$ref": "#/components/schemas/ContestGarantionType"
        IsVerified:
          type: boolean
        TotalTicketsCount:
          type: integer
          format: int32
        TotalCustomPrizeCount:
          type: integer
          format: int32
        TotalAmountCount:
          type: integer
          format: int32
      additionalProperties: false
    LobbyModel:
      type: object
      properties:
        ContestCount:
          type: integer
          format: int32
        FilteredContestCount:
          type: integer
          format: int32
        UpcomingContestsCount:
          type: integer
          format: int32
        LiveContestsCount:
          type: integer
          format: int32
        NextContestStarts:
          type: number
          format: double
        LobbyInfo:
          "$ref": "#/components/schemas/LobbyInfoModel"
        ContestList:
          type: array
          items:
            "$ref": "#/components/schemas/LobbyPartModel"
          nullable: true
      additionalProperties: false
    FixtureMatchModelWithCount:
      type: object
      properties:
        TotalPoint:
          type: number
          format: double
        MatchId:
          type: integer
          format: int64
        MatchDate:
          type: string
          format: date-time
        HomeTeamId:
          type: integer
          format: int64
        HomeTeamName:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        HomeTeamAbbreviation:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        AwayTeamId:
          type: integer
          format: int64
        AwayTeamName:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        AwayTeamAbbreviation:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        HomeTeamResult:
          type: integer
          format: int32
          nullable: true
        AwayTeamResult:
          type: integer
          format: int32
          nullable: true
        HomeTeamLogo:
          type: string
          nullable: true
        AwayTeamLogo:
          type: string
          nullable: true
        Status:
          "$ref": "#/components/schemas/MatchStatus"
        IsVerified:
          type: boolean
      additionalProperties: false
    MatchUpcomingModel:
      type: object
      properties:
        MatchId:
          type: integer
          format: int64
        CompetitionId:
          type: integer
          format: int64
        SportId:
          type: integer
          format: int64
        MatchDate:
          type: string
          format: date-time
          nullable: true
        ExternalId:
          type: string
          nullable: true
        SeasonId:
          type: integer
          format: int64
          nullable: true
        SeasonRound:
          type: integer
          format: int32
        HomeTeamName:
          type: string
          nullable: true
        HomeTeamAbbreviation:
          type: string
          nullable: true
        AwayTeamName:
          type: string
          nullable: true
        AwayTeamAbbreviation:
          type: string
          nullable: true
      additionalProperties: false
    SportPositions:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      - 9
      - 10
      - 11
      - 12
      - 13
      - 14
      - 15
      - 16
      - 17
      - 18
      - 19
      - 20
      - 21
      - 22
      - 23
      - 24
      - 25
      - 26
      type: integer
      format: int32
    MatchEventTypeOutModel:
      type: object
      properties:
        Id:
          type: integer
          format: int64
        Name:
          type: string
          nullable: true
        Abbreviation:
          type: string
          nullable: true
        Calculateble:
          type: boolean
        SportName:
          type: string
          nullable: true
        Priority:
          type: integer
          format: int32
          nullable: true
        SportId:
          type: integer
          format: int64
      additionalProperties: false
    NetworkGroupViewModel:
      required:
      - Name
      type: object
      properties:
        Name:
          type: string
      additionalProperties: false
    MetricType:
      enum:
      - 0
      - 1
      type: integer
      format: int32
    RegionViewModel:
      type: object
      properties:
        IsoCode:
          type: string
          nullable: true
        Name:
          type: string
          nullable: true
        IsVisible:
          type: boolean
        ExternalId:
          type: string
          nullable: true
        ParentRegionId:
          type: integer
          format: int64
          nullable: true
      additionalProperties: false
    PartnerViewModel:
      type: object
      properties:
        Id:
          type: integer
          format: int64
        Name:
          maxLength: 100
          minLength: 0
          type: string
          nullable: true
        Rate:
          pattern: "[\\d]{1,3}([.,][\\d]{1,2})?"
          type: number
          format: double
          nullable: true
        Rake:
          maximum: 20
          minimum: 0
          type: number
          format: double
          nullable: true
        MetricType:
          "$ref": "#/components/schemas/MetricType"
        Status:
          "$ref": "#/components/schemas/PartnerStatusEnumType"
        Region:
          "$ref": "#/components/schemas/RegionViewModel"
        HasTicket:
          type: boolean
        LangId:
          type: integer
          format: int64
          nullable: true
        FantasyGameType:
          "$ref": "#/components/schemas/FantasyGameTypes"
        IsEnable:
          type: boolean
        CurrencyId:
          type: integer
          format: int64
          nullable: true
        LicenceId:
          type: integer
          format: int64
          nullable: true
      additionalProperties: false
    AddPartnerInternalViewModel:
      type: object
      properties:
        Rake:
          maximum: 20
          minimum: 0
          type: number
          format: double
        UserName:
          maxLength: 150
          minLength: 0
          type: string
          nullable: true
        Password:
          maxLength: 16
          minLength: 0
          type: string
          nullable: true
        PartnerId:
          type: integer
          format: int32
          nullable: true
        CurrencyName:
          maxLength: 5
          minLength: 0
          type: string
          nullable: true
        PartnerName:
          maxLength: 100
          minLength: 0
          type: string
          nullable: true
        LangId:
          type: integer
          format: int64
        IsHeaderVisible:
          type: boolean
          nullable: true
      additionalProperties: false
    PartnerEditModel:
      type: object
      properties:
        Rake:
          maximum: 20
          minimum: 0
          type: number
          format: double
          nullable: true
        CurrencyId:
          type: integer
          format: int64
        LangId:
          type: integer
          format: int64
        MetricType:
          "$ref": "#/components/schemas/MetricType"
        GameType:
          "$ref": "#/components/schemas/FantasyGameTypes"
        LicenceId:
          type: integer
          format: int64
          nullable: true
        Id:
          type: integer
          format: int64
        Name:
          type: string
          nullable: true
      additionalProperties: false
    SportViewModel:
      type: object
      properties:
        Id:
          type: integer
          format: int64
        Name:
          type: string
          nullable: true
        SportType:
          "$ref": "#/components/schemas/SportType"
        IsEnabled:
          type: boolean
        GameLogoUrl:
          type: string
          nullable: true
        BackofficeLogoUrl:
          type: string
          nullable: true
      additionalProperties: false
    PartnerSportViewModel:
      type: object
      properties:
        SportId:
          type: integer
          format: int64
        Priority:
          type: integer
          format: int32
        IsEnabled:
          type: boolean
        SubstitutionRate:
          type: number
          format: double
        HasGames:
          type: boolean
        HasCaptain:
          type: boolean
        MatchMemberViewFormat:
          type: boolean
        Sport:
          "$ref": "#/components/schemas/SportViewModel"
      additionalProperties: false
    PartnerCompetitionViewModel:
      type: object
      properties:
        CompetitionId:
          type: integer
          format: int32
      additionalProperties: false
    PartnerPrizeFundViewModel:
      type: object
      properties:
        MinEntrySize:
          type: integer
          format: int32
        PrizeTypeId:
          type: integer
          format: int32
      additionalProperties: false
    ConfigurationDataItemViewModel:
      type: object
      properties:
        Name:
          type: string
          nullable: true
        IsEnabled:
          type: boolean
      additionalProperties: false
    FieldAccessDataItemsViewModel:
      type: object
      properties:
        Target:
          type: string
          nullable: true
        DataItems:
          type: array
          items:
            "$ref": "#/components/schemas/ConfigurationDataItemViewModel"
          nullable: true
      additionalProperties: false
    EntryFeeViewModel:
      type: object
      properties:
        IsDefault:
          type: boolean
        EntryFee:
          type: number
          format: double
      additionalProperties: false
    PartnerEntryFeeAndSizeViewModel:
      type: object
      properties:
        EntryFees:
          type: array
          items:
            "$ref": "#/components/schemas/EntryFeeViewModel"
          nullable: true
        EntrySizes:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
      additionalProperties: false
    FreerollContestAccessMode:
      enum:
      - 0
      - 1
      - 2
      - 3
      type: integer
      format: int32
    PartnerConfigurationViewModel:
      type: object
      properties:
        Rake:
          maximum: 20
          minimum: 0
          type: number
          format: double
          nullable: true
        UserContestCreatedMaxEntriesCount:
          type: integer
          format: int32
          nullable: true
        MinEntrySize:
          pattern: "[\\d]{0,7}([.,][\\d]{1,10})?"
          type: number
          format: double
        IsHeaderVisible:
          type: boolean
          nullable: true
        EntryFeeAndSize:
          "$ref": "#/components/schemas/PartnerEntryFeeAndSizeViewModel"
        EnableFaces:
          type: boolean
          nullable: true
        EnableTShirts:
          type: boolean
          nullable: true
        EnableLogos:
          type: boolean
        EnableAbbreviations:
          type: boolean
        RequiredVerification:
          type: boolean
        FreerollContestAccessMode:
          "$ref": "#/components/schemas/FreerollContestAccessMode"
        FreerollContestCount:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    PartnerAccessabilityConfigurationViewModel:
      type: object
      properties:
        JoinNetworkContest:
          type: boolean
        JoinCloudContest:
          type: boolean
        JoinTrafficCloudContest:
          type: boolean
      additionalProperties: false
    PartnerSettingsViewModel:
      type: object
      properties:
        CurrencyId:
          type: integer
          format: int32
        Rake:
          maximum: 20
          minimum: 0
          type: number
          format: double
        LangId:
          type: integer
          format: int64
        FantasyGameType:
          "$ref": "#/components/schemas/FantasyGameTypes"
        PartnerSports:
          type: array
          items:
            "$ref": "#/components/schemas/PartnerSportViewModel"
          nullable: true
        PartnerCompetitions:
          type: array
          items:
            "$ref": "#/components/schemas/PartnerCompetitionViewModel"
          nullable: true
        PartnerPrizeFunds:
          type: array
          items:
            "$ref": "#/components/schemas/PartnerPrizeFundViewModel"
          nullable: true
        FieldAccessDataItems:
          type: array
          items:
            "$ref": "#/components/schemas/FieldAccessDataItemsViewModel"
          nullable: true
        PartnerConfiguration:
          "$ref": "#/components/schemas/PartnerConfigurationViewModel"
        AccessabilityConfiguration:
          "$ref": "#/components/schemas/PartnerAccessabilityConfigurationViewModel"
      additionalProperties: false
    EntryFeeModel:
      type: object
      properties:
        IsDefault:
          type: boolean
        EntryFee:
          type: number
          format: double
      additionalProperties: false
    PartnerEntryFeeAndSizeModel:
      type: object
      properties:
        EntryFees:
          type: array
          items:
            "$ref": "#/components/schemas/EntryFeeModel"
          nullable: true
        EntrySizes:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
      additionalProperties: false
    PartnerAccessabilityConfigurationModel:
      type: object
      properties:
        JoinNetworkContest:
          type: boolean
        JoinCloudContest:
          type: boolean
        JoinTrafficCloudContest:
          type: boolean
      additionalProperties: false
    ConfigurationDataItemModel:
      type: object
      properties:
        Name:
          type: string
          nullable: true
        IsEnabled:
          type: boolean
      additionalProperties: false
    FieldAccessDataItems:
      type: object
      properties:
        Target:
          type: string
          nullable: true
        DataItems:
          type: array
          items:
            "$ref": "#/components/schemas/ConfigurationDataItemModel"
          nullable: true
      additionalProperties: false
    PartnerConfigurationModel:
      type: object
      properties:
        Rake:
          maximum: 20
          minimum: 0
          type: number
          format: double
          nullable: true
        UserContestCreatedMaxEntriesCount:
          type: integer
          format: int32
          nullable: true
        MinEntrySize:
          maximum: 10000
          minimum: 0
          type: number
          format: double
        IsHeaderVisible:
          type: boolean
          nullable: true
        EnableFaces:
          type: boolean
          nullable: true
        EnableTShirts:
          type: boolean
          nullable: true
        EnableLogos:
          type: boolean
          nullable: true
        RequiredVerification:
          type: boolean
          nullable: true
        EnableAbbreviations:
          type: boolean
          nullable: true
        FreerollContestAccessMode:
          "$ref": "#/components/schemas/FreerollContestAccessMode"
        FreerollContestCount:
          type: integer
          format: int32
          nullable: true
        EntryFeeAndSize:
          "$ref": "#/components/schemas/PartnerEntryFeeAndSizeModel"
        PartnerAccessability:
          "$ref": "#/components/schemas/PartnerAccessabilityConfigurationModel"
        FieldAccessData:
          type: array
          items:
            "$ref": "#/components/schemas/FieldAccessDataItems"
          nullable: true
      additionalProperties: false
    PartnerPaletteViewModel:
      required:
      - AcceptColor
      - ActiveTabBgColor
      - AlertColor
      - GradientColor
      - HelpColor
      - MainColor
      - MoneyAmountColor
      - PrimaryBgColor
      - PrimaryTextActiveColor
      - PrimaryTextColor
      - ScrollBgColor
      - SecondaryTextColor
      - TabBgColor
      - TabBgHoverColor
      - TableBgColor
      - TableTitleBgColor
      - ThirdTextColor
      type: object
      properties:
        ScrollBgColor:
          type: string
        TableTitleBgColor:
          type: string
        TableBgColor:
          type: string
        PrimaryBgColor:
          type: string
        TabBgColor:
          type: string
        TabBgHoverColor:
          type: string
        ActiveTabBgColor:
          type: string
        ThirdTextColor:
          type: string
        HelpColor:
          type: string
        SecondaryTextColor:
          type: string
        PrimaryTextColor:
          type: string
        MainColor:
          type: string
        AcceptColor:
          type: string
        MoneyAmountColor:
          type: string
        GradientColor:
          type: string
        AlertColor:
          type: string
        PrimaryTextActiveColor:
          type: string
        IsDark:
          type: boolean
      additionalProperties: false
    StartingColorKitViewModel:
      required:
      - AcceptColor
      - AlertColor
      - GradientColor
      - MainColor
      - MoneyAmountColor
      - PrimaryTextActiveColor
      type: object
      properties:
        MainColor:
          type: string
        AcceptColor:
          type: string
        MoneyAmountColor:
          type: string
        GradientColor:
          type: string
        AlertColor:
          type: string
        PrimaryTextActiveColor:
          type: string
        IsDark:
          type: boolean
          nullable: true
      additionalProperties: false
    ChangePartnerPrizeTypeViewModel:
      required:
      - MinEntrySize
      type: object
      properties:
        MinEntrySize:
          type: integer
          format: int32
        PrizeTypeIds:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
      additionalProperties: false
    AddBackofficeAccountModel:
      type: object
      properties:
        CurrencyId:
          type: integer
          format: int64
        PartnerId:
          type: integer
          format: int64
        UserName:
          type: string
          nullable: true
        Password:
          type: string
          nullable: true
      additionalProperties: false
    PartnerSportUpdateModel:
      type: object
      properties:
        SportId:
          type: integer
          format: int64
        Priority:
          type: integer
          format: int32
        IsEnabled:
          type: boolean
        HasCaptain:
          type: boolean
        MatchMemberViewFormat:
          type: boolean
        SubstitutionRate:
          type: number
          format: double
        IsClientLineupContinuable:
          type: boolean
      additionalProperties: false
    ContestCountWithFilterType:
      type: object
      properties:
        Count:
          type: integer
          format: int32
        Status:
          "$ref": "#/components/schemas/ContestStatusTypes"
      additionalProperties: false
    PlayerCountWithFilterType:
      type: object
      properties:
        Count:
          type: integer
          format: int32
        ClientFilterType:
          "$ref": "#/components/schemas/ClientReportFilterType"
      additionalProperties: false
    ClientActivityModel:
      type: object
      properties:
        Players:
          "$ref": "#/components/schemas/PlayerCountWithFilterType"
        PayingNewPlayers:
          "$ref": "#/components/schemas/PlayerCountWithFilterType"
        PayingOldPlayers:
          "$ref": "#/components/schemas/PlayerCountWithFilterType"
        OldPlayers:
          "$ref": "#/components/schemas/PlayerCountWithFilterType"
        NewPlayers:
          "$ref": "#/components/schemas/PlayerCountWithFilterType"
        ActivePlayers:
          "$ref": "#/components/schemas/PlayerCountWithFilterType"
        ActiveNewPlayers:
          "$ref": "#/components/schemas/PlayerCountWithFilterType"
        ActiveOldPlayers:
          "$ref": "#/components/schemas/PlayerCountWithFilterType"
      additionalProperties: false
    ActivityModel:
      type: object
      properties:
        ContestsCount:
          "$ref": "#/components/schemas/ContestCountWithFilterType"
        LiveContestsCount:
          "$ref": "#/components/schemas/ContestCountWithFilterType"
        CanceledContestsCount:
          "$ref": "#/components/schemas/ContestCountWithFilterType"
        FinishedContestsCount:
          "$ref": "#/components/schemas/ContestCountWithFilterType"
        UpcomingContestsCount:
          "$ref": "#/components/schemas/ContestCountWithFilterType"
        InactiveContestsCount:
          "$ref": "#/components/schemas/ContestCountWithFilterType"
        GuaranteedContestCount:
          "$ref": "#/components/schemas/ContestCountWithFilterType"
        ClientActivity:
          "$ref": "#/components/schemas/ClientActivityModel"
      additionalProperties: false
    PartnerCompetitionModel:
      type: object
      properties:
        CompetitionId:
          type: integer
          format: int64
        IsEnabled:
          type: boolean
      additionalProperties: false
    RuleModel:
      required:
      - IsEnabled
      type: object
      properties:
        Id:
          type: integer
          format: int64
        Priority:
          type: integer
          format: int32
          nullable: true
        Name:
          maxLength: 255
          minLength: 0
          type: string
          nullable: true
        Description:
          type: string
          nullable: true
        IsEnabled:
          type: boolean
        Url:
          type: string
          nullable: true
      additionalProperties: false
    FieldAccessDataItemsResponseListModel:
      type: object
      properties:
        FilteredCount:
          type: integer
          format: int32
        Items:
          type: array
          items:
            "$ref": "#/components/schemas/FieldAccessDataItems"
          nullable: true
      additionalProperties: false
    PermissionsResultModel:
      type: object
      properties:
        FilteredCount:
          type: integer
          format: int32
        Permissions:
          type: array
          items:
            "$ref": "#/components/schemas/PermissionModel"
          nullable: true
      additionalProperties: false
    TranslationGroup:
      type: object
      properties:
        Name:
          type: string
          nullable: true
        TranslationKeyGroupMaps:
          type: array
          items:
            "$ref": "#/components/schemas/TranslationKeyGroupMap"
          nullable: true
        Id:
          type: integer
          format: int64
      additionalProperties: false
    TranslationKeyGroupMap:
      type: object
      properties:
        TranslationKeyId:
          type: integer
          format: int64
        TranslationGroupId:
          type: integer
          format: int64
        TranslationGroup:
          "$ref": "#/components/schemas/TranslationGroup"
        TranslationKey:
          "$ref": "#/components/schemas/TranslationKey"
        Id:
          type: integer
          format: int64
      additionalProperties: false
    TranslationKey:
      type: object
      properties:
        Key:
          type: string
          nullable: true
        TranslationKeyGroupMaps:
          type: array
          items:
            "$ref": "#/components/schemas/TranslationKeyGroupMap"
          nullable: true
        Translations:
          type: array
          items:
            "$ref": "#/components/schemas/Translation"
          nullable: true
        Id:
          type: integer
          format: int64
      additionalProperties: false
    Translation:
      type: object
      properties:
        Text:
          type: string
          nullable: true
        LangId:
          type: integer
          format: int64
        TranslationKeyId:
          type: integer
          format: int64
        PartnerId:
          type: integer
          format: int64
          nullable: true
        Partner:
          "$ref": "#/components/schemas/Partner"
        Lang:
          "$ref": "#/components/schemas/Lang"
        TranslationKey:
          "$ref": "#/components/schemas/TranslationKey"
        IsTranslated:
          type: boolean
        Id:
          type: integer
          format: int64
      additionalProperties: false
    FileCategory:
      enum:
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      - 9
      - 10
      type: integer
      format: int32
    AccountPermission:
      type: object
      properties:
        PermissionId:
          type: integer
          format: int64
        Permission:
          "$ref": "#/components/schemas/Permission"
        UserId:
          type: integer
          format: int64
        Client:
          "$ref": "#/components/schemas/Client"
      additionalProperties: false
    Permission:
      type: object
      properties:
        Name:
          type: string
          nullable: true
        AccountPermissions:
          type: array
          items:
            "$ref": "#/components/schemas/AccountPermission"
          nullable: true
        AccountTypePermissions:
          type: array
          items:
            "$ref": "#/components/schemas/AccountTypePermission"
          nullable: true
        Id:
          type: integer
          format: int64
      additionalProperties: false
    AccountTypePermission:
      type: object
      properties:
        AccountTypeId:
          type: integer
          format: int64
        AccountType:
          "$ref": "#/components/schemas/AccountType"
        PermissionId:
          type: integer
          format: int64
        Permission:
          "$ref": "#/components/schemas/Permission"
      additionalProperties: false
    AccountType:
      type: object
      properties:
        Name:
          type: string
          nullable: true
        Clients:
          type: array
          items:
            "$ref": "#/components/schemas/Client"
          nullable: true
        AccountTypePermissions:
          type: array
          items:
            "$ref": "#/components/schemas/AccountTypePermission"
          nullable: true
        Id:
          type: integer
          format: int64
      additionalProperties: false
    EventTypes:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 7
      - 8
      - 9
      - 10
      - 11
      - 12
      - 14
      - 15
      - 16
      - 17
      - 18
      - 19
      - 20
      - 21
      - 22
      - 23
      - 24
      - 25
      - 26
      - 27
      - 28
      - 29
      - 30
      - 31
      - 32
      - 33
      - 34
      - 35
      - 36
      - 37
      - 38
      - 39
      - 40
      - 41
      - 42
      - 43
      - 44
      - 45
      - 46
      - 47
      - 48
      - 49
      - 50
      - 51
      - 52
      - 53
      - 54
      - 55
      - 56
      - 57
      - 58
      - 59
      - 60
      - 61
      - 62
      - 64
      - 65
      - 66
      - 67
      - 68
      - 69
      - 70
      - 71
      - 72
      - 73
      - 74
      - 75
      - 76
      - 77
      - 78
      - 79
      - 80
      - 81
      - 82
      - 83
      - 84
      - 85
      - 86
      - 87
      - 88
      - 89
      - 90
      - 91
      - 92
      - 93
      - 94
      - 95
      - 96
      - 97
      - 98
      - 99
      - 100
      - 101
      - 102
      - 103
      - 104
      - 105
      - 106
      - 107
      type: integer
      format: int32
    DataSourceType:
      enum:
      - 0
      - 1
      type: integer
      format: int32
    PlayerHistorySalaryPoint:
      type: object
      properties:
        PlayerId:
          type: integer
          format: int64
        Player:
          "$ref": "#/components/schemas/Player"
        SalaryPoint:
          type: number
          format: double
      additionalProperties: false
    ClientLineupMatch:
      type: object
      properties:
        MatchId:
          type: integer
          format: int64
        Match:
          "$ref": "#/components/schemas/Match"
        ClientLineupId:
          type: integer
          format: int64
        Lineup:
          "$ref": "#/components/schemas/ClientLineup"
        Id:
          type: integer
          format: int64
      additionalProperties: false
    ClientLineupMember:
      type: object
      properties:
        ClientLineupId:
          type: integer
          format: int64
        LineUp:
          "$ref": "#/components/schemas/ClientLineup"
        PlayerId:
          type: integer
          format: int64
        Player:
          "$ref": "#/components/schemas/Player"
        ModifiedDate:
          type: string
          format: date-time
          nullable: true
        IsCaptain:
          type: boolean
        IsMain:
          type: boolean
        TierNumber:
          type: integer
          format: int32
          nullable: true
        PlaceNumber:
          type: integer
          format: int32
          nullable: true
        SportPlayerPositionId:
          type: integer
          format: int64
          nullable: true
        SportPlayerPosition:
          "$ref": "#/components/schemas/SportPlayerPosition"
        Id:
          type: integer
          format: int64
      additionalProperties: false
    ClientLineupContest:
      type: object
      properties:
        ClientLineupId:
          type: integer
          format: int64
        ContestId:
          type: integer
          format: int64
        ClientLineup:
          "$ref": "#/components/schemas/ClientLineup"
        Contest:
          "$ref": "#/components/schemas/Contest"
        Id:
          type: integer
          format: int64
      additionalProperties: false
    LineUpSchemePosition:
      type: object
      properties:
        LineUpSchemeId:
          type: integer
          format: int64
        SportPlayerPositionId:
          type: integer
          format: int64
        Count:
          type: integer
          format: int32
        LineUpScheme:
          "$ref": "#/components/schemas/LineUpScheme"
        SportPlayerPosition:
          "$ref": "#/components/schemas/SportPlayerPosition"
      additionalProperties: false
    LineUpScheme:
      type: object
      properties:
        Name:
          type: string
          nullable: true
        SportId:
          type: integer
          format: int64
        Sport:
          "$ref": "#/components/schemas/Sport"
        LineUps:
          type: array
          items:
            "$ref": "#/components/schemas/LineUp"
          nullable: true
        LineUpSchemePositions:
          type: array
          items:
            "$ref": "#/components/schemas/LineUpSchemePosition"
          nullable: true
        ClientLineups:
          type: array
          items:
            "$ref": "#/components/schemas/ClientLineup"
          nullable: true
        Id:
          type: integer
          format: int64
      additionalProperties: false
    ClientLineup:
      type: object
      properties:
        CompetitionId:
          type: integer
          format: int64
        GameStyle:
          "$ref": "#/components/schemas/GameStyles"
        IsValid:
          type: boolean
        MatchesString:
          type: string
          nullable: true
        Archived:
          type: boolean
        ClientLineupEntryHistoriesCount:
          type: integer
          format: int32
        ArchivedDate:
          type: string
          format: date-time
          nullable: true
        ValidationMessage:
          type: string
          nullable: true
        Competition:
          "$ref": "#/components/schemas/Competition"
        ClientLineupMatches:
          type: array
          items:
            "$ref": "#/components/schemas/ClientLineupMatch"
          nullable: true
        ClientLineupMembers:
          type: array
          items:
            "$ref": "#/components/schemas/ClientLineupMember"
          nullable: true
        LineUps:
          type: array
          items:
            "$ref": "#/components/schemas/LineUp"
          nullable: true
        ClientLineupContests:
          type: array
          items:
            "$ref": "#/components/schemas/ClientLineupContest"
          nullable: true
        ClientId:
          type: integer
          format: int64
        Client:
          "$ref": "#/components/schemas/Client"
        SchemeId:
          type: integer
          format: int64
          nullable: true
        LineUpScheme:
          "$ref": "#/components/schemas/LineUpScheme"
        RemainingSalary:
          type: integer
          format: int64
        Name:
          type: string
          nullable: true
        CreationDate:
          type: string
          format: date-time
        ModifiedDate:
          type: string
          format: date-time
        Id:
          type: integer
          format: int64
      additionalProperties: false
    ContestWinner:
      type: object
      properties:
        ContestId:
          type: integer
          format: int64
        ClientId:
          type: integer
          format: int64
        LineupId:
          type: integer
          format: int64
        WonAmount:
          type: number
          format: double
          nullable: true
        PrizeName:
          type: string
          nullable: true
        TicketId:
          type: integer
          format: int64
          nullable: true
        Count:
          type: integer
          format: int32
          nullable: true
        Place:
          type: integer
          format: int32
        Point:
          type: number
          format: double
          nullable: true
        CaptainPoint:
          type: number
          format: double
          nullable: true
        Lineup:
          "$ref": "#/components/schemas/LineUp"
        Client:
          "$ref": "#/components/schemas/Client"
        Contest:
          "$ref": "#/components/schemas/Contest"
        Id:
          type: integer
          format: int64
      additionalProperties: false
    ContestEntryTicket:
      type: object
      properties:
        ContestId:
          type: integer
          format: int64
        TicketId:
          type: integer
          format: int64
        Count:
          type: integer
          format: int32
        Ticket:
          "$ref": "#/components/schemas/Ticket"
        Contest:
          "$ref": "#/components/schemas/Contest"
      additionalProperties: false
    ClientTicket:
      type: object
      properties:
        ClientId:
          type: integer
          format: int64
        TicketId:
          type: integer
          format: int64
        Count:
          type: integer
          format: int32
        TotalCount:
          type: integer
          format: int32
        Ticket:
          "$ref": "#/components/schemas/Ticket"
        Client:
          "$ref": "#/components/schemas/Client"
      additionalProperties: false
    PromoCodeHistory:
      type: object
      properties:
        PromoCodeId:
          type: integer
          format: int64
        ClientId:
          type: integer
          format: int64
        ActivateDate:
          type: string
          format: date-time
        PromoCode:
          "$ref": "#/components/schemas/PromoCode"
        Client:
          "$ref": "#/components/schemas/Client"
      additionalProperties: false
    PromoCode:
      type: object
      properties:
        PartnerId:
          type: integer
          format: int64
        TicketId:
          type: integer
          format: int64
        ExpirationDate:
          type: string
          format: date-time
        UsersCount:
          type: integer
          format: int32
        TotalUsersCount:
          type: integer
          format: int32
        TicketCount:
          type: integer
          format: int32
        Code:
          type: string
          nullable: true
        Partner:
          "$ref": "#/components/schemas/Partner"
        Ticket:
          "$ref": "#/components/schemas/Ticket"
        PromoCodeHistories:
          type: array
          items:
            "$ref": "#/components/schemas/PromoCodeHistory"
          nullable: true
        Id:
          type: integer
          format: int64
      additionalProperties: false
    ContestFundSetting:
      type: object
      properties:
        ContestId:
          type: integer
          format: int64
        TicketId:
          type: integer
          format: int64
          nullable: true
        Count:
          type: integer
          format: int32
        FromPlace:
          type: integer
          format: int32
        ToPlace:
          type: integer
          format: int32
        Percent:
          type: number
          format: double
        Amount:
          type: number
          format: double
        PrizeName:
          type: string
          nullable: true
        PrizeFundItemType:
          "$ref": "#/components/schemas/PrizeFundItemType"
        Contest:
          "$ref": "#/components/schemas/Contest"
        Ticket:
          "$ref": "#/components/schemas/Ticket"
        Id:
          type: integer
          format: int64
      additionalProperties: false
    Ticket:
      type: object
      properties:
        Name:
          type: string
          nullable: true
        TicketRate:
          type: integer
          format: int32
          nullable: true
        TicketColor:
          type: string
          nullable: true
        TicketType:
          "$ref": "#/components/schemas/TicketTypes"
        IsEnable:
          type: boolean
        ModifiedDate:
          type: string
          format: date-time
        ContestEntryTickets:
          type: array
          items:
            "$ref": "#/components/schemas/ContestEntryTicket"
          nullable: true
        ClientTickets:
          type: array
          items:
            "$ref": "#/components/schemas/ClientTicket"
          nullable: true
        PromoCodes:
          type: array
          items:
            "$ref": "#/components/schemas/PromoCode"
          nullable: true
        ContestEntryTicketsHistories:
          type: array
          items:
            "$ref": "#/components/schemas/ContestEntryTicketsHistory"
          nullable: true
        ContestFundSettings:
          type: array
          items:
            "$ref": "#/components/schemas/ContestFundSetting"
          nullable: true
        Id:
          type: integer
          format: int64
      additionalProperties: false
    ContestEntryTicketsHistory:
      type: object
      properties:
        TicketId:
          type: integer
          format: int64
        ContestEntryHistoryId:
          type: integer
          format: int64
        TicketCount:
          type: integer
          format: int32
        Ticket:
          "$ref": "#/components/schemas/Ticket"
        ContestEntryHistory:
          "$ref": "#/components/schemas/ContestEntryHistory"
      additionalProperties: false
    ContestEntryHistory:
      type: object
      properties:
        ContestId:
          type: integer
          format: int64
        ClientId:
          type: integer
          format: int64
        LineupId:
          type: integer
          format: int64
          nullable: true
        EntryFee:
          type: number
          format: double
        EntryDate:
          type: string
          format: date-time
          nullable: true
        Client:
          "$ref": "#/components/schemas/Client"
        Contest:
          "$ref": "#/components/schemas/Contest"
        Lineup:
          "$ref": "#/components/schemas/LineUp"
        ContestEntryTicketsHistories:
          type: array
          items:
            "$ref": "#/components/schemas/ContestEntryTicketsHistory"
          nullable: true
        Id:
          type: integer
          format: int64
      additionalProperties: false
    FantasyTransactionTypes:
      enum:
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      type: integer
      format: int32
    FantasyTransaction:
      type: object
      properties:
        ClientId:
          type: integer
          format: int64
        LineUpId:
          type: integer
          format: int64
          nullable: true
        Amount:
          type: number
          format: double
        TransactionDate:
          type: string
          format: date-time
        Guid:
          type: string
          nullable: true
        FantasyTransactionGroupId:
          type: integer
          format: int64
        RakeAmount:
          type: number
          format: double
        FantasyTransactionType:
          "$ref": "#/components/schemas/FantasyTransactionTypes"
        Client:
          "$ref": "#/components/schemas/Client"
        LineUp:
          "$ref": "#/components/schemas/LineUp"
        FantasyTransactionGroup:
          "$ref": "#/components/schemas/FantasyTransactionGroup"
        Id:
          type: integer
          format: int64
      additionalProperties: false
    LeaderBoardChallengeClient:
      type: object
      properties:
        ClientId:
          type: integer
          format: int64
        Client:
          "$ref": "#/components/schemas/Client"
        Position:
          type: integer
          format: int32
          nullable: true
        LeaderBoardChallengeId:
          type: integer
          format: int64
        LeaderBoardChallenge:
          "$ref": "#/components/schemas/LeaderBoardChallenge"
        Point:
          type: number
          format: double
        PositionChange:
          "$ref": "#/components/schemas/PositionChange"
        Histories:
          type: array
          items:
            "$ref": "#/components/schemas/LeaderBoardChallengeClientHistory"
          nullable: true
        Id:
          type: integer
          format: int64
      additionalProperties: false
    LeaderBoardChallengeClientHistory:
      type: object
      properties:
        ClientId:
          type: integer
          format: int64
        Client:
          "$ref": "#/components/schemas/Client"
        ChallengeClientId:
          type: integer
          format: int64
        ChallengeClient:
          "$ref": "#/components/schemas/LeaderBoardChallengeClient"
        LineupId:
          type: integer
          format: int64
        EntryAmount:
          type: number
          format: double
        Win:
          type: boolean
          nullable: true
        ContestId:
          type: integer
          format: int64
        Point:
          type: number
          format: double
        CreationDate:
          type: string
          format: date-time
        ModifiedDate:
          type: string
          format: date-time
        Contest:
          "$ref": "#/components/schemas/Contest"
        Lineup:
          "$ref": "#/components/schemas/LineUp"
        Id:
          type: integer
          format: int64
      additionalProperties: false
    LineUp:
      type: object
      properties:
        ContestId:
          type: integer
          format: int64
        Point:
          type: number
          format: double
        ClientLineupId:
          type: integer
          format: int64
          nullable: true
        Contest:
          "$ref": "#/components/schemas/Contest"
        ClientLineup:
          "$ref": "#/components/schemas/ClientLineup"
        ContestWinners:
          type: array
          items:
            "$ref": "#/components/schemas/ContestWinner"
          nullable: true
        LineUpMembers:
          type: array
          items:
            "$ref": "#/components/schemas/LineUpMember"
          nullable: true
        ContestEntryHistories:
          type: array
          items:
            "$ref": "#/components/schemas/ContestEntryHistory"
          nullable: true
        FantasyTransactions:
          type: array
          items:
            "$ref": "#/components/schemas/FantasyTransaction"
          nullable: true
        LeaderBoardChallengeClientHistories:
          type: array
          items:
            "$ref": "#/components/schemas/LeaderBoardChallengeClientHistory"
          nullable: true
        ClientId:
          type: integer
          format: int64
        Client:
          "$ref": "#/components/schemas/Client"
        SchemeId:
          type: integer
          format: int64
          nullable: true
        LineUpScheme:
          "$ref": "#/components/schemas/LineUpScheme"
        RemainingSalary:
          type: integer
          format: int64
        Name:
          type: string
          nullable: true
        CreationDate:
          type: string
          format: date-time
        ModifiedDate:
          type: string
          format: date-time
        Id:
          type: integer
          format: int64
      additionalProperties: false
    LineUpMember:
      type: object
      properties:
        LineUpId:
          type: integer
          format: int64
        PlayerId:
          type: integer
          format: int64
        PositionId:
          type: integer
          format: int64
          nullable: true
        PlaceNumber:
          type: integer
          format: int32
          nullable: true
        IsCaptain:
          type: boolean
        IsMain:
          type: boolean
        TierNumber:
          type: integer
          format: int32
          nullable: true
        TeamId:
          type: integer
          format: int64
          nullable: true
        SportPlayerPosition:
          "$ref": "#/components/schemas/SportPlayerPosition"
        LineUp:
          "$ref": "#/components/schemas/LineUp"
        Player:
          "$ref": "#/components/schemas/Player"
        Team:
          "$ref": "#/components/schemas/Team"
        Id:
          type: integer
          format: int64
      additionalProperties: false
    Team:
      type: object
      properties:
        SportId:
          type: integer
          format: int64
        DataSourceType:
          "$ref": "#/components/schemas/DataSourceType"
        Name:
          type: string
          nullable: true
        Abbreviation:
          type: string
          nullable: true
        ShortName:
          type: string
          nullable: true
        ExternalId:
          type: string
          nullable: true
        LogoUrl:
          type: string
          nullable: true
        UniformUrl:
          type: string
          nullable: true
        SecondaryUniformUrl:
          type: string
          nullable: true
        Sport:
          "$ref": "#/components/schemas/Sport"
        SeasonMembers:
          type: array
          items:
            "$ref": "#/components/schemas/SeasonMember"
          nullable: true
        LineupMembers:
          type: array
          items:
            "$ref": "#/components/schemas/LineUpMember"
          nullable: true
        TeamMembers:
          type: array
          items:
            "$ref": "#/components/schemas/TeamMember"
          nullable: true
        Id:
          type: integer
          format: int64
      additionalProperties: false
    SeasonMember:
      type: object
      properties:
        TeamId:
          type: integer
          format: int64
        SeasonId:
          type: integer
          format: int64
        Season:
          "$ref": "#/components/schemas/Season"
        Team:
          "$ref": "#/components/schemas/Team"
      additionalProperties: false
    PlayerSeasonStat:
      type: object
      properties:
        TotalPoints:
          type: number
          format: double
        FPPG:
          type: number
          format: double
        DraftedPercentage:
          type: number
          format: double
        PlayerId:
          type: integer
          format: int64
        SeasonId:
          type: integer
          format: int64
        MatchesCount:
          type: integer
          format: int32
        Player:
          "$ref": "#/components/schemas/Player"
        Season:
          "$ref": "#/components/schemas/Season"
        Id:
          type: integer
          format: int64
      additionalProperties: false
    Season:
      type: object
      properties:
        CompetitionId:
          type: integer
          format: int64
        Name:
          type: string
          nullable: true
        StartDate:
          type: string
          format: date-time
        EndDate:
          type: string
          format: date-time
        Status:
          "$ref": "#/components/schemas/SeasonStatus"
        ExternalId:
          type: string
          nullable: true
        DataSourceType:
          "$ref": "#/components/schemas/DataSourceType"
        Competition:
          "$ref": "#/components/schemas/Competition"
        Matches:
          type: array
          items:
            "$ref": "#/components/schemas/Match"
          nullable: true
        SeasonMembers:
          type: array
          items:
            "$ref": "#/components/schemas/SeasonMember"
          nullable: true
        SeasonRounds:
          type: array
          items:
            "$ref": "#/components/schemas/SeasonRound"
          nullable: true
        PlayerSeasonStats:
          type: array
          items:
            "$ref": "#/components/schemas/PlayerSeasonStat"
          nullable: true
        Id:
          type: integer
          format: int64
      additionalProperties: false
    SeasonRound:
      type: object
      properties:
        SeasonId:
          type: integer
          format: int64
        Season:
          "$ref": "#/components/schemas/Season"
        ExternalId:
          type: string
          nullable: true
        Name:
          type: string
          nullable: true
        StartDate:
          type: string
          format: date-time
          nullable: true
        EndDate:
          type: string
          format: date-time
          nullable: true
        Type:
          type: string
          nullable: true
        Matches:
          type: array
          items:
            "$ref": "#/components/schemas/Match"
          nullable: true
        Id:
          type: integer
          format: int64
      additionalProperties: false
    GroupType:
      type: object
      properties:
        Name:
          type: string
          nullable: true
        Matches:
          type: array
          items:
            "$ref": "#/components/schemas/Match"
          nullable: true
        Id:
          type: integer
          format: int64
      additionalProperties: false
    MatchEvent:
      type: object
      properties:
        MatchId:
          type: integer
          format: int64
        TypeId:
          type: integer
          format: int64
        PlayerId:
          type: integer
          format: int64
          nullable: true
        Minute:
          type: integer
          format: int32
          nullable: true
        Second:
          type: integer
          format: int32
          nullable: true
        Count:
          type: integer
          format: int32
          nullable: true
        Date:
          type: string
          format: date-time
          nullable: true
        MatchEventType:
          "$ref": "#/components/schemas/MatchEventType"
        Match:
          "$ref": "#/components/schemas/Match"
        Player:
          "$ref": "#/components/schemas/Player"
        Id:
          type: integer
          format: int64
      additionalProperties: false
    MatchMember:
      type: object
      properties:
        MatchId:
          type: integer
          format: int64
        TeamId:
          type: integer
          format: int64
        IsHome:
          type: boolean
        Match:
          "$ref": "#/components/schemas/Match"
        Team:
          "$ref": "#/components/schemas/Team"
        Id:
          type: integer
          format: int64
      additionalProperties: false
    MatchResult:
      type: object
      properties:
        MatchId:
          type: integer
          format: int64
        HomeScore:
          type: integer
          format: int32
        AwayScore:
          type: integer
          format: int32
        Match:
          "$ref": "#/components/schemas/Match"
        Id:
          type: integer
          format: int64
      additionalProperties: false
    ContestMatch:
      type: object
      properties:
        ContestId:
          type: integer
          format: int64
        Contest:
          "$ref": "#/components/schemas/Contest"
        MatchId:
          type: integer
          format: int64
        Match:
          "$ref": "#/components/schemas/Match"
      additionalProperties: false
    MatchPlayerPoint:
      type: object
      properties:
        MatchId:
          type: integer
          format: int64
        PlayerId:
          type: integer
          format: int64
        Point:
          type: number
          format: double
        Match:
          "$ref": "#/components/schemas/Match"
        Player:
          "$ref": "#/components/schemas/Player"
        Id:
          type: integer
          format: int64
      additionalProperties: false
    Match:
      type: object
      properties:
        SeasonId:
          type: integer
          format: int64
        SeasonRound:
          type: integer
          format: int32
        MatchDate:
          type: string
          format: date-time
        Status:
          "$ref": "#/components/schemas/MatchStatus"
        ExternalId:
          type: string
          nullable: true
        ReCalaculated:
          type: integer
          format: int32
        IsCalculated:
          type: boolean
          nullable: true
        IsVerified:
          type: boolean
        DataSourceType:
          "$ref": "#/components/schemas/DataSourceType"
        SeasonRoundId:
          type: integer
          format: int64
          nullable: true
        Round:
          "$ref": "#/components/schemas/SeasonRound"
        GroupTypeId:
          type: integer
          format: int64
          nullable: true
        GroupType:
          "$ref": "#/components/schemas/GroupType"
        Season:
          "$ref": "#/components/schemas/Season"
        CanceledMatchEvents:
          type: array
          items:
            "$ref": "#/components/schemas/CanceledMatchEvent"
          nullable: true
        MatchEvents:
          type: array
          items:
            "$ref": "#/components/schemas/MatchEvent"
          nullable: true
        MatchMembers:
          type: array
          items:
            "$ref": "#/components/schemas/MatchMember"
          nullable: true
        MatchResult:
          "$ref": "#/components/schemas/MatchResult"
        ContestMatches:
          type: array
          items:
            "$ref": "#/components/schemas/ContestMatch"
          nullable: true
        MatchPlayerPoints:
          type: array
          items:
            "$ref": "#/components/schemas/MatchPlayerPoint"
          nullable: true
        ClientLineupMatches:
          type: array
          items:
            "$ref": "#/components/schemas/ClientLineupMatch"
          nullable: true
        Id:
          type: integer
          format: int64
      additionalProperties: false
    CanceledMatchEvent:
      type: object
      properties:
        MatchId:
          type: integer
          format: int64
        TypeId:
          type: integer
          format: int64
        PlayerId:
          type: integer
          format: int64
          nullable: true
        Date:
          type: string
          format: date-time
          nullable: true
        MatchEventType:
          "$ref": "#/components/schemas/MatchEventType"
        Match:
          "$ref": "#/components/schemas/Match"
        Player:
          "$ref": "#/components/schemas/Player"
        Id:
          type: integer
          format: int64
      additionalProperties: false
    PlayerInjury:
      type: object
      properties:
        PlayerId:
          type: integer
          format: int64
        Player:
          "$ref": "#/components/schemas/Player"
        Status:
          "$ref": "#/components/schemas/InjuryStatusEnum"
        Type:
          "$ref": "#/components/schemas/InjuryTypeEnum"
        Kind:
          "$ref": "#/components/schemas/InjuryKindEnum"
        StartDate:
          type: string
          format: date-time
          nullable: true
        EndDate:
          type: string
          format: date-time
          nullable: true
        NextDay:
          type: integer
          format: int32
          nullable: true
        NextMatch:
          type: integer
          format: int32
          nullable: true
        SeasonSuspend:
          "$ref": "#/components/schemas/InjurySeasonSuspendEnum"
        Description:
          type: string
          nullable: true
        CompetitionId:
          type: integer
          format: int64
          nullable: true
        Competition:
          "$ref": "#/components/schemas/Competition"
        Archive:
          type: boolean
          nullable: true
        Modified:
          type: string
          format: date-time
        Url:
          type: string
          nullable: true
        IsDeleted:
          type: boolean
          nullable: true
        Id:
          type: integer
          format: int64
      additionalProperties: false
    Player:
      type: object
      properties:
        SportId:
          type: integer
          format: int64
        Name:
          type: string
          nullable: true
        FullName:
          type: string
          nullable: true
        FirstName:
          type: string
          nullable: true
        LastName:
          type: string
          nullable: true
        Nationality:
          type: string
          nullable: true
        Foot:
          type: string
          nullable: true
        BirthDate:
          type: string
          format: date-time
          nullable: true
        SalaryPoint:
          type: number
          format: double
        ExternalId:
          type: string
          nullable: true
        Weight:
          type: integer
          format: int32
          nullable: true
        Position:
          type: string
          nullable: true
        Height:
          type: number
          format: double
          nullable: true
        Salary:
          type: integer
          format: int32
        HeadshotUrl:
          type: string
          nullable: true
        Rate:
          type: number
          format: double
        DataSourceType:
          "$ref": "#/components/schemas/DataSourceType"
        HistorySalaryPoint:
          "$ref": "#/components/schemas/PlayerHistorySalaryPoint"
        Sport:
          "$ref": "#/components/schemas/Sport"
        DeletedMatchEvents:
          type: array
          items:
            "$ref": "#/components/schemas/CanceledMatchEvent"
          nullable: true
        LineUpMembers:
          type: array
          items:
            "$ref": "#/components/schemas/LineUpMember"
          nullable: true
        MatchEvents:
          type: array
          items:
            "$ref": "#/components/schemas/MatchEvent"
          nullable: true
        TeamMembers:
          type: array
          items:
            "$ref": "#/components/schemas/TeamMember"
          nullable: true
        MatchPlayerPoints:
          type: array
          items:
            "$ref": "#/components/schemas/MatchPlayerPoint"
          nullable: true
        ClientLineupMembers:
          type: array
          items:
            "$ref": "#/components/schemas/ClientLineupMember"
          nullable: true
        PlayerSeasonStats:
          type: array
          items:
            "$ref": "#/components/schemas/PlayerSeasonStat"
          nullable: true
        PlayerInjuries:
          type: array
          items:
            "$ref": "#/components/schemas/PlayerInjury"
          nullable: true
        Id:
          type: integer
          format: int64
      additionalProperties: false
    TeamMember:
      type: object
      properties:
        TeamId:
          type: integer
          format: int64
        PlayerId:
          type: integer
          format: int64
        PositionId:
          type: integer
          format: int64
        CompetitionId:
          type: integer
          format: int64
        StartDate:
          type: string
          format: date-time
          nullable: true
        EndDate:
          type: string
          format: date-time
          nullable: true
        Active:
          type: boolean
        Updated:
          type: string
          format: date-time
          nullable: true
        ExternalId:
          type: string
          nullable: true
        DataSourceType:
          "$ref": "#/components/schemas/DataSourceType"
        SportPlayerPosition:
          "$ref": "#/components/schemas/SportPlayerPosition"
        Player:
          "$ref": "#/components/schemas/Player"
        Team:
          "$ref": "#/components/schemas/Team"
        Competition:
          "$ref": "#/components/schemas/Competition"
        Id:
          type: integer
          format: int64
      additionalProperties: false
    MatchEventTypePosition:
      type: object
      properties:
        MatchEventTypeId:
          type: integer
          format: int64
        SportPlayerPositionId:
          type: integer
          format: int64
        Priority:
          type: integer
          format: int32
        MatchEventType:
          "$ref": "#/components/schemas/MatchEventType"
        SportPlayerPosition:
          "$ref": "#/components/schemas/SportPlayerPosition"
      additionalProperties: false
    SportPlayerPositionConfig:
      type: object
      properties:
        PositionId:
          type: integer
          format: int64
        MaxCount:
          type: integer
          format: int32
        SportPlayerPosition:
          "$ref": "#/components/schemas/SportPlayerPosition"
      additionalProperties: false
    SportPlayerPosition:
      type: object
      properties:
        Name:
          type: string
          nullable: true
        SportId:
          type: integer
          format: int64
        ParentId:
          type: integer
          format: int64
          nullable: true
        Abbreviation:
          type: string
          nullable: true
        IsRealPosition:
          type: boolean
        Type:
          "$ref": "#/components/schemas/SportPositions"
        Priority:
          type: integer
          format: int32
        EventPositionPoints:
          type: array
          items:
            "$ref": "#/components/schemas/EventPositionPoint"
          nullable: true
        Sport:
          "$ref": "#/components/schemas/Sport"
        TeamMembers:
          type: array
          items:
            "$ref": "#/components/schemas/TeamMember"
          nullable: true
        LineUpSchemePositions:
          type: array
          items:
            "$ref": "#/components/schemas/LineUpSchemePosition"
          nullable: true
        ParentSportPlayerPosition:
          "$ref": "#/components/schemas/SportPlayerPosition"
        ChildrenSportPlayerPositions:
          type: array
          items:
            "$ref": "#/components/schemas/SportPlayerPosition"
          nullable: true
        LineUpMembers:
          type: array
          items:
            "$ref": "#/components/schemas/LineUpMember"
          nullable: true
        MatchEventTypePositions:
          type: array
          items:
            "$ref": "#/components/schemas/MatchEventTypePosition"
          nullable: true
        ClientLineupMembers:
          type: array
          items:
            "$ref": "#/components/schemas/ClientLineupMember"
          nullable: true
        SportPlayerPositionConfig:
          "$ref": "#/components/schemas/SportPlayerPositionConfig"
        Id:
          type: integer
          format: int64
      additionalProperties: false
    EventPositionPoint:
      type: object
      properties:
        PositionId:
          type: integer
          format: int64
        EventTypeId:
          type: integer
          format: int64
        Point:
          type: number
          format: double
        MatchEventType:
          "$ref": "#/components/schemas/MatchEventType"
        SportPlayerPosition:
          "$ref": "#/components/schemas/SportPlayerPosition"
        Id:
          type: integer
          format: int64
      additionalProperties: false
    MatchEventType:
      type: object
      properties:
        SportId:
          type: integer
          format: int64
        Name:
          type: string
          nullable: true
        Abbreviation:
          type: string
          nullable: true
        ParentId:
          type: integer
          format: int64
          nullable: true
        Priority:
          type: integer
          format: int32
          nullable: true
        Calculateble:
          type: boolean
        EventType:
          "$ref": "#/components/schemas/EventTypes"
        Sport:
          "$ref": "#/components/schemas/Sport"
        Parent:
          "$ref": "#/components/schemas/MatchEventType"
        Children:
          type: array
          items:
            "$ref": "#/components/schemas/MatchEventType"
          nullable: true
        EventPositionPoints:
          type: array
          items:
            "$ref": "#/components/schemas/EventPositionPoint"
          nullable: true
        DeletedMatchEvents:
          type: array
          items:
            "$ref": "#/components/schemas/CanceledMatchEvent"
          nullable: true
        MatchEvents:
          type: array
          items:
            "$ref": "#/components/schemas/MatchEvent"
          nullable: true
        MatchEventTypePositions:
          type: array
          items:
            "$ref": "#/components/schemas/MatchEventTypePosition"
          nullable: true
        Id:
          type: integer
          format: int64
      additionalProperties: false
    ContestType:
      type: object
      properties:
        Name:
          type: string
          nullable: true
        Abbreviation:
          type: string
          nullable: true
        MaxEntriesCount:
          type: integer
          format: int32
          nullable: true
        Type:
          "$ref": "#/components/schemas/FantasyContestType"
        Contests:
          type: array
          items:
            "$ref": "#/components/schemas/Contest"
          nullable: true
        ContestTypeSports:
          type: array
          items:
            "$ref": "#/components/schemas/ContestTypeSport"
          nullable: true
        Id:
          type: integer
          format: int64
      additionalProperties: false
    ContestTypeSport:
      type: object
      properties:
        SportId:
          type: integer
          format: int64
        ContestTypeId:
          type: integer
          format: int64
        Sport:
          "$ref": "#/components/schemas/Sport"
        ContestType:
          "$ref": "#/components/schemas/ContestType"
      additionalProperties: false
    LineUpSetting:
      type: object
      properties:
        Real:
          type: integer
          format: int32
        Substitute:
          type: integer
          format: int32
        FreeTransfers:
          type: integer
          format: int32
        LiveTransfers:
          type: integer
          format: int32
        MinCount:
          type: integer
          format: int32
        LineUpSettingSports:
          type: array
          items:
            "$ref": "#/components/schemas/LineUpSettingSport"
          nullable: true
        Id:
          type: integer
          format: int64
      additionalProperties: false
    LineUpSettingSport:
      type: object
      properties:
        LineUpSettingId:
          type: integer
          format: int64
        LineupSetting:
          "$ref": "#/components/schemas/LineUpSetting"
        SportId:
          type: integer
          format: int64
        Sport:
          "$ref": "#/components/schemas/Sport"
      additionalProperties: false
    PartnerSport:
      type: object
      properties:
        PartnerId:
          type: integer
          format: int64
        SportId:
          type: integer
          format: int64
        Priority:
          type: integer
          format: int32
        IsEnabled:
          type: boolean
        HasCaptain:
          type: boolean
        MatchMemberViewFormat:
          type: boolean
        SubstitutionRate:
          type: number
          format: double
        IsClientLineupContinuable:
          type: boolean
        Partner:
          "$ref": "#/components/schemas/Partner"
        Sport:
          "$ref": "#/components/schemas/Sport"
        Id:
          type: integer
          format: int64
      additionalProperties: false
    Sport:
      type: object
      properties:
        Name:
          type: string
          nullable: true
        SportType:
          "$ref": "#/components/schemas/SportType"
        IsEnabled:
          type: boolean
        GameLogoUrl:
          type: string
          nullable: true
        BackofficeLogoUrl:
          type: string
          nullable: true
        MatchEventTypes:
          type: array
          items:
            "$ref": "#/components/schemas/MatchEventType"
          nullable: true
        LineUpSchemes:
          type: array
          items:
            "$ref": "#/components/schemas/LineUpScheme"
          nullable: true
        Players:
          type: array
          items:
            "$ref": "#/components/schemas/Player"
          nullable: true
        Teams:
          type: array
          items:
            "$ref": "#/components/schemas/Team"
          nullable: true
        Competitions:
          type: array
          items:
            "$ref": "#/components/schemas/Competition"
          nullable: true
        ContestTypeSports:
          type: array
          items:
            "$ref": "#/components/schemas/ContestTypeSport"
          nullable: true
        SportPlayerPositions:
          type: array
          items:
            "$ref": "#/components/schemas/SportPlayerPosition"
          nullable: true
        LineUpSettingSports:
          type: array
          items:
            "$ref": "#/components/schemas/LineUpSettingSport"
          nullable: true
        PartnerSports:
          type: array
          items:
            "$ref": "#/components/schemas/PartnerSport"
          nullable: true
        Id:
          type: integer
          format: int64
      additionalProperties: false
    PartnerCompetition:
      type: object
      properties:
        PartnerId:
          type: integer
          format: int64
        CompetitionId:
          type: integer
          format: int64
        IsEnabled:
          type: boolean
        Partner:
          "$ref": "#/components/schemas/Partner"
        Competition:
          "$ref": "#/components/schemas/Competition"
      additionalProperties: false
    Competition:
      type: object
      properties:
        Name:
          type: string
          nullable: true
        Abbreviation:
          type: string
          nullable: true
        CompetitionType:
          "$ref": "#/components/schemas/CompetitionType"
        SportId:
          type: integer
          format: int64
        Rate:
          type: number
          format: double
        ExternalId:
          type: string
          nullable: true
        IsEnabled:
          type: boolean
        Style:
          "$ref": "#/components/schemas/CompetitionStyle"
        IsClubCompetition:
          type: boolean
        MatchVerificationEnabled:
          type: boolean
        GameLogoUrl:
          type: string
          nullable: true
        BackofficeLogoUrl:
          type: string
          nullable: true
        Sport:
          "$ref": "#/components/schemas/Sport"
        Seasons:
          type: array
          items:
            "$ref": "#/components/schemas/Season"
          nullable: true
        Contests:
          type: array
          items:
            "$ref": "#/components/schemas/Contest"
          nullable: true
        PartnerCompetitions:
          type: array
          items:
            "$ref": "#/components/schemas/PartnerCompetition"
          nullable: true
        TeamMembers:
          type: array
          items:
            "$ref": "#/components/schemas/TeamMember"
          nullable: true
        ClientLineups:
          type: array
          items:
            "$ref": "#/components/schemas/ClientLineup"
          nullable: true
        PlayerInjuries:
          type: array
          items:
            "$ref": "#/components/schemas/PlayerInjury"
          nullable: true
        Id:
          type: integer
          format: int64
      additionalProperties: false
    ContestTemplate:
      type: object
      properties:
        ClientId:
          type: integer
          format: int64
        ContestSettings:
          "$ref": "#/components/schemas/ContestSettingsBaseModel"
        CreationDate:
          type: string
          format: date-time
        ModifiedDate:
          type: string
          format: date-time
        Name:
          type: string
          nullable: true
        PartnerCreatedContestType:
          "$ref": "#/components/schemas/PartnerCreatedContestType"
        PrizeFundType:
          "$ref": "#/components/schemas/PrizeFundType"
        Archived:
          type: boolean
        Client:
          "$ref": "#/components/schemas/Client"
        Contests:
          type: array
          items:
            "$ref": "#/components/schemas/Contest"
          nullable: true
        Id:
          type: integer
          format: int64
      additionalProperties: false
    SavedLineUpData:
      type: object
      properties:
        LineupName:
          type: string
          nullable: true
        SchemeId:
          type: integer
          format: int64
          nullable: true
        Players:
          "$ref": "#/components/schemas/PlayersModel"
      additionalProperties: false
    SavedLineUp:
      type: object
      properties:
        ClientId:
          type: integer
          format: int64
        ContestId:
          type: integer
          format: int64
        Client:
          "$ref": "#/components/schemas/Client"
        Contest:
          "$ref": "#/components/schemas/Contest"
        SavedLineUpData:
          "$ref": "#/components/schemas/SavedLineUpData"
      additionalProperties: false
    ContestPartner:
      type: object
      properties:
        PartnerId:
          type: integer
          format: int64
        Partner:
          "$ref": "#/components/schemas/Partner"
        ContestId:
          type: integer
          format: int64
        Contest:
          "$ref": "#/components/schemas/Contest"
      additionalProperties: false
    ContestPartnerEntryFee:
      type: object
      properties:
        ContestId:
          type: integer
          format: int64
        PartnerId:
          type: integer
          format: int64
        FeePercent:
          type: number
          format: double
        FeeAmount:
          type: number
          format: double
        PaymentDate:
          type: string
          format: date-time
        Contest:
          "$ref": "#/components/schemas/Contest"
        Partner:
          "$ref": "#/components/schemas/Partner"
      additionalProperties: false
    Contest:
      type: object
      properties:
        Name:
          type: string
          nullable: true
        ClientId:
          type: integer
          format: int64
          nullable: true
        CompetitionId:
          type: integer
          format: int64
        ContestTypeId:
          type: integer
          format: int64
          nullable: true
        JoinedCount:
          type: integer
          format: int32
        CancelReason:
          type: string
          nullable: true
        CanceledBy:
          type: integer
          format: int64
          nullable: true
        CancelMethod:
          "$ref": "#/components/schemas/ContestCancelMethod"
        MaxJoinedCount:
          type: integer
          format: int32
        MinJoinCount:
          type: integer
          format: int32
        EntryFee:
          type: number
          format: double
        PrizeFund:
          type: number
          format: double
        ContestGarantionType:
          "$ref": "#/components/schemas/ContestGarantionType"
        PrincipalPrizeFund:
          type: number
          format: double
          nullable: true
        FixedAmount:
          type: number
          format: double
          nullable: true
        StartDate:
          type: string
          format: date-time
          nullable: true
        EndDate:
          type: string
          format: date-time
          nullable: true
        FinishDate:
          type: string
          format: date-time
          nullable: true
        Status:
          "$ref": "#/components/schemas/ContestStatusTypes"
        UserMaxTeamsCount:
          type: integer
          format: int32
        AccessType:
          "$ref": "#/components/schemas/ContestAccessType"
        Password:
          type: string
          nullable: true
        Rake:
          type: number
          format: double
        PartnerCreatedContestType:
          "$ref": "#/components/schemas/PartnerCreatedContestType"
        FantasyGameType:
          "$ref": "#/components/schemas/FantasyGameTypes"
        PrizeTypeId:
          type: integer
          format: int64
        CreationDate:
          type: string
          format: date-time
        GameStyle:
          "$ref": "#/components/schemas/GameStyles"
        IsVerified:
          type: boolean
        PrimaryPartnerId:
          type: integer
          format: int64
          nullable: true
        ModifiedDate:
          type: string
          format: date-time
        FirstDraftDate:
          type: string
          format: date-time
          nullable: true
        MatchesString:
          type: string
          nullable: true
        OrderPoint:
          type: integer
          format: int32
        ContestTemplateId:
          type: integer
          format: int64
          nullable: true
        Competition:
          "$ref": "#/components/schemas/Competition"
        PrimaryPartner:
          "$ref": "#/components/schemas/Partner"
        PrizeType:
          "$ref": "#/components/schemas/PrizeType"
        Client:
          "$ref": "#/components/schemas/Client"
        ContestType:
          "$ref": "#/components/schemas/ContestType"
        ContestTemplate:
          "$ref": "#/components/schemas/ContestTemplate"
        SavedLineUps:
          type: array
          items:
            "$ref": "#/components/schemas/SavedLineUp"
          nullable: true
        LineUps:
          type: array
          items:
            "$ref": "#/components/schemas/LineUp"
          nullable: true
        ContestMatches:
          type: array
          items:
            "$ref": "#/components/schemas/ContestMatch"
          nullable: true
        FantasyTransactionGroups:
          type: array
          items:
            "$ref": "#/components/schemas/FantasyTransactionGroup"
          nullable: true
        ContestWinners:
          type: array
          items:
            "$ref": "#/components/schemas/ContestWinner"
          nullable: true
        ContestPartners:
          type: array
          items:
            "$ref": "#/components/schemas/ContestPartner"
          nullable: true
        ContestFundSettings:
          type: array
          items:
            "$ref": "#/components/schemas/ContestFundSetting"
          nullable: true
        ContestPartnerEntryFees:
          type: array
          items:
            "$ref": "#/components/schemas/ContestPartnerEntryFee"
          nullable: true
        ContestEntryTickets:
          type: array
          items:
            "$ref": "#/components/schemas/ContestEntryTicket"
          nullable: true
        ContestEntryHistories:
          type: array
          items:
            "$ref": "#/components/schemas/ContestEntryHistory"
          nullable: true
        LeaderBoardChallengeClientHistories:
          type: array
          items:
            "$ref": "#/components/schemas/LeaderBoardChallengeClientHistory"
          nullable: true
        ClientLineupContests:
          type: array
          items:
            "$ref": "#/components/schemas/ClientLineupContest"
          nullable: true
        Id:
          type: integer
          format: int64
      additionalProperties: false
    PartnerPrizeFund:
      type: object
      properties:
        PartnerId:
          type: integer
          format: int64
        Partner:
          "$ref": "#/components/schemas/Partner"
        MinEntrySize:
          type: integer
          format: int32
        PrizeTypeId:
          type: integer
          format: int64
        PrizeType:
          "$ref": "#/components/schemas/PrizeType"
        Id:
          type: integer
          format: int64
      additionalProperties: false
    PrizeTypeConfig:
      type: object
      properties:
        PrizeTypeId:
          type: integer
          format: int64
        PrizeType:
          "$ref": "#/components/schemas/PrizeType"
        MaxEntryCount:
          type: integer
          format: int32
        MaxPlaceCount:
          type: integer
          format: int32
        Id:
          type: integer
          format: int64
      additionalProperties: false
    LeaderBoardChallengeTemplatePartner:
      type: object
      properties:
        PartnerId:
          type: integer
          format: int64
        Partner:
          "$ref": "#/components/schemas/Partner"
        ChallengeTemplateId:
          type: integer
          format: int64
        LeaderBoardChallengeTemplate:
          "$ref": "#/components/schemas/LeaderBoardChallengeTemplate"
        Id:
          type: integer
          format: int64
      additionalProperties: false
    LeaderBoardChallengeTemplateFundItem:
      type: object
      properties:
        ChallengeTemplateId:
          type: integer
          format: int64
        LeaderBoardChallengeTemplate:
          "$ref": "#/components/schemas/LeaderBoardChallengeTemplate"
        FromPlace:
          type: integer
          format: int32
        ToPlace:
          type: integer
          format: int32
        Percent:
          type: number
          format: double
        Amount:
          type: number
          format: double
        PrizeName:
          type: string
          nullable: true
        TicketId:
          type: integer
          format: int64
          nullable: true
        PrizeFundItemType:
          "$ref": "#/components/schemas/PrizeFundItemType"
        Id:
          type: integer
          format: int64
      additionalProperties: false
    LeaderBoardChallengeTemplate:
      type: object
      properties:
        Name:
          type: string
          nullable: true
        PrimaryPartnerId:
          type: integer
          format: int64
        ClientId:
          type: integer
          format: int64
        BasePoint:
          "$ref": "#/components/schemas/LeaderBoardBasePoint"
        MinimalEntryFeeAmount:
          type: number
          format: double
        Type:
          "$ref": "#/components/schemas/LeaderBoardChallengeType"
        PrizeTypeId:
          type: integer
          format: int64
        PrizeFundAmount:
          type: number
          format: double
        CreationDate:
          type: string
          format: date-time
        ModifiedDate:
          type: string
          format: date-time
        Archived:
          type: boolean
        Client:
          "$ref": "#/components/schemas/Client"
        PrizeType:
          "$ref": "#/components/schemas/PrizeType"
        LeaderBoardChallengeTemplatePartners:
          type: array
          items:
            "$ref": "#/components/schemas/LeaderBoardChallengeTemplatePartner"
          nullable: true
        LeaderBoardChallenges:
          type: array
          items:
            "$ref": "#/components/schemas/LeaderBoardChallenge"
          nullable: true
        LeaderBoardChallengeTemplateFundItems:
          type: array
          items:
            "$ref": "#/components/schemas/LeaderBoardChallengeTemplateFundItem"
          nullable: true
        Id:
          type: integer
          format: int64
      additionalProperties: false
    PrizeType:
      type: object
      properties:
        Name:
          type: string
          nullable: true
        Abbreviation:
          type: string
          nullable: true
        Type:
          "$ref": "#/components/schemas/PrizeFundType"
        IsConfigurable:
          type: boolean
        IsAvailable:
          type: boolean
        Contests:
          type: array
          items:
            "$ref": "#/components/schemas/Contest"
          nullable: true
        PartnerPrizeFunds:
          type: array
          items:
            "$ref": "#/components/schemas/PartnerPrizeFund"
          nullable: true
        PrizeTypeConfigs:
          type: array
          items:
            "$ref": "#/components/schemas/PrizeTypeConfig"
          nullable: true
        LeaderBoardChallenges:
          type: array
          items:
            "$ref": "#/components/schemas/LeaderBoardChallenge"
          nullable: true
        LeaderBoardChallengeTemplates:
          type: array
          items:
            "$ref": "#/components/schemas/LeaderBoardChallengeTemplate"
          nullable: true
        Id:
          type: integer
          format: int64
      additionalProperties: false
    LeaderBoardChallengePartner:
      type: object
      properties:
        PartnerId:
          type: integer
          format: int64
        Partner:
          "$ref": "#/components/schemas/Partner"
        LeaderBoardChallengeId:
          type: integer
          format: int64
        LeaderBoardChallenge:
          "$ref": "#/components/schemas/LeaderBoardChallenge"
        Id:
          type: integer
          format: int64
      additionalProperties: false
    LeaderBoardChallengeFundItem:
      type: object
      properties:
        LeaderBoardChallengeId:
          type: integer
          format: int64
        LeaderBoardChallenge:
          "$ref": "#/components/schemas/LeaderBoardChallenge"
        FromPlace:
          type: integer
          format: int32
        ToPlace:
          type: integer
          format: int32
        Percent:
          type: number
          format: double
        Amount:
          type: number
          format: double
        PrizeName:
          type: string
          nullable: true
        TicketId:
          type: integer
          format: int64
          nullable: true
        PrizeFundItemType:
          "$ref": "#/components/schemas/PrizeFundItemType"
        Id:
          type: integer
          format: int64
      additionalProperties: false
    LeaderBoardChallengeWinner:
      type: object
      properties:
        LeaderBoardChallengeId:
          type: integer
          format: int64
        LeaderBoardChallenge:
          "$ref": "#/components/schemas/LeaderBoardChallenge"
        ClientId:
          type: integer
          format: int64
        Client:
          "$ref": "#/components/schemas/Client"
        WonAmount:
          type: number
          format: double
          nullable: true
        PrizeName:
          type: string
          nullable: true
        Place:
          type: integer
          format: int32
        Point:
          type: number
          format: double
          nullable: true
        Id:
          type: integer
          format: int64
      additionalProperties: false
    LeaderBoardChallenge:
      type: object
      properties:
        StartDate:
          type: string
          format: date-time
        EndDate:
          type: string
          format: date-time
        PrimaryPartnerId:
          type: integer
          format: int64
        Name:
          type: string
          nullable: true
        ClientId:
          type: integer
          format: int64
        Client:
          "$ref": "#/components/schemas/Client"
        PrizeTypeId:
          type: integer
          format: int64
        CreationDate:
          type: string
          format: date-time
        ModifiedDate:
          type: string
          format: date-time
        FinishDate:
          type: string
          format: date-time
          nullable: true
        CancelDate:
          type: string
          format: date-time
          nullable: true
        MinimalEntryFeeAmount:
          type: number
          format: double
        CancelReason:
          type: string
          nullable: true
        Type:
          "$ref": "#/components/schemas/LeaderBoardChallengeType"
        PrizeType:
          "$ref": "#/components/schemas/PrizeType"
        PrizeFundAmount:
          type: number
          format: double
        BasePoint:
          "$ref": "#/components/schemas/LeaderBoardBasePoint"
        Status:
          "$ref": "#/components/schemas/LeaderBoardChallengeStatus"
        LeaderboardChallengeTemplateId:
          type: integer
          format: int64
          nullable: true
        LeaderBoardChallengeTemplate:
          "$ref": "#/components/schemas/LeaderBoardChallengeTemplate"
        LeaderBoardChallengeClients:
          type: array
          items:
            "$ref": "#/components/schemas/LeaderBoardChallengeClient"
          nullable: true
        LeaderBoardChallengePartners:
          type: array
          items:
            "$ref": "#/components/schemas/LeaderBoardChallengePartner"
          nullable: true
        LeaderBoardChallengeFundItems:
          type: array
          items:
            "$ref": "#/components/schemas/LeaderBoardChallengeFundItem"
          nullable: true
        LeaderBoardChallengeWinners:
          type: array
          items:
            "$ref": "#/components/schemas/LeaderBoardChallengeWinner"
          nullable: true
        FantasyTransactionGroups:
          type: array
          items:
            "$ref": "#/components/schemas/FantasyTransactionGroup"
          nullable: true
        Id:
          type: integer
          format: int64
      additionalProperties: false
    FantasyTransactionGroup:
      type: object
      properties:
        TransactionDate:
          type: string
          format: date-time
        CurrencyId:
          type: integer
          format: int64
        ContestId:
          type: integer
          format: int64
          nullable: true
        TournamentId:
          type: integer
          format: int64
          nullable: true
        LeaderBoardChallengeId:
          type: integer
          format: int64
          nullable: true
        IsGlobal:
          type: boolean
        LeaderBoardChallenge:
          "$ref": "#/components/schemas/LeaderBoardChallenge"
        Currency:
          "$ref": "#/components/schemas/Currency"
        FantasyTransactionType:
          "$ref": "#/components/schemas/FantasyTransactionTypes"
        FantasyTransactions:
          type: array
          items:
            "$ref": "#/components/schemas/FantasyTransaction"
          nullable: true
        Contest:
          "$ref": "#/components/schemas/Contest"
        Id:
          type: integer
          format: int64
      additionalProperties: false
    CurrencyHistory:
      type: object
      properties:
        CurrencyId:
          type: integer
          format: int64
        ChangeDate:
          type: string
          format: date-time
        Rate:
          type: number
          format: double
        Currency:
          "$ref": "#/components/schemas/Currency"
        Id:
          type: integer
          format: int64
      additionalProperties: false
    Currency:
      type: object
      properties:
        Name:
          type: string
          nullable: true
        Precision:
          type: integer
          format: int32
        Rate:
          type: number
          format: double
        IsDefault:
          type: boolean
        FantasyTransactionGroups:
          type: array
          items:
            "$ref": "#/components/schemas/FantasyTransactionGroup"
          nullable: true
        Partners:
          type: array
          items:
            "$ref": "#/components/schemas/Partner"
          nullable: true
        Clients:
          type: array
          items:
            "$ref": "#/components/schemas/Client"
          nullable: true
        CurrencyHistories:
          type: array
          items:
            "$ref": "#/components/schemas/CurrencyHistory"
          nullable: true
        Id:
          type: integer
          format: int64
      additionalProperties: false
    ClientLoginHistory:
      type: object
      properties:
        ClientId:
          type: integer
          format: int64
        LoginDate:
          type: string
          format: date-time
        Client:
          "$ref": "#/components/schemas/Client"
        Id:
          type: integer
          format: int64
      additionalProperties: false
    ClientBlockingHistory:
      type: object
      properties:
        ClientId:
          type: integer
          format: int64
        IsBlocked:
          type: boolean
        BlockReason:
          type: string
          nullable: true
        Date:
          type: string
          format: date-time
        Client:
          "$ref": "#/components/schemas/Client"
        Id:
          type: integer
          format: int64
      additionalProperties: false
    ClientCustomPrize:
      type: object
      properties:
        PrizeName:
          type: string
          nullable: true
        IsTaken:
          type: boolean
        ClientId:
          type: integer
          format: int64
        Count:
          type: integer
          format: int32
        RegistrationDate:
          type: string
          format: date-time
        Client:
          "$ref": "#/components/schemas/Client"
        Id:
          type: integer
          format: int64
      additionalProperties: false
    Suggestion:
      type: object
      properties:
        ClientId:
          type: integer
          format: int64
          nullable: true
        PartnerId:
          type: integer
          format: int64
        Name:
          type: string
          nullable: true
        Email:
          type: string
          nullable: true
        Subject:
          type: string
          nullable: true
        Message:
          type: string
          nullable: true
        FileId:
          type: integer
          format: int64
          nullable: true
        Date:
          type: string
          format: date-time
        Client:
          "$ref": "#/components/schemas/Client"
        Partner:
          "$ref": "#/components/schemas/Partner"
        File:
          "$ref": "#/components/schemas/FileUpload"
        Id:
          type: integer
          format: int64
      additionalProperties: false
    Client:
      type: object
      properties:
        PartnerId:
          type: integer
          format: int64
          nullable: true
        UserName:
          type: string
          nullable: true
        NickName:
          type: string
          nullable: true
        FantasyNickName:
          type: string
          nullable: true
        Email:
          type: string
          nullable: true
        PasswordHash:
          type: string
          nullable: true
        CurrencyId:
          type: integer
          format: int64
          nullable: true
        IsVerified:
          type: boolean
          nullable: true
        IsFirstTime:
          type: boolean
        JoinDate:
          type: string
          format: date-time
          nullable: true
        UserId:
          type: integer
          format: int64
          nullable: true
        Role:
          "$ref": "#/components/schemas/Role"
        UserExternalId:
          type: integer
          format: int64
          nullable: true
        ModifiedDate:
          type: string
          format: date-time
        AccountTypeId:
          type: integer
          format: int64
          nullable: true
        LanguageId:
          type: integer
          format: int64
          nullable: true
        IsBlocked:
          type: boolean
        LastLoginDate:
          type: string
          format: date-time
        Language:
          "$ref": "#/components/schemas/Lang"
        AccountType:
          "$ref": "#/components/schemas/AccountType"
        Partner:
          "$ref": "#/components/schemas/Partner"
        Currency:
          "$ref": "#/components/schemas/Currency"
        AccountPermissions:
          type: array
          items:
            "$ref": "#/components/schemas/AccountPermission"
          nullable: true
        SavedLineUps:
          type: array
          items:
            "$ref": "#/components/schemas/SavedLineUp"
          nullable: true
        ClientLoginHistories:
          type: array
          items:
            "$ref": "#/components/schemas/ClientLoginHistory"
          nullable: true
        ClientBlockingHistories:
          type: array
          items:
            "$ref": "#/components/schemas/ClientBlockingHistory"
          nullable: true
        FantasyTransactions:
          type: array
          items:
            "$ref": "#/components/schemas/FantasyTransaction"
          nullable: true
        ContestWinners:
          type: array
          items:
            "$ref": "#/components/schemas/ContestWinner"
          nullable: true
        Contests:
          type: array
          items:
            "$ref": "#/components/schemas/Contest"
          nullable: true
        LineUps:
          type: array
          items:
            "$ref": "#/components/schemas/LineUp"
          nullable: true
        ClientTickets:
          type: array
          items:
            "$ref": "#/components/schemas/ClientTicket"
          nullable: true
        Files:
          type: array
          items:
            "$ref": "#/components/schemas/FileUpload"
          nullable: true
        PromoCodeHistories:
          type: array
          items:
            "$ref": "#/components/schemas/PromoCodeHistory"
          nullable: true
        ContestEntryHistories:
          type: array
          items:
            "$ref": "#/components/schemas/ContestEntryHistory"
          nullable: true
        ClientCustomPrizes:
          type: array
          items:
            "$ref": "#/components/schemas/ClientCustomPrize"
          nullable: true
        Suggestions:
          type: array
          items:
            "$ref": "#/components/schemas/Suggestion"
          nullable: true
        LeaderBoardChallengeUsers:
          type: array
          items:
            "$ref": "#/components/schemas/LeaderBoardChallengeClient"
          nullable: true
        LeaderBoardChallenges:
          type: array
          items:
            "$ref": "#/components/schemas/LeaderBoardChallenge"
          nullable: true
        LeaderBoardChallengeClientHistories:
          type: array
          items:
            "$ref": "#/components/schemas/LeaderBoardChallengeClientHistory"
          nullable: true
        ClientLineups:
          type: array
          items:
            "$ref": "#/components/schemas/ClientLineup"
          nullable: true
        LeaderBoardChallengeWinners:
          type: array
          items:
            "$ref": "#/components/schemas/LeaderBoardChallengeWinner"
          nullable: true
        LeaderBoardChallengeTemplates:
          type: array
          items:
            "$ref": "#/components/schemas/LeaderBoardChallengeTemplate"
          nullable: true
        ContestTemplates:
          type: array
          items:
            "$ref": "#/components/schemas/ContestTemplate"
          nullable: true
        Id:
          type: integer
          format: int64
      additionalProperties: false
    BackgroundImageType:
      enum:
      - 0
      - 1
      type: integer
      format: int32
    BackgroundImage:
      type: object
      properties:
        PartnerId:
          type: integer
          format: int64
        FileId:
          type: integer
          format: int64
        IsSelected:
          type: boolean
        BackgroundImageType:
          "$ref": "#/components/schemas/BackgroundImageType"
        File:
          "$ref": "#/components/schemas/FileUpload"
        Partner:
          "$ref": "#/components/schemas/Partner"
        Id:
          type: integer
          format: int64
      additionalProperties: false
    FileUpload:
      type: object
      properties:
        PictureCategory:
          "$ref": "#/components/schemas/FileCategory"
        Name:
          type: string
          nullable: true
        Url:
          type: string
          nullable: true
        ClientId:
          type: integer
          format: int64
        CreationDate:
          type: string
          format: date-time
        ModifiedDate:
          type: string
          format: date-time
        Client:
          "$ref": "#/components/schemas/Client"
        Banners:
          type: array
          items:
            "$ref": "#/components/schemas/Banner"
          nullable: true
        BackgroundImages:
          type: array
          items:
            "$ref": "#/components/schemas/BackgroundImage"
          nullable: true
        Suggestions:
          type: array
          items:
            "$ref": "#/components/schemas/Suggestion"
          nullable: true
        Id:
          type: integer
          format: int64
      additionalProperties: false
    Banner:
      type: object
      properties:
        BannerType:
          "$ref": "#/components/schemas/BannerType"
        ContestId:
          type: integer
          format: int64
          nullable: true
        FileId:
          type: integer
          format: int64
        PartnerId:
          type: integer
          format: int64
        Link:
          type: string
          nullable: true
        LanguageId:
          type: integer
          format: int64
          nullable: true
        Position:
          "$ref": "#/components/schemas/ImagePositions"
        Lang:
          "$ref": "#/components/schemas/Lang"
        File:
          "$ref": "#/components/schemas/FileUpload"
        Partner:
          "$ref": "#/components/schemas/Partner"
        Id:
          type: integer
          format: int64
      additionalProperties: false
    Section:
      type: object
      properties:
        Prority:
          type: integer
          format: int32
        HelpType:
          "$ref": "#/components/schemas/HelpType"
        IsDefault:
          type: boolean
        IsEnable:
          type: boolean
        PartnerId:
          type: integer
          format: int64
          nullable: true
        Partner:
          "$ref": "#/components/schemas/Partner"
        SectionDatas:
          type: array
          items:
            "$ref": "#/components/schemas/SectionData"
          nullable: true
        Id:
          type: integer
          format: int64
      additionalProperties: false
    SectionData:
      type: object
      properties:
        Title:
          type: string
          nullable: true
        Text:
          type: string
          nullable: true
        DeviceType:
          "$ref": "#/components/schemas/DeviceType"
        LanguageId:
          type: integer
          format: int64
        Language:
          "$ref": "#/components/schemas/Lang"
        SectionId:
          type: integer
          format: int64
        Section:
          "$ref": "#/components/schemas/Section"
      additionalProperties: false
    WelcomeVideo:
      type: object
      properties:
        Link:
          type: string
          nullable: true
        PartnerId:
          type: integer
          format: int64
        Partner:
          "$ref": "#/components/schemas/Partner"
        LanguageId:
          type: integer
          format: int64
        Language:
          "$ref": "#/components/schemas/Lang"
        IsActive:
          type: boolean
        Title:
          type: string
          nullable: true
        Id:
          type: integer
          format: int64
      additionalProperties: false
    Lang:
      type: object
      properties:
        Uid:
          type: string
          nullable: true
        IsDefault:
          type: boolean
        Name:
          type: string
          nullable: true
        IsEnable:
          type: boolean
        Localization:
          type: string
          nullable: true
        Translations:
          type: array
          items:
            "$ref": "#/components/schemas/Translation"
          nullable: true
        Partners:
          type: array
          items:
            "$ref": "#/components/schemas/Partner"
          nullable: true
        Banners:
          type: array
          items:
            "$ref": "#/components/schemas/Banner"
          nullable: true
        Clients:
          type: array
          items:
            "$ref": "#/components/schemas/Client"
          nullable: true
        SectionDatas:
          type: array
          items:
            "$ref": "#/components/schemas/SectionData"
          nullable: true
        WelcomeVideos:
          type: array
          items:
            "$ref": "#/components/schemas/WelcomeVideo"
          nullable: true
        Id:
          type: integer
          format: int64
      additionalProperties: false
    PartnerPaletteModel:
      type: object
      properties:
        ScrollBgColor:
          type: string
          nullable: true
        TableTitleBgColor:
          type: string
          nullable: true
        TableBgColor:
          type: string
          nullable: true
        PrimaryBgColor:
          type: string
          nullable: true
        TabBgColor:
          type: string
          nullable: true
        TabBgHoverColor:
          type: string
          nullable: true
        ActiveTabBgColor:
          type: string
          nullable: true
        ThirdTextColor:
          type: string
          nullable: true
        HelpColor:
          type: string
          nullable: true
        SecondaryTextColor:
          type: string
          nullable: true
        PrimaryTextColor:
          type: string
          nullable: true
        MainColor:
          type: string
          nullable: true
        AcceptColor:
          type: string
          nullable: true
        MoneyAmountColor:
          type: string
          nullable: true
        GradientColor:
          type: string
          nullable: true
        AlertColor:
          type: string
          nullable: true
        PrimaryTextActiveColor:
          type: string
          nullable: true
        IsDark:
          type: boolean
      additionalProperties: false
    PartnerSetting:
      type: object
      properties:
        PartnerId:
          type: integer
          format: int64
        Partner:
          "$ref": "#/components/schemas/Partner"
        UserContestCreatedMaxEntriesCount:
          type: integer
          format: int32
        IsHeaderVisible:
          type: boolean
        MinEntrySize:
          type: number
          format: double
        EnableFaces:
          type: boolean
        EnableTShirts:
          type: boolean
        EnableLogos:
          type: boolean
        RequiredVerification:
          type: boolean
        EnableAbbreviations:
          type: boolean
        FreerollContestAccessMode:
          "$ref": "#/components/schemas/FreerollContestAccessMode"
        FreerollContestCount:
          type: integer
          format: int32
          nullable: true
        EnableHourNotification:
          type: boolean
        FieldAccessDataItems:
          type: array
          items:
            "$ref": "#/components/schemas/FieldAccessDataItems"
          nullable: true
        PartnerPalette:
          "$ref": "#/components/schemas/PartnerPaletteModel"
        EntryFeeAndSize:
          "$ref": "#/components/schemas/PartnerEntryFeeAndSizeModel"
        PartnerAccessabilityConfiguration:
          "$ref": "#/components/schemas/PartnerAccessabilityConfigurationModel"
        Id:
          type: integer
          format: int64
      additionalProperties: false
    Licence:
      type: object
      properties:
        Name:
          type: string
          nullable: true
        Partners:
          type: array
          items:
            "$ref": "#/components/schemas/Partner"
          nullable: true
        Id:
          type: integer
          format: int64
      additionalProperties: false
    BankTransactionType:
      enum:
      - 1
      - 2
      type: integer
      format: int32
    BankTransferReason:
      type: object
      properties:
        Name:
          type: string
          nullable: true
        Description:
          type: string
          nullable: true
        BankTransactions:
          type: array
          items:
            "$ref": "#/components/schemas/BankTransaction"
          nullable: true
        Id:
          type: integer
          format: int64
      additionalProperties: false
    BankTransaction:
      type: object
      properties:
        Amount:
          type: number
          format: double
        RakeAmount:
          type: number
          format: double
        Balance:
          type: number
          format: double
        TransactionType:
          "$ref": "#/components/schemas/BankTransactionType"
        PartnerId:
          type: integer
          format: int64
        ContestId:
          type: integer
          format: int64
          nullable: true
        TransferReasonId:
          type: integer
          format: int64
        TransactionDate:
          type: string
          format: date-time
        Partner:
          "$ref": "#/components/schemas/Partner"
        TransferReason:
          "$ref": "#/components/schemas/BankTransferReason"
        Id:
          type: integer
          format: int64
      additionalProperties: false
    Rule:
      type: object
      properties:
        Priority:
          type: integer
          format: int32
          nullable: true
        Name:
          type: string
          nullable: true
        Description:
          type: string
          nullable: true
        IsEnabled:
          type: boolean
        Url:
          type: string
          nullable: true
        PartnerRules:
          type: array
          items:
            "$ref": "#/components/schemas/PartnerRule"
          nullable: true
        Id:
          type: integer
          format: int64
      additionalProperties: false
    PartnerRule:
      type: object
      properties:
        IsEnabled:
          type: boolean
        Rule:
          "$ref": "#/components/schemas/Rule"
        RuleId:
          type: integer
          format: int64
        PartnerId:
          type: integer
          format: int64
        Partner:
          "$ref": "#/components/schemas/Partner"
      additionalProperties: false
    Glossary:
      type: object
      properties:
        Name:
          type: string
          nullable: true
        Description:
          type: string
          nullable: true
        Priority:
          type: integer
          format: int32
          nullable: true
        IsEnabled:
          type: boolean
        PartnerGlossaries:
          type: array
          items:
            "$ref": "#/components/schemas/PartnerGlossary"
          nullable: true
        Id:
          type: integer
          format: int64
      additionalProperties: false
    PartnerGlossary:
      type: object
      properties:
        IsEnabled:
          type: boolean
        GlossaryId:
          type: integer
          format: int64
        Glossary:
          "$ref": "#/components/schemas/Glossary"
        PartnerId:
          type: integer
          format: int64
        Partner:
          "$ref": "#/components/schemas/Partner"
      additionalProperties: false
    Faq:
      type: object
      properties:
        Priority:
          type: integer
          format: int32
          nullable: true
        Question:
          type: string
          nullable: true
        Answer:
          type: string
          nullable: true
        IsEnabled:
          type: boolean
        PartnerFaqs:
          type: array
          items:
            "$ref": "#/components/schemas/PartnerFaq"
          nullable: true
        Id:
          type: integer
          format: int64
      additionalProperties: false
    PartnerFaq:
      type: object
      properties:
        FaqId:
          type: integer
          format: int64
        Faq:
          "$ref": "#/components/schemas/Faq"
        IsEnabled:
          type: boolean
        PartnerId:
          type: integer
          format: int64
        Partner:
          "$ref": "#/components/schemas/Partner"
      additionalProperties: false
    SegmentType:
      enum:
      - 0
      - 1
      - 2
      - 3
      type: integer
      format: int32
    Segment:
      type: object
      properties:
        Type:
          "$ref": "#/components/schemas/SegmentType"
        Name:
          type: string
          nullable: true
        SegmentPartners:
          type: array
          items:
            "$ref": "#/components/schemas/SegmentPartner"
          nullable: true
        Id:
          type: integer
          format: int64
      additionalProperties: false
    SegmentPartner:
      type: object
      properties:
        SegmentId:
          type: integer
          format: int64
        Segment:
          "$ref": "#/components/schemas/Segment"
        PartnerId:
          type: integer
          format: int64
        Partner:
          "$ref": "#/components/schemas/Partner"
      additionalProperties: false
    Partner:
      type: object
      properties:
        Name:
          type: string
          nullable: true
        Rake:
          type: number
          format: double
          nullable: true
        BetconstructRake:
          type: number
          format: double
          nullable: true
        CurrencyId:
          type: integer
          format: int64
          nullable: true
        CreationDate:
          type: string
          format: date-time
        Status:
          "$ref": "#/components/schemas/PartnerStatusEnumType"
        FantasyGameType:
          "$ref": "#/components/schemas/FantasyGameTypes"
        LangId:
          type: integer
          format: int64
          nullable: true
        IsEnable:
          type: boolean
        IsDeleted:
          type: boolean
        MetricType:
          "$ref": "#/components/schemas/MetricType"
        LicenceId:
          type: integer
          format: int64
          nullable: true
        Lang:
          "$ref": "#/components/schemas/Lang"
        Currency:
          "$ref": "#/components/schemas/Currency"
        PartnerSetting:
          "$ref": "#/components/schemas/PartnerSetting"
        Licence:
          "$ref": "#/components/schemas/Licence"
        Contests:
          type: array
          items:
            "$ref": "#/components/schemas/Contest"
          nullable: true
        Clients:
          type: array
          items:
            "$ref": "#/components/schemas/Client"
          nullable: true
        ContestPartners:
          type: array
          items:
            "$ref": "#/components/schemas/ContestPartner"
          nullable: true
        PartnerSports:
          type: array
          items:
            "$ref": "#/components/schemas/PartnerSport"
          nullable: true
        PartnerCompetitions:
          type: array
          items:
            "$ref": "#/components/schemas/PartnerCompetition"
          nullable: true
        PartnerPrizeFunds:
          type: array
          items:
            "$ref": "#/components/schemas/PartnerPrizeFund"
          nullable: true
        Banners:
          type: array
          items:
            "$ref": "#/components/schemas/Banner"
          nullable: true
        PromoCodes:
          type: array
          items:
            "$ref": "#/components/schemas/PromoCode"
          nullable: true
        BankTransactions:
          type: array
          items:
            "$ref": "#/components/schemas/BankTransaction"
          nullable: true
        ContestPartnerEntryFees:
          type: array
          items:
            "$ref": "#/components/schemas/ContestPartnerEntryFee"
          nullable: true
        BackgroundImages:
          type: array
          items:
            "$ref": "#/components/schemas/BackgroundImage"
          nullable: true
        PartnerRules:
          type: array
          items:
            "$ref": "#/components/schemas/PartnerRule"
          nullable: true
        PartnerGlossaries:
          type: array
          items:
            "$ref": "#/components/schemas/PartnerGlossary"
          nullable: true
        PartnerFaqs:
          type: array
          items:
            "$ref": "#/components/schemas/PartnerFaq"
          nullable: true
        Suggestions:
          type: array
          items:
            "$ref": "#/components/schemas/Suggestion"
          nullable: true
        WelcomeVideos:
          type: array
          items:
            "$ref": "#/components/schemas/WelcomeVideo"
          nullable: true
        PartnerNetworkGroups:
          type: array
          items:
            "$ref": "#/components/schemas/PartnerNetworkGroup"
          nullable: true
        SegmentPartners:
          type: array
          items:
            "$ref": "#/components/schemas/SegmentPartner"
          nullable: true
        LeaderBoardChallengePartners:
          type: array
          items:
            "$ref": "#/components/schemas/LeaderBoardChallengePartner"
          nullable: true
        Translations:
          type: array
          items:
            "$ref": "#/components/schemas/Translation"
          nullable: true
        LeaderBoardChallengeTemplatePartners:
          type: array
          items:
            "$ref": "#/components/schemas/LeaderBoardChallengeTemplatePartner"
          nullable: true
        Sections:
          type: array
          items:
            "$ref": "#/components/schemas/Section"
          nullable: true
        Id:
          type: integer
          format: int64
      additionalProperties: false
    PartnerNetworkGroup:
      type: object
      properties:
        PartnerId:
          type: integer
          format: int64
        Partner:
          "$ref": "#/components/schemas/Partner"
        NetworkGroupId:
          type: integer
          format: int64
        NetworkGroup:
          "$ref": "#/components/schemas/NetworkGroup"
      additionalProperties: false
    NetworkGroup:
      type: object
      properties:
        Name:
          type: string
          nullable: true
        PartnerNetworkGroups:
          type: array
          items:
            "$ref": "#/components/schemas/PartnerNetworkGroup"
          nullable: true
        Id:
          type: integer
          format: int64
      additionalProperties: false
    BackgroundImageViewModel:
      type: object
      properties:
        PartnerId:
          type: integer
          format: int64
        BackgroundImageId:
          type: integer
          format: int64
          nullable: true
        IsSelected:
          type: boolean
          nullable: true
        PictureId:
          type: integer
          format: int64
          nullable: true
        PictureUrl:
          type: string
          nullable: true
        BackgroundImageType:
          "$ref": "#/components/schemas/BackgroundImageType"
      additionalProperties: false
    BackgroundImageEditModel:
      type: object
      properties:
        BackgroundImageId:
          type: integer
          format: int64
        PictureId:
          type: integer
          format: int64
        IsSelected:
          type: boolean
        BackgroundImageType:
          "$ref": "#/components/schemas/BackgroundImageType"
      additionalProperties: false
    PlayerEventModel:
      type: object
      properties:
        EventId:
          type: integer
          format: int64
        EventName:
          maxLength: 255
          minLength: 0
          type: string
          nullable: true
        Point:
          maximum: 100000000000000
          minimum: -100000000000000
          type: number
          format: double
        Date:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    PlayerEventsbyMatch:
      type: object
      properties:
        MatchId:
          type: integer
          format: int64
        HomeTeamName:
          type: string
          nullable: true
        AwayTeamName:
          type: string
          nullable: true
        PlayerEvents:
          type: array
          items:
            "$ref": "#/components/schemas/PlayerEventModel"
          nullable: true
      additionalProperties: false
    PlayerLineupEvents:
      type: object
      properties:
        PlayerId:
          type: integer
          format: int64
        PlayerName:
          type: string
          nullable: true
        PlayerEventsbyMatches:
          type: array
          items:
            "$ref": "#/components/schemas/PlayerEventsbyMatch"
          nullable: true
      additionalProperties: false
    SportModel:
      type: object
      properties:
        Name:
          maxLength: 255
          minLength: 0
          type: string
          nullable: true
        SportType:
          "$ref": "#/components/schemas/SportType"
        Id:
          type: integer
          format: int64
        IsEnabled:
          type: boolean
        GameLogoUrl:
          type: string
          nullable: true
        BackofficeLogoUrl:
          type: string
          nullable: true
      additionalProperties: false
    PlayerModel:
      type: object
      properties:
        Id:
          type: integer
          format: int64
        Name:
          maxLength: 255
          minLength: 0
          type: string
          nullable: true
        FullName:
          maxLength: 255
          minLength: 0
          type: string
          nullable: true
        ExternalId:
          maxLength: 100
          minLength: 0
          type: string
          nullable: true
        Sport:
          "$ref": "#/components/schemas/SportModel"
        Weight:
          type: integer
          format: int32
          nullable: true
        Height:
          type: number
          format: double
          nullable: true
        Nationality:
          maxLength: 255
          minLength: 0
          type: string
          nullable: true
        FirstName:
          maxLength: 255
          minLength: 0
          type: string
          nullable: true
        LastName:
          maxLength: 255
          minLength: 0
          type: string
          nullable: true
        Foot:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        Position:
          type: string
          nullable: true
        PositionId:
          type: integer
          format: int64
        PositionName:
          type: string
          nullable: true
        BirthDate:
          type: string
          format: date-time
          nullable: true
        Team:
          "$ref": "#/components/schemas/TeamModel"
        ExternalTeamId:
          maxLength: 100
          minLength: 0
          type: string
          nullable: true
        Salary:
          type: integer
          format: int32
        RotoWirePlayerId:
          type: integer
          format: int64
          nullable: true
        ShirtNumber:
          type: integer
          format: int32
          nullable: true
        HeadshotUrl:
          type: string
          nullable: true
        MetricType:
          "$ref": "#/components/schemas/MetricType"
      additionalProperties: false
    PlayerModelResponseListModel:
      type: object
      properties:
        FilteredCount:
          type: integer
          format: int32
        Items:
          type: array
          items:
            "$ref": "#/components/schemas/PlayerModel"
          nullable: true
      additionalProperties: false
    PositionEventModel:
      type: object
      properties:
        EventTypeId:
          type: integer
          format: int64
        EventType:
          "$ref": "#/components/schemas/EventTypes"
        PositionId:
          type: integer
          format: int64
        Priority:
          type: integer
          format: int32
        EventName:
          type: string
          nullable: true
      additionalProperties: false
    PlayerPointWithCountModel:
      type: object
      properties:
        EventName:
          type: string
          nullable: true
        ActionCount:
          type: integer
          format: int32
        EventTypeId:
          type: integer
          format: int64
          nullable: true
        EventType:
          "$ref": "#/components/schemas/EventTypes"
        EventTypeAbbrivation:
          type: string
          nullable: true
      additionalProperties: false
    PlayerStatisticsModel:
      type: object
      properties:
        PlayerId:
          type: integer
          format: int64
        TotalPoints:
          type: number
          format: double
        PlayerEventsStatistics:
          type: array
          items:
            "$ref": "#/components/schemas/PlayerPointWithCountModel"
          nullable: true
        FPPG:
          type: number
          format: double
        UniformUrl:
          type: string
          nullable: true
        Name:
          type: string
          nullable: true
        Position:
          type: string
          nullable: true
        PositionId:
          type: integer
          format: int64
        TeamShortName:
          type: string
          nullable: true
        TeamAbbrivation:
          type: string
          nullable: true
        Salary:
          type: integer
          format: int32
        PercentageOfSelection:
          type: number
          format: double
        PositionName:
          type: string
          nullable: true
      additionalProperties: false
    PlayerSatisticByMatchModel:
      type: object
      properties:
        EventTypeId:
          type: integer
          format: int64
        Name:
          type: string
          nullable: true
        Count:
          type: integer
          format: int32
        Point:
          type: number
          format: double
        MatchId:
          type: integer
          format: int64
      additionalProperties: false
    PointSystemPartModel:
      type: object
      properties:
        EventTypeId:
          type: integer
          format: int64
        EventName:
          type: string
          nullable: true
        EventAbbreviation:
          type: string
          nullable: true
        Point:
          type: number
          format: double
        IsCalculatable:
          type: boolean
      additionalProperties: false
    PointSystemPositionsModel:
      type: object
      properties:
        PositionId:
          type: integer
          format: int64
        ParentPositionId:
          type: integer
          format: int64
          nullable: true
        PositionName:
          type: string
          nullable: true
        Abbrevation:
          type: string
          nullable: true
        Priority:
          type: integer
          format: int32
        Events:
          type: array
          items:
            "$ref": "#/components/schemas/PointSystemPartModel"
          nullable: true
      additionalProperties: false
    PointSystemModel:
      type: object
      properties:
        SportId:
          type: integer
          format: int64
        SportName:
          type: string
          nullable: true
        Positions:
          type: array
          items:
            "$ref": "#/components/schemas/PointSystemPositionsModel"
          nullable: true
      additionalProperties: false
    PointSystemPartWithPositionModel:
      type: object
      properties:
        PositionId:
          type: integer
          format: int64
        EventTypeId:
          type: integer
          format: int64
        EventName:
          maxLength: 255
          minLength: 0
          type: string
          nullable: true
        EventAbbreviation:
          maxLength: 150
          minLength: 0
          type: string
          nullable: true
        Point:
          pattern: "(^-[\\d]{1,14}([.,][\\d]{1,4})?)|([\\d]{1,14}([.,][\\d]{1,4})?)"
          type: number
          format: double
        IsCalculatable:
          type: boolean
      additionalProperties: false
    PrizeTypeConfigModel:
      type: object
      properties:
        PrizeTypeConfigId:
          type: integer
          format: int64
        PrizeTypeId:
          type: integer
          format: int64
        PrizeFund:
          "$ref": "#/components/schemas/PrizeFundType"
        MaxEntryCount:
          type: integer
          format: int32
        MaxPlaceCount:
          type: integer
          format: int32
      additionalProperties: false
    PrizeTypeConfigModelResponseListModel:
      type: object
      properties:
        FilteredCount:
          type: integer
          format: int32
        Items:
          type: array
          items:
            "$ref": "#/components/schemas/PrizeTypeConfigModel"
          nullable: true
      additionalProperties: false
    PrizeTypeAddConfigModel:
      type: object
      properties:
        PrizeTypeId:
          type: integer
          format: int64
        MaxEntryCount:
          type: integer
          format: int32
        MaxPlaceCount:
          type: integer
          format: int32
      additionalProperties: false
    PrizeTypeConfigUpdateModel:
      type: object
      properties:
        PrizeTypeConfigId:
          type: integer
          format: int64
        PrizeTypeId:
          type: integer
          format: int64
          nullable: true
        MaxEntryCount:
          type: integer
          format: int32
          nullable: true
        MaxPlaceCount:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    DashboardReportFilterType:
      enum:
      - 0
      - 1
      - 2
      - 3
      type: integer
      format: int32
    ContestDashboardModel:
      type: object
      properties:
        Id:
          type: integer
          format: int64
        ClientId:
          type: integer
          format: int64
          nullable: true
        EntryFee:
          type: number
          format: double
        SportId:
          type: integer
          format: int64
        PartnerId:
          type: integer
          format: int64
          nullable: true
      additionalProperties: false
    BankTransferReasonType:
      enum:
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      type: integer
      format: int32
    BankReportItemModel:
      type: object
      properties:
        Amount:
          type: number
          format: double
        RakeAmount:
          type: number
          format: double
          nullable: true
        TransactionType:
          "$ref": "#/components/schemas/BankTransactionType"
        PartnerId:
          type: integer
          format: int64
          nullable: true
        ContestId:
          type: integer
          format: int64
          nullable: true
        TransferReason:
          "$ref": "#/components/schemas/BankTransferReasonType"
        TransactionDate:
          type: string
          format: date-time
      additionalProperties: false
    BankReportItemModelResponseListModel:
      type: object
      properties:
        FilteredCount:
          type: integer
          format: int32
        Items:
          type: array
          items:
            "$ref": "#/components/schemas/BankReportItemModel"
          nullable: true
      additionalProperties: false
    LogModel:
      type: object
      properties:
        SessionId:
          type: string
          format: uuid
        EventType:
          type: string
          nullable: true
        ParameterName:
          type: string
          nullable: true
        ParameterValue:
          type: string
          nullable: true
        MethodName:
          type: string
          nullable: true
        Description:
          type: string
          nullable: true
        LogDate:
          type: string
          format: date-time
        Count:
          type: integer
          format: int32
      additionalProperties: false
    LogModelResponseListModel:
      type: object
      properties:
        FilteredCount:
          type: integer
          format: int32
        Items:
          type: array
          items:
            "$ref": "#/components/schemas/LogModel"
          nullable: true
      additionalProperties: false
    LineUpReportModel:
      type: object
      properties:
        UserId:
          type: integer
          format: int64
          nullable: true
        UserExternalId:
          type: integer
          format: int64
          nullable: true
        ClientId:
          type: integer
          format: int64
        Username:
          type: string
          nullable: true
        CurrencyId:
          type: integer
          format: int64
          nullable: true
        LineUpId:
          type: integer
          format: int64
        LineUpName:
          type: string
          nullable: true
        SelectedCaptainName:
          type: string
          nullable: true
        Points:
          type: number
          format: double
        WonAmount:
          type: number
          format: double
        PartnerId:
          type: integer
          format: int64
          nullable: true
        PartnerName:
          type: string
          nullable: true
      additionalProperties: false
    ContestLineupsReportModel:
      type: object
      properties:
        ContestId:
          type: integer
          format: int64
        ContestName:
          type: string
          nullable: true
        ContestStatus:
          "$ref": "#/components/schemas/ContestStatusTypes"
        MaxJoinCount:
          type: integer
          format: int32
        MinJoinCount:
          type: integer
          format: int32
        LineUps:
          type: array
          items:
            "$ref": "#/components/schemas/LineUpReportModel"
          nullable: true
        Count:
          type: integer
          format: int64
        TotalEntryFee:
          type: number
          format: double
        TicketJoinedCount:
          type: integer
          format: int64
      additionalProperties: false
    ClientFinancialReportItemModel:
      type: object
      properties:
        ClientId:
          type: integer
          format: int64
        UserName:
          type: string
          nullable: true
        PartnerId:
          type: integer
          format: int64
        PartnerName:
          type: string
          nullable: true
        TotalDeposit:
          type: number
          format: double
        TotalWithdraw:
          type: number
          format: double
          nullable: true
      additionalProperties: false
    ClientFinancialReportItemModelResponseListModel:
      type: object
      properties:
        FilteredCount:
          type: integer
          format: int32
        Items:
          type: array
          items:
            "$ref": "#/components/schemas/ClientFinancialReportItemModel"
          nullable: true
      additionalProperties: false
    ClientDetailedReportModel:
      type: object
      properties:
        ContestId:
          type: integer
          format: int64
        ContestName:
          type: string
          nullable: true
        StartDate:
          type: string
          format: date-time
          nullable: true
        EndDate:
          type: string
          format: date-time
          nullable: true
        JoinDate:
          type: string
          format: date-time
        TicketCount:
          type: integer
          format: int32
        EntryFee:
          type: number
          format: double
        WinningAmount:
          type: number
          format: double
      additionalProperties: false
    ClientDetailedReportInfoModel:
      type: object
      properties:
        Count:
          type: integer
          format: int32
        ClientReports:
          type: array
          items:
            "$ref": "#/components/schemas/ClientDetailedReportModel"
          nullable: true
        UserName:
          type: string
          nullable: true
      additionalProperties: false
    ClientContestsReportModel:
      type: object
      properties:
        Entryfee:
          type: number
          format: double
        RakeEntryfee:
          type: number
          format: double
        WinningAmount:
          type: number
          format: double
        RakeWinningAmount:
          type: number
          format: double
      additionalProperties: false
    ClientDeeplyReportModel:
      type: object
      properties:
        Id:
          type: integer
          format: int64
        UserId:
          type: integer
          format: int64
          nullable: true
        UserExternalId:
          type: integer
          format: int64
          nullable: true
        CurrencyId:
          type: integer
          format: int64
          nullable: true
        PartnerId:
          type: integer
          format: int64
          nullable: true
        UserName:
          type: string
          nullable: true
        NickName:
          type: string
          nullable: true
        JoinDate:
          type: string
          format: date-time
          nullable: true
        LastCreationDate:
          type: string
          format: date-time
          nullable: true
        LineupCount:
          type: integer
          format: int32
          nullable: true
        TicketCount:
          type: integer
          format: int32
          nullable: true
        ContestCount:
          type: integer
          format: int32
          nullable: true
        RakeWinningAmount:
          type: number
          format: double
          nullable: true
        GuaranteedWinningAmount:
          type: number
          format: double
          nullable: true
        IsBLocked:
          type: boolean
          nullable: true
        RakeEntryFee:
          type: number
          format: double
          nullable: true
        EntryFee:
          type: number
          format: double
          nullable: true
        GuaranteedEntryFee:
          type: number
          format: double
          nullable: true
        ParticipationCount:
          type: integer
          format: int32
          nullable: true
        RakeParticipation:
          type: integer
          format: int32
          nullable: true
        GuaranteedParticipation:
          type: integer
          format: int32
          nullable: true
        FreeRollParticipation:
          type: integer
          format: int32
          nullable: true
        LastLoginDate:
          type: string
          format: date-time
          nullable: true
      additionalProperties: false
    ClientDeeplyReportModelResponseListModel:
      type: object
      properties:
        FilteredCount:
          type: integer
          format: int32
        Items:
          type: array
          items:
            "$ref": "#/components/schemas/ClientDeeplyReportModel"
          nullable: true
      additionalProperties: false
    LeaderBoardReportModel:
      type: object
      properties:
        Id:
          type: integer
          format: int64
        Name:
          type: string
          nullable: true
        PrimaryPartnerId:
          type: integer
          format: int64
          nullable: true
        IsNetwork:
          type: boolean
        PartnersCount:
          type: integer
          format: int32
        ClientsCount:
          type: integer
          format: int32
        StartDate:
          type: string
          format: date-time
        EndDate:
          type: string
          format: date-time
        Status:
          "$ref": "#/components/schemas/LeaderBoardChallengeStatus"
      additionalProperties: false
    LeaderBoardReportListModel:
      type: object
      properties:
        Count:
          type: integer
          format: int32
        Reports:
          type: array
          items:
            "$ref": "#/components/schemas/LeaderBoardReportModel"
          nullable: true
      additionalProperties: false
    PartnerChallengeModel:
      type: object
      properties:
        ClientsCount:
          type: integer
          format: int32
          nullable: true
        Id:
          type: integer
          format: int64
        Name:
          type: string
          nullable: true
      additionalProperties: false
    ChallengeClientReportModel:
      type: object
      properties:
        ClientId:
          type: integer
          format: int64
        PartnerId:
          type: integer
          format: int64
          nullable: true
        UserName:
          type: string
          nullable: true
        NickName:
          type: string
          nullable: true
        UserExternalId:
          type: integer
          format: int64
          nullable: true
        Point:
          type: number
          format: double
        PartnerName:
          type: string
          nullable: true
        IsPartnerUser:
          type: boolean
        FirstPointDate:
          type: string
          format: date-time
        WinningAmount:
          type: number
          format: double
          nullable: true
      additionalProperties: false
    ChallengeClientReportModelResponseListModel:
      type: object
      properties:
        FilteredCount:
          type: integer
          format: int32
        Items:
          type: array
          items:
            "$ref": "#/components/schemas/ChallengeClientReportModel"
          nullable: true
      additionalProperties: false
    ChallengeClientDetailedReportModel:
      type: object
      properties:
        ContestId:
          type: integer
          format: int64
        ContestName:
          type: string
          nullable: true
        ContestFinishDate:
          type: string
          format: date-time
          nullable: true
        LineupId:
          type: integer
          format: int64
        LineupName:
          type: string
          nullable: true
        EntryFee:
          type: number
          format: double
        Point:
          type: number
          format: double
      additionalProperties: false
    DashboardReportType:
      enum:
      - 0
      - 1
      - 2
      type: integer
      format: int32
    DashboardContestModel:
      type: object
      properties:
        Count:
          type: integer
          format: int32
        Day:
          type: string
          format: date-time
          nullable: true
        Week:
          type: integer
          format: int32
          nullable: true
        Month:
          type: integer
          format: int32
          nullable: true
        Year:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    DashboardPlayerType:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      type: integer
      format: int32
    DashboardPlayerModel:
      type: object
      properties:
        Count:
          type: integer
          format: int32
        Day:
          type: string
          format: date-time
          nullable: true
        Week:
          type: integer
          format: int32
          nullable: true
        Month:
          type: integer
          format: int32
          nullable: true
        Year:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    LeagueReportModel:
      type: object
      properties:
        CompetitionId:
          type: integer
          format: int64
        CompetitionName:
          type: string
          nullable: true
        CompetitionAbbreviation:
          type: string
          nullable: true
        SportId:
          type: integer
          format: int64
        SportName:
          type: string
          nullable: true
        TotalContestsCount:
          type: integer
          format: int64
        CanceledContestsCount:
          type: integer
          format: int64
        Turnover:
          type: number
          format: double
        RevenueAmount:
          type: number
          format: double
      additionalProperties: false
    LeagueReportModelResponseListModel:
      type: object
      properties:
        FilteredCount:
          type: integer
          format: int32
        Items:
          type: array
          items:
            "$ref": "#/components/schemas/LeagueReportModel"
          nullable: true
      additionalProperties: false
    RuleNotifyModel:
      type: object
      properties:
        RuleId:
          type: integer
          format: int64
        PartnerIds:
          type: array
          items:
            type: integer
            format: int64
          nullable: true
      additionalProperties: false
    PartnerBaseModel:
      type: object
      properties:
        Id:
          type: integer
          format: int64
        Name:
          type: string
          nullable: true
      additionalProperties: false
    SegmentsWithPartnersModel:
      type: object
      properties:
        Id:
          type: integer
          format: int64
        Type:
          "$ref": "#/components/schemas/SegmentType"
        Name:
          type: string
          nullable: true
        Partners:
          type: array
          items:
            "$ref": "#/components/schemas/PartnerBaseModel"
          nullable: true
        PartnersCount:
          type: integer
          format: int32
          readOnly: true
      additionalProperties: false
    SegmentsWithPartnersModelResponseListModel:
      type: object
      properties:
        FilteredCount:
          type: integer
          format: int32
        Items:
          type: array
          items:
            "$ref": "#/components/schemas/SegmentsWithPartnersModel"
          nullable: true
      additionalProperties: false
    SegmentModel:
      type: object
      properties:
        Id:
          type: integer
          format: int64
        Type:
          "$ref": "#/components/schemas/SegmentType"
        Name:
          type: string
          nullable: true
        Partners:
          type: array
          items:
            type: integer
            format: int64
          nullable: true
      additionalProperties: false
    SportUpdateModel:
      type: object
      properties:
        SportId:
          type: integer
          format: int64
        IsEnabled:
          type: boolean
      additionalProperties: false
    ContestTypeModel:
      type: object
      properties:
        Id:
          type: integer
          format: int64
        Name:
          type: string
          nullable: true
        Abbreviation:
          type: string
          nullable: true
        MaxEntriesCount:
          type: integer
          format: int32
          nullable: true
        Type:
          "$ref": "#/components/schemas/FantasyContestType"
      additionalProperties: false
    TeamStatisticsModel:
      type: object
      properties:
        Id:
          type: integer
          format: int64
        Name:
          type: string
          nullable: true
        Abbreviation:
          type: string
          nullable: true
        UniformUrl:
          type: string
          nullable: true
        Point:
          type: integer
          format: int32
          nullable: true
        GamePlayed:
          type: integer
          format: int32
        Wins:
          type: integer
          format: int32
        Losses:
          type: integer
          format: int32
        Draws:
          type: integer
          format: int32
        GoalsScored:
          type: integer
          format: int32
        GoalsConceded:
          type: integer
          format: int32
        GoalsDifference:
          type: integer
          format: int32
        Stage:
          type: string
          nullable: true
        LogoUrl:
          type: string
          nullable: true
      additionalProperties: false
    MatchEventPlayerModel:
      type: object
      properties:
        EventTypeId:
          type: integer
          format: int64
        Name:
          type: string
          nullable: true
        Count:
          type: integer
          format: int32
        Point:
          type: number
          format: double
        PlayerId:
          type: integer
          format: int64
        PlayerName:
          type: string
          nullable: true
        TeamId:
          type: integer
          format: int64
        TeamName:
          type: string
          nullable: true
      additionalProperties: false
    MatchEventStatisticsModel:
      type: object
      properties:
        Count:
          type: integer
          format: int32
        Name:
          type: string
          nullable: true
        EventTypeId:
          type: integer
          format: int64
        EventType:
          "$ref": "#/components/schemas/EventTypes"
        Point:
          type: number
          format: double
        Players:
          type: array
          items:
            "$ref": "#/components/schemas/MatchEventPlayerModel"
          nullable: true
      additionalProperties: false
    MatchStatisticsModel:
      type: object
      properties:
        MatchEvents:
          type: array
          items:
            "$ref": "#/components/schemas/MatchEventStatisticsModel"
          nullable: true
      additionalProperties: false
    TeamEditModel:
      type: object
      properties:
        Id:
          type: integer
          format: int64
        Name:
          maxLength: 200
          minLength: 0
          type: string
          nullable: true
        Abbreviation:
          maxLength: 200
          minLength: 0
          type: string
          nullable: true
        ShortName:
          maxLength: 200
          minLength: 0
          type: string
          nullable: true
      additionalProperties: false
    TicketModel:
      type: object
      properties:
        Id:
          type: integer
          format: int64
        Name:
          maxLength: 255
          minLength: 0
          type: string
          nullable: true
        TicketRate:
          type: integer
          format: int32
          nullable: true
        ContestId:
          type: integer
          format: int64
          nullable: true
        TicketType:
          "$ref": "#/components/schemas/TicketTypes"
        TicketColor:
          maxLength: 255
          minLength: 0
          type: string
          nullable: true
        Count:
          type: integer
          format: int32
          nullable: true
        ContestCount:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    ClientTicketModel:
      type: object
      properties:
        ClientId:
          type: integer
          format: int64
        TicketId:
          type: integer
          format: int64
        Count:
          maximum: 1000
          minimum: 1
          type: integer
          format: int32
      additionalProperties: false
    PromoCodeModel:
      required:
      - Code
      type: object
      properties:
        Id:
          type: integer
          format: int64
        PartnerId:
          type: integer
          format: int64
          nullable: true
        TicketId:
          pattern: "^[^-0][0-9]*"
          type: integer
          format: int64
        ExpirationDate:
          type: string
          format: date-time
        UsersCount:
          pattern: "^[^-0][0-9]*"
          type: integer
          format: int32
        TicketCount:
          pattern: "^[^-0][0-9]*"
          type: integer
          format: int32
        Code:
          maxLength: 100
          minLength: 0
          type: string
      additionalProperties: false
    TicketReportModel:
      type: object
      properties:
        TicketId:
          type: integer
          format: int64
        TicketName:
          type: string
          nullable: true
        PartnerId:
          type: integer
          format: int64
          nullable: true
        UsedTicketsCount:
          type: integer
          format: int32
          nullable: true
        AvaliableCount:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    TicketReportResponseModel:
      type: object
      properties:
        TicketReports:
          type: array
          items:
            "$ref": "#/components/schemas/TicketReportModel"
          nullable: true
        FilteredCount:
          type: integer
          format: int32
      additionalProperties: false
    PromoCodeReportModel:
      type: object
      properties:
        PartnerId:
          type: integer
          format: int64
          nullable: true
        TicketName:
          type: string
          nullable: true
        TicketId:
          type: integer
          format: int64
        AvaliablePromocodesCount:
          type: integer
          format: int32
          nullable: true
        ActivatedPromocodesCount:
          type: integer
          format: int32
          nullable: true
      additionalProperties: false
    PromoCodeReportResponseModel:
      type: object
      properties:
        PromoCodeReports:
          type: array
          items:
            "$ref": "#/components/schemas/PromoCodeReportModel"
          nullable: true
        FilteredCount:
          type: integer
          format: int32
      additionalProperties: false
    ClientTicketHistoryModel:
      type: object
      properties:
        TicketId:
          type: integer
          format: int64
        TiketName:
          type: string
          nullable: true
        LineupId:
          type: integer
          format: int64
        LineupName:
          type: string
          nullable: true
        ContestId:
          type: integer
          format: int64
        ContestName:
          type: string
          nullable: true
        EntryDate:
          type: string
          format: date-time
        ContestEndDate:
          type: string
          format: date-time
          nullable: true
        Status:
          "$ref": "#/components/schemas/ContestStatusTypes"
        WinPlace:
          type: integer
          format: int32
          nullable: true
        WinningAmount:
          type: number
          format: double
          nullable: true
      additionalProperties: false
    ClientTicketHistoryListModel:
      type: object
      properties:
        Count:
          type: integer
          format: int32
        ClientTicketHistories:
          type: array
          items:
            "$ref": "#/components/schemas/ClientTicketHistoryModel"
          nullable: true
      additionalProperties: false
    AuthScheme:
      enum:
      - 0
      - 1
      - 2
      type: integer
      format: int32
    CasinoUserCredentials:
      type: object
      properties:
        PartnerId:
          type: integer
          format: int64
          nullable: true
        Token:
          type: string
          nullable: true
        Username:
          type: string
          nullable: true
        Password:
          type: string
          nullable: true
      additionalProperties: false
    GrantTypes:
      enum:
      - 0
      - 1
      type: integer
      format: int32
    AuthorizationModel:
      type: object
      properties:
        AuthScheme:
          "$ref": "#/components/schemas/AuthScheme"
        Data:
          "$ref": "#/components/schemas/CasinoUserCredentials"
        GrantType:
          "$ref": "#/components/schemas/GrantTypes"
      additionalProperties: false
    AutorizationResponseModel:
      type: object
      properties:
        Token:
          type: string
          nullable: true
        ExpirationDuration:
          type: integer
          format: int64
      additionalProperties: false
    TranslationGroupModel:
      type: object
      properties:
        Id:
          type: integer
          format: int64
        Name:
          type: string
          nullable: true
      additionalProperties: false
    TranslationGroupModelResponseListModel:
      type: object
      properties:
        FilteredCount:
          type: integer
          format: int32
        Items:
          type: array
          items:
            "$ref": "#/components/schemas/TranslationGroupModel"
          nullable: true
      additionalProperties: false
    TranslationGroupKeyModel:
      type: object
      properties:
        TranslationGroup:
          "$ref": "#/components/schemas/TranslationGroupModel"
        Keys:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    WelcomeVideoModel:
      type: object
      properties:
        Id:
          type: integer
          format: int64
        Link:
          type: string
          nullable: true
        PartnerId:
          type: integer
          format: int64
        IsActive:
          type: boolean
        LanguageId:
          type: integer
          format: int64
          nullable: true
        IsShow:
          type: boolean
        Title:
          maxLength: 18
          minLength: 0
          type: string
          nullable: true
      additionalProperties: false
    WelcomeVideoAddModel:
      type: object
      properties:
        Link:
          type: string
          nullable: true
        PartnerId:
          type: integer
          format: int64
        IsActive:
          type: boolean
        LanguageId:
          type: integer
          format: int64
          nullable: true
        Title:
          maxLength: 18
          minLength: 0
          type: string
          nullable: true
      additionalProperties: false
  securitySchemes:
    Bearer:
      type: apiKey
      description: 'JWT Authorization header using the Bearer scheme. Example: "Authorization:
        Bearer {token}"'
      name: Authorization
      in: header
security:
- Bearer: []
